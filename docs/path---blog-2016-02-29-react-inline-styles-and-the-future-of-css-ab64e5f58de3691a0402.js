webpackJsonp([0xa11e7b156e56],{713:function(e,t){e.exports={data:{markdownRemark:{html:'<p>Writing and maintaining CSS for large applications (and large teams) can be challenging. Teams often have trouble with brittle selectors, naming collisions, specificity, and pile-ups of dead code.</p>\n<p>After seeing these issues first-hand on large projects, we built Radium: a JavaScript library for styling React applications with inline styles. In the context of a React application, inline styling elegantly solves many of the issues with large-scale CSS. It also gives you the benefits of a CSS preprocessor like Sass, with extra power for expressive styling.</p>\n<p>In the screencast below, I compare the benefits of approaches like Radium to some upcoming and proposed additions to the CSS specification that will help make scalable CSS easy in the future, whether you’re using React or not. I’ll also cover:</p>\n<ul>\n<li>CSS Modules</li>\n<li>Shadow DOM</li>\n<li>CSS Variables and Custom Media Queries</li>\n<li>Native CSS Extends</li>\n</ul>\n<div>\n          <div\n            class="gatsby-resp-iframe-wrapper"\n            style="padding-bottom: 56.2%; position: relative; height: 0; overflow: hidden;"\n          >\n            <iframe src="https://www.youtube.com/embed/k3OF4A30jSQ?feature=oembed" frameborder="0" allowfullscreen style="\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          "></iframe>\n          </div>\n          </div>\n<p>Read the docs: <a href="http://stack.formidable.com/radium/">http://stack.formidable.com/radium/</a><br />\nFind the code: <a href="https://github.com/FormidableLabs/radium">https://github.com/FormidableLabs/radium</a></p>',fields:{slug:"/blog/2016/02/29/react-inline-styles-and-the-future-of-css/"},frontmatter:{id:11,authorId:11,categoryIds:[6,12],date:"2016-02-29",pageDescription:"",pageKeywords:"",pageTitle:"",path:"/2016/02/29/react-inline-styles-and-the-future-of-css/",title:"React Inline Styles and the Future of CSS"}}},pathContext:{slug:"/blog/2016/02/29/react-inline-styles-and-the-future-of-css/",prev:{fields:{slug:"/blog/2016/02/15/victory-js/"},frontmatter:{authorId:2,categoryIds:[5,6,8],date:"2016-02-15",id:10,title:"Victory.js"}}}}}});