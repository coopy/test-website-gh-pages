webpackJsonp([50958798715287],{737:function(a,e){a.exports={data:{markdownRemark:{html:'<h2 id="a-multi-repo-developer-tool-for-react-native-app-and-library-authors"><a href="#a-multi-repo-developer-tool-for-react-native-app-and-library-authors" aria-hidden="true" class="anchor"><span aria-hidden=\'true\' class=\'anchor-icon\' /></a>A multi-repo developer tool for React Native app and library authors</h2>\n<p>We love React Native. Sometimes, though, it doesn’t feel like it reciprocates your love. One such time is when working with codebases that span across multiple repositories. When you want to make changes to a package your app depends on, achieving that snappy hot-reloading workflow you’ve grown accustomed to suddenly becomes a lot more difficult.</p>\n<h2 id="packager-woes"><a href="#packager-woes" aria-hidden="true" class="anchor"><span aria-hidden=\'true\' class=\'anchor-icon\' /></a>Packager woes</h2>\n<p>If you’ve developed libraries for React Native, you’ve probably noticed that “Packager”, the development server that bundles your app’s JavaScript sources, doesn’t play nicely with <code class="language-text">npm link</code>. You might have experienced the dreaded Haste <code class="language-text">@providesModule name collision</code> error, or had the packager crash with a mysteriously missing Babel preset.</p>\n<p>The React Native core team is working on improving the Packager, and better multi-repo support is high on the <a href="https://github.com/facebook/react-native/issues/10552">wish list</a>. In the meantime, while developing <a href="https://formidable.com/open-source/victory/">Victory Native</a>, our charting library for React Native, we needed a solution that works today.</p>\n<h2 id="enter-whackage"><a href="#enter-whackage" aria-hidden="true" class="anchor"><span aria-hidden=\'true\' class=\'anchor-icon\' /></a>Enter whackage</h2>\n<p><a href="https://github.com/FormidableLabs/whackage">Whackage</a> is a hot-reloading-friendly <code class="language-text">npm link</code> replacement that works with React Native. It synchronizes changes in your local workspace to your project’s <code class="language-text">node_modules</code> without using symlinks, and automatically generates a packager blacklist for linked modules to avoid Haste naming collisions.</p>\n<p>You can install Whackage with:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> -g whackage</code></pre>\n      </div>\n<p>You now have a command line tool called <code class="language-text">whack</code>. To get started, initialize a new <code class="language-text">whackage.json</code> in your project directory with <code class="language-text">whack init</code>, and link a local copy of your package with <code class="language-text">whack link &lt;path&gt;</code>:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">$ whack init\n$ whack <span class="token function">link</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/victory-core-native</code></pre>\n      </div>\n<p>Your project now has a <code class="language-text">whackage.json</code> file that looks something like this:</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"include"</span><span class="token operator">:</span> <span class="token string">"/**/*.js"</span><span class="token punctuation">,</span>\n  <span class="token property">"exclude"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"/node_modules/*"</span><span class="token punctuation">,</span> <span class="token string">".babelrc"</span><span class="token punctuation">,</span> <span class="token string">".git"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"victory-core-native"</span><span class="token operator">:</span> <span class="token string">"../../victory-core-native"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>All that is left to do is to start the Whackage server with <code class="language-text">whack run &lt;npm_task&gt;</code>. In a typical React Native project the npm task to start the Packager is <code class="language-text">start</code>, in which case the corresponding whackage command is:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">$ whack run start</code></pre>\n      </div>\n<p>And that’s it! You can now edit code in the linked package, and see the changes reflected in your app immediately, as they should be.</p>\n<h2 id="give-it-a-code-classlanguage-textwhackcode"><a href="#give-it-a-code-classlanguage-textwhackcode" aria-hidden="true" class="anchor"><span aria-hidden=\'true\' class=\'anchor-icon\' /></a>Give it a <code class="language-text">whack</code></h2>\n<p>Whackage is, suffice to say, a blunt instrument. As its name suggests, it’s a bit wacky and a bit hacky, but it gets the job done. We wrote it to scratch our own itch, and we hope it can be helpful to you, too.</p>\n<p>The source code is available at <a href="https://github.com/FormidableLabs/whackage">https://github.com/FormidableLabs/whackage</a>. For more information, <a href="https://github.com/FormidableLabs/whackage/blob/master/README.md">read the docs</a>, or turn to <code class="language-text">whack --help</code> for assistance.</p>\n<div>\n          <div\n            class="gatsby-resp-iframe-wrapper"\n            style="padding-bottom: 9.090909090909092%; position: relative; height: 0; overflow: hidden;"\n          >\n            <iframe src="https://ghbtns.com/github-btn.html?user=formidablelabs&amp;repo=whackage&amp;type=star&amp;count=true&amp;size=large" frameborder="0" style="\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          "></iframe>\n          </div>\n          </div>',fields:{slug:"/blog/2016/12/01/introducing-whackage/"},frontmatter:{id:35,authorId:1,categoryIds:[4,3,2,5,6,7],date:"2016-12-01",pageDescription:"Whackage is a hot-reloading-friendly `npm link` replacement that works with React Native. It synchronizes changes in your local workspace to your project's `node_modules` without using symlinks, and automatically generates a packager blacklist for linked modules to avoid Haste naming collisions.",pageKeywords:"react, react native, developer, tooling, npm, packager, haste, providesModule",pageTitle:"Whackage - A multi-repo developer tool for React Native app and library authors",path:"/2016/12/01/introducing-whackage/",title:"Introducing Whackage"}}},pathContext:{slug:"/blog/2016/12/01/introducing-whackage/",prev:{fields:{slug:"/blog/2016/11/09/flexible-charting-in-react-with-victory/"},frontmatter:{authorId:2,categoryIds:[4,10,5,6,1,8],date:"2016-11-09",id:34,title:"Flexible Charting in React with Victory (and Introducing FormidableCharts)"}}}}}});