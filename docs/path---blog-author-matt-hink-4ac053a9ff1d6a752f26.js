webpackJsonp([0xc182a4a51549],{781:function(e,t){e.exports={data:{allMarkdownRemark:{totalCount:3,edges:[{node:{fields:{slug:"/blog/2017/composition-patterns-in-redux-saga/"},frontmatter:{id:47,authorId:18,date:"2017-05-17",title:"JavaScript Power Tools Part II: Composition Patterns in redux-saga",preview:"In the last article, we investigated redux-saga's approach to the Saga pattern in JavaScript. Specifically, the concept of a generator function that yields command objects, which describe the effects we want to happen, and rely on an external driver to actually perform those effects..."}}},{node:{fields:{slug:"/blog/2017/javascript-power-tools-redux-saga/"},frontmatter:{id:46,authorId:18,date:"2017-05-10",title:"JavaScript Power Tools: redux-saga",preview:"At Formidable, we're always refining our knowledge of modern JavaScript tech. This blog series, entitled JavaScript Power Tools, will take a deeper look at some of the tools, frameworks, and libraries we use to deliver reliable and maintainable code. Today, I want to talk about [`redux-saga`]..."}}},{node:{fields:{slug:"/blog/2017/real-world-redux-saga-patterns/"},frontmatter:{id:49,authorId:18,date:"2017-06-07",title:"Javascript Power Tools Part III: Real-world redux-saga Patterns",preview:"In the past two articles, we've talked a lot about redux-saga in the abstract, without much concern for real-world applications. Now that weâ€™re equipped with new knowledge, we're ready to jump in and start putting the pieces back together. First, we'll take a look at a pattern..."}}}]}},pathContext:{authorId:"18"}}}});