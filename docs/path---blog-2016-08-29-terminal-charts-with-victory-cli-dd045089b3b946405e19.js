webpackJsonp([0xdede482c4d87],{724:function(e,t){e.exports={data:{markdownRemark:{html:'<blockquote>\n<p>The ability to collect, analyze, triangulate and visualize vast amounts of data in real time is something the human race has never had before.<br>\n-Rick Smolan</p>\n</blockquote>\n<p>After pushing out <code class="language-text">webpack-dashboard</code> and seeing how much people enjoy terminal based tooling, I thought perhaps I should see what else I can explore in this space. <a href="/">Formidable</a>’s ReactJS based data visualization library <a href="/open-source/victory/">Victory</a> seemed like an awesome candidate for a command line render target.</p>\n<p>I saw a project, <a href="https://github.com/mathisonian/hyperchart">hyperchart</a>, by Matthew Conlen, that allowed users to generate interactive Victory charts into <a href="https://github.com/mathisonian/hyperterm-window">hyperterm-window</a>. This looked awesome, but I was looking for a way to expand the feature set and operate in a broader range of TERMs.</p>\n<p>I had also seen some ascii/ansi style visualizations in <a href="https://github.com/yaronn/blessed-contrib">blessed-contrib</a> while building <code class="language-text">webpack-dashboard</code>, and they seemed super cool, but porting would be too much of a challenge given the differences in APIs. Of course, ascii/ansi style charts didn’t seem practical for the mainstream use case.</p>\n<p>Then I realized something, Victory outputs valid SVG markup. This, coupled with <code class="language-text">ReactDOM.renderToString</code> actually makes command line chart generation really easy. I got to work on it, and today I’m happy to announce the initial release of <a href="https://github.com/FormidableLabs/victory-cli">Victory CLI</a>!</p>\n<p>Victory CLI is an easy to use command line interface for generating and displaying Victory based data visualizations. It can:</p>\n<ul>\n<li>Render a variety of chart types</li>\n<li>Use built in themes</li>\n<li>Render to PNG</li>\n<li>Render to SVG</li>\n<li>Display PNG renders in iTerm3</li>\n<li>Take a custom JSON data input</li>\n<li>Take a custom component script input to render from</li>\n</ul>\n<p>Check it out in action:</p>\n<p><img src="/cli-0a366de1ef9e102b7c8fa4832a656ff1.gif"></p>\n<p>If you think this is cool and want to give it a try just <code class="language-text">npm install -g victory-cli</code> and head over to <a href="https://github.com/FormidableLabs/victory-cli">https://github.com/FormidableLabs/victory-cli</a> to get started!</p>\n<div>\n          <div\n            class="gatsby-resp-iframe-wrapper"\n            style="padding-bottom: 9.090909090909092%; position: relative; height: 0; overflow: hidden;"\n          >\n            <iframe src="https://ghbtns.com/github-btn.html?user=formidablelabs&amp;repo=victory-cli&amp;type=star&amp;count=true&amp;size=large" frameborder="0" scrolling="0" style="\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          "></iframe>\n          </div>\n          </div>\n<div>\n          <div\n            class="gatsby-resp-iframe-wrapper"\n            style="padding-bottom: 9.090909090909092%; position: relative; height: 0; overflow: hidden;"\n          >\n            <iframe src="https://ghbtns.com/github-btn.html?user=kenwheeler&amp;type=follow&amp;count=true&amp;size=large" frameborder="0" scrolling="0" style="\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          "></iframe>\n          </div>\n          </div>',fields:{slug:"/blog/2016/08/29/terminal-charts-with-victory-cli/"},frontmatter:{id:22,authorId:9,categoryIds:[5,6,8],date:"2016-08-29",pageDescription:"Introducing Victory CLI, a command line chart to image library.",pageKeywords:"Victory, charting, data,data visualization, CLI",pageTitle:"",path:"/2016/08/29/terminal-charts-with-victory-cli/",title:"Terminal Charts with Victory CLI"}}},pathContext:{slug:"/blog/2016/08/29/terminal-charts-with-victory-cli/",prev:{fields:{slug:"/blog/2016/08/22/make-dope-beats-with-reactjs/"},frontmatter:{authorId:9,categoryIds:[5,6,1],date:"2016-08-22",id:21,title:"Make Dope Beats with ReactJS"}}}}}});