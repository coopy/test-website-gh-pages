webpackJsonp([0xf62151bb4437],{738:function(e,t){e.exports={data:{markdownRemark:{html:'<p>When you have an application driven by rich media, like images, it can be hard to develop a cohesive, universal color scheme. A lot of the time, applications end up defaulting to shades of black and white to avoid clashing with the rich colors in their content. If you have only a few static images, you can work around this by just manually picking the best colors, but when the images are dynamic, it’s almost impossible to know which colors look the <em>best</em>. You can process the image on a server and store the palette in your database, but that means more data to process, store, and send to the client.</p>\n<p>That’s why we’re excited to announce <a href="https://github.com/FormidableLabs/react-image-palette">react-image-palette</a>, an easy way to dynamically parse vibrant and accessible color palettes directly in your React application. react-image-palette will process an image using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API">Canvas API</a> and then generate a color palette based on the most dominant colors, right in the client. No server processing, no data to store, just provide a URL to the image and react-image-palette will take care of the parsing. The colors in the palette are also guaranteed to meet the <a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html">WCAG contrast standards</a> so you never have to worry about readability.\nCheck out <a href="http://react-image-palette-demo.surge.sh/">the demo application</a> to see what it can do.</p>\n<div>\n          <div\n            class="gatsby-resp-iframe-wrapper"\n            style="padding-bottom: 9.090909090909092%; position: relative; height: 0; overflow: hidden;"\n          >\n            <p>\n<iframe src="https://ghbtns.com/github-btn.html?user=formidablelabs&amp;repo=react-image-palette&amp;type=star&amp;count=true" frameborder="0" style="\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          "></iframe>\n</p>\n          </div>\n          </div>\n<div>\n          <div\n            class="gatsby-resp-iframe-wrapper"\n            style="padding-bottom: 9.090909090909092%; position: relative; height: 0; overflow: hidden;"\n          >\n            <p>\n<iframe src="https://ghbtns.com/github-btn.html?user=aweary&amp;type=follow&amp;count=true" frameborder="0" scrolling="0" style="\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          "></iframe>\n</p>\n          </div>\n          </div>',fields:{slug:"/blog/2017/adaptive-uis-with-react-image-palette/"},frontmatter:{id:53,authorId:6,categoryIds:[1,4,5],date:"2017-10-9",pageDescription:"react-image-palette is an easy way to dynamically parse vibrant and accessible color palettes directly in your React application.",pageKeywords:"React, Adaptive UI, react color palette, accessible color palettes",pageTitle:"Adaptive UIs with react-image-palette",path:"/2017/adaptive-uis-with-react-image-palette/",title:"Adaptive UIs with react-image-palette"}}},pathContext:{slug:"/blog/2017/adaptive-uis-with-react-image-palette/",prev:{fields:{slug:"/blog/2017/building-an-offline-only-website/"},frontmatter:{authorId:21,categoryIds:[1,18],date:"2017-09-27",id:52,title:"Building an Offline-Only Website"}}}}}});