{"version":3,"sources":["webpack:///path---gallery-multiple-dependent-axes-0af177dff4145f44f893.js","webpack:///./.cache/json/gallery-multiple-dependent-axes.json"],"names":["webpackJsonp","864","module","exports","data","markdownRemark","html","frontmatter","id","scope","title","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,24DAAu4DC,aAA8BC,GAAA,EAAAC,MAAA,KAAAC,MAAA,2BAAsDC,QAAWC,KAAA,uCAA6CC,aAAgBD,KAAA","file":"path---gallery-multiple-dependent-axes-0af177dff4145f44f893.js","sourcesContent":["webpackJsonp([167463357769815],{\n\n/***/ 864:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<pre class=\\\"pre\\\"><code class=\\\"language-playground_norender\\\">const data = [\\n  [{ x: 1, y: 1 }, { x: 2, y: 2 }, { x: 3, y: 3 }, { x: 4, y: 4 }],\\n  [{ x: 1, y: 400 }, { x: 2, y: 350 }, { x: 3, y: 300 }, { x: 4, y: 250 }],\\n  [{ x: 1, y: 75 }, { x: 2, y: 85 }, { x: 3, y: 95 }, { x: 4, y: 100 }]\\n];\\n// find maxima for normalizing data\\nconst maxima = data.map(\\n\\t(dataset) =&gt; Math.max(...dataset.map((d) =&gt; d.y))\\n);\\n\\nconst xOffsets = [50, 200, 350];\\nconst tickPadding = [ 0, 0, -15 ];\\nconst anchors = [&quot;end&quot;, &quot;end&quot;, &quot;start&quot;];\\nconst colors = [&quot;black&quot;, &quot;red&quot;, &quot;blue&quot;];\\n\\nclass App extends React.Component {\\n\\n  render() {\\n    return (\\n      &lt;div&gt;\\n        &lt;VictoryChart\\n          theme={VictoryTheme.material}\\n          width={400} height={400}\\n          domain={{ y: [0, 1] }}\\n        &gt;\\n         &lt;VictoryAxis /&gt;\\n          {data.map((d, i) =&gt; (\\n            &lt;VictoryAxis dependentAxis\\n              key={i}\\n              offsetX={xOffsets[i]}\\n              style={{\\n                axis: { stroke: colors[i] },\\n                ticks: { padding: tickPadding[i] },\\n                tickLabels: { fill: colors[i], textAnchor: anchors[i] }\\n              }}\\n              // Use normalized tickValues (0 - 1)\\n              tickValues={[0.25, 0.5, 0.75, 1]}\\n              // Re-scale ticks by multiplying by correct maxima\\n              tickFormat={(t) =&gt; t * maxima[i]}\\n            /&gt;\\n          ))}\\n          {data.map((d, i) =&gt; (\\n            &lt;VictoryLine\\n              key={i}\\n              data={d}\\n              style={{ data: { stroke: colors[i] } }}\\n              // normalize data\\n              y={(datum) =&gt; datum.y / maxima[i]}\\n            /&gt;\\n          ))}\\n        &lt;/VictoryChart&gt;\\n      &lt;/div&gt;\\n    );\\n  }\\n}\\n\\nReactDOM.render(&lt;App/&gt;, mountNode);</code></pre>\",\"frontmatter\":{\"id\":7,\"scope\":null,\"title\":\"Multiple Dependent Axes\"},\"fields\":{\"slug\":\"/gallery/multiple-dependent-axes/\"}}},\"pathContext\":{\"slug\":\"/gallery/multiple-dependent-axes/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---gallery-multiple-dependent-axes-0af177dff4145f44f893.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<pre class=\\\"pre\\\"><code class=\\\"language-playground_norender\\\">const data = [\\n  [{ x: 1, y: 1 }, { x: 2, y: 2 }, { x: 3, y: 3 }, { x: 4, y: 4 }],\\n  [{ x: 1, y: 400 }, { x: 2, y: 350 }, { x: 3, y: 300 }, { x: 4, y: 250 }],\\n  [{ x: 1, y: 75 }, { x: 2, y: 85 }, { x: 3, y: 95 }, { x: 4, y: 100 }]\\n];\\n// find maxima for normalizing data\\nconst maxima = data.map(\\n\\t(dataset) =&gt; Math.max(...dataset.map((d) =&gt; d.y))\\n);\\n\\nconst xOffsets = [50, 200, 350];\\nconst tickPadding = [ 0, 0, -15 ];\\nconst anchors = [&quot;end&quot;, &quot;end&quot;, &quot;start&quot;];\\nconst colors = [&quot;black&quot;, &quot;red&quot;, &quot;blue&quot;];\\n\\nclass App extends React.Component {\\n\\n  render() {\\n    return (\\n      &lt;div&gt;\\n        &lt;VictoryChart\\n          theme={VictoryTheme.material}\\n          width={400} height={400}\\n          domain={{ y: [0, 1] }}\\n        &gt;\\n         &lt;VictoryAxis /&gt;\\n          {data.map((d, i) =&gt; (\\n            &lt;VictoryAxis dependentAxis\\n              key={i}\\n              offsetX={xOffsets[i]}\\n              style={{\\n                axis: { stroke: colors[i] },\\n                ticks: { padding: tickPadding[i] },\\n                tickLabels: { fill: colors[i], textAnchor: anchors[i] }\\n              }}\\n              // Use normalized tickValues (0 - 1)\\n              tickValues={[0.25, 0.5, 0.75, 1]}\\n              // Re-scale ticks by multiplying by correct maxima\\n              tickFormat={(t) =&gt; t * maxima[i]}\\n            /&gt;\\n          ))}\\n          {data.map((d, i) =&gt; (\\n            &lt;VictoryLine\\n              key={i}\\n              data={d}\\n              style={{ data: { stroke: colors[i] } }}\\n              // normalize data\\n              y={(datum) =&gt; datum.y / maxima[i]}\\n            /&gt;\\n          ))}\\n        &lt;/VictoryChart&gt;\\n      &lt;/div&gt;\\n    );\\n  }\\n}\\n\\nReactDOM.render(&lt;App/&gt;, mountNode);</code></pre>\",\"frontmatter\":{\"id\":7,\"scope\":null,\"title\":\"Multiple Dependent Axes\"},\"fields\":{\"slug\":\"/gallery/multiple-dependent-axes/\"}}},\"pathContext\":{\"slug\":\"/gallery/multiple-dependent-axes/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/gallery-multiple-dependent-axes.json\n// module id = 864\n// module chunks = 167463357769815"],"sourceRoot":""}