webpackJsonp([0x7e26bf806792],{871:function(t,n){t.exports={data:{markdownRemark:{html:'<pre class="pre"><code class="language-playground_norender">const directions = {\n  0: &quot;E&quot;, 45: &quot;NE&quot;, 90: &quot;N&quot;, 135: &quot;NW&quot;,\n  180: &quot;W&quot;, 225: &quot;SW&quot;, 270: &quot;S&quot;, 315: &quot;SE&quot;\n};\n\nconst orange = { base: &quot;gold&quot;, highlight: &quot;darkOrange&quot; };\n\nconst red = { base: &quot;tomato&quot;, highlight: &quot;orangeRed&quot; };\n\nconst innerRadius = 30;\n\nclass CompassCenter extends React.Component {\n\n  render() {\n    const { origin } = this.props;\n    const circleStyle = {\n      stroke: red.base, strokeWidth: 2, fill: orange.base\n    };\n    return (\n      &lt;g&gt;\n        &lt;circle\n          cx={origin.x} cy={origin.y} r={innerRadius} style={circleStyle}\n        /&gt;\n      &lt;/g&gt;\n    );\n  }\n}\n\nclass CenterLabel extends React.Component {\n  render() {\n    const { datum, active, color } = this.props;\n    const text = [ `${directions[datum._x]}`, `${Math.round(datum._y1)} mph` ];\n    const baseStyle = { fill: color.highlight, textAnchor: &quot;middle&quot; };\n    const style = [\n      { ...baseStyle, fontSize: 18, fontWeight: &quot;bold&quot; },\n      { ...baseStyle, fontSize: 12 }\n    ];\n\n    return active ?\n      (\n        &lt;VictoryLabel\n          text={text} style={style} x={175} y={175} renderInPortal\n        /&gt;\n      ) : null;\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { wind: this.getWindData() };\n  }\n\n  componentDidMount() {\n    this.setStateInterval = window.setInterval(() =&gt; {\n      this.setState({ wind: this.getWindData() });\n    }, 4000);\n  }\n\n  getWindData() {\n    return _.keys(directions).map((d) =&gt; {\n      const speed = Math.floor(_.random() * 17) + 4;\n      return {\n        windSpeed: speed,\n        windGust: speed + _.random(2, 10),\n        windBearing: +d\n      };\n    });\n  }\n\n  render() {\n    return (\n      &lt;VictoryChart\n        polar\n        animate={{ duration: 500, onLoad: { duration: 500 } }}\n        theme={VictoryTheme.material}\n        innerRadius={innerRadius}\n        domainPadding={{ y: 10 }}\n        events={[{\n          childName: &quot;all&quot;,\n          target: &quot;data&quot;,\n          eventHandlers: {\n            onMouseOver: () =&gt; {\n              return [\n                { target: &quot;labels&quot;, mutation: () =&gt; ({ active: true }) },\n                { target: &quot;data&quot;, mutation: () =&gt; ({ active: true }) }\n              ];\n            },\n            onMouseOut: () =&gt; {\n              return [\n                { target: &quot;labels&quot;, mutation: () =&gt; ({ active: false }) },\n                { target: &quot;data&quot;, mutation: () =&gt; ({ active: false }) }\n              ];\n            }\n          }\n        }]}\n      &gt;\n        &lt;VictoryPolarAxis\n          dependentAxis\n          labelPlacement=&quot;vertical&quot;\n          style={{ axis: { stroke: &quot;none&quot; } }}\n          tickFormat={() =&gt; &quot;&quot;}\n        /&gt;\n        &lt;VictoryPolarAxis\n          labelPlacement=&quot;parallel&quot;\n          tickValues={_.keys(directions).map((k) =&gt; +k)}\n          tickFormat={_.values(directions)}\n        /&gt;\n        &lt;VictoryStack&gt;\n          &lt;VictoryBar\n            style={{ data: {\n              fill: (d, a) =&gt; a ? orange.highlight : orange.base,\n              width: 40\n            } }}\n            data={this.state.wind}\n            x=&quot;windBearing&quot;\n            y=&quot;windSpeed&quot;\n            labels={() =&gt; &quot;&quot;}\n            labelComponent={&lt;CenterLabel color={orange}/&gt;}\n          /&gt;\n          &lt;VictoryBar\n            style={{ data: {\n              fill: (d, a) =&gt; a ? red.highlight : red.base,\n              width: 40\n            } }}\n            data={this.state.wind}\n            x=&quot;windBearing&quot;\n            y={(d) =&gt; d.windGust - d.windSpeed}\n            labels={() =&gt; &quot;&quot;}\n            labelComponent={&lt;CenterLabel color={red}/&gt;}\n          /&gt;\n        &lt;/VictoryStack&gt;\n        &lt;CompassCenter/&gt;\n      &lt;/VictoryChart&gt;\n    );\n  }\n }\n\nReactDOM.render(&lt;App/&gt;, mountNode);</code></pre>',frontmatter:{id:12,scope:null,title:"Stacked Polar Bars"},fields:{slug:"/gallery/stacked-polar-bars/"}}},pathContext:{slug:"/gallery/stacked-polar-bars/"}}}});
//# sourceMappingURL=path---gallery-stacked-polar-bars-91b076c985a8d1e02741.js.map