webpackJsonp([0x82b8f9c7404d],{836:function(e,o){e.exports={data:{markdownRemark:{html:'<h1 id="victorycursorcontainer"><a href="#victorycursorcontainer" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>VictoryCursorContainer</h1>\n<p><code class="language-text">VictoryCursorContainer</code> adds a cursor to a chart to inspect coordinates.\nThe cursor can either be a 2-dimensional crosshair, or a 1-dimensional line.\nThe cursor moves with the mouse (or on touch on mobile devices) along the visible domain of the chart.\nThe cursor can also display a label for the active coordinates using the <code class="language-text">cursorLabel</code> prop.</p>\n<p><code class="language-text">VictoryCursorContainer</code> may be used with any Victory component that works with an x-y coordinate\nsystem, and should be added as the <code class="language-text">containerComponent</code> of the top-level component.\nHowever, the component that uses it must be standalone\n(<code class="language-text">standalone={true}</code>), which is the default for all top-level Victory components.</p>\n<p>Note that the cursor allows you to inspect the entire domain, not just the data points.\nIf you would like to instead highlight only the data points, consider using <a href="https://formidable.com/open-source/victory/docs/victory-voronoi-container">VictoryVoronoiContainer</a>.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryScatter\n  containerComponent={\n    &lt;VictoryCursorContainer\n      cursorLabel={(d) =&gt; `${round(d.x, 2)}, ${round(d.y, 2)}`}\n    /&gt;\n  }\n/&gt;</code></pre>\n<h2 id="props"><a href="#props" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Props</h2>\n<p><code class="language-text">VictoryCursorContainer</code> uses a superset of props used by <a href="https://formidable.com/open-source/victory/docs/victory-container">VictoryContainer</a>. All props are optional.</p>\n<h3 id="cursorcomponent"><a href="#cursorcomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>cursorComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">cursorComponent</code> prop takes a component instance which will be used to render a cursor element. The new element created will be supplied with <code class="language-text">x1</code>, <code class="language-text">y1</code>, <code class="language-text">x2</code> and <code class="language-text">y2</code> positioning props. If a <code class="language-text">cursorComponent</code> is not supplied, a new <a href="https://formidable.com/open-source/victory/docs/victory-primitives#linesegment">LineSegment</a> component will be rendered.</p>\n<p><em>default:</em> <code class="language-text">cursorComponent={&lt;LineSegment/&gt;}</code></p>\n<h3 id="cursordimension"><a href="#cursordimension" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>cursorDimension</h3>\n<p><code class="language-text">type: &quot;x&quot; || &quot;y&quot;</code></p>\n<p>When the <code class="language-text">cursorDimension</code> prop is set, the cursor will be a line to inspect the given dimension\n(either “x” or “y”). When this prop is not specified, the cursor will be a 2-dimensional crosshair.\nFor example, if you would like to inspect the time of time-series data, set <code class="language-text">dimension={&quot;x&quot;}</code>;\nthe cursor will then be a vertical line that will inspect the time value of the current mouse position.</p>\n<p><em>example:</em> <code class="language-text">cursorDimension=&quot;x&quot;</code></p>\n<pre class="pre"><code class="language-playground">&lt;VictoryScatter\n  containerComponent={\n    &lt;VictoryCursorContainer\n      cursorDimension=&quot;x&quot;\n      cursorLabel={(d) =&gt; `${round(d.x, 2)}, ${round(d.y, 2)}`}\n    /&gt;\n  }\n/&gt;</code></pre>\n<h3 id="cursorlabel"><a href="#cursorlabel" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>cursorLabel</h3>\n<p><code class="language-text">type: function</code></p>\n<p>The <code class="language-text">cursorLabel</code> prop defines the label that will appear next to the cursor.\nA label will only appear if <code class="language-text">cursorLabel</code> is set. This prop should be given as a function of a point (an Object with <code class="language-text">x</code> and <code class="language-text">y</code> properties).</p>\n<p><em>example:</em> <code class="language-text">cursorLabel={(point) =&gt; point.x}</code></p>\n<h3 id="cursorlabelcomponent"><a href="#cursorlabelcomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>cursorLabelComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">cursorLabelComponent</code> prop takes a component instance which will be used to render a label for the cursor. The new element created from the passed <code class="language-text">cursorLabelComponent</code> will be supplied with the following props: <code class="language-text">x</code>, <code class="language-text">y</code>, <code class="language-text">active</code>, <code class="language-text">text</code>. If <code class="language-text">cursorLabelComponent</code> is omitted, a new <a href="https://formidable.com/open-source/victory/docs/victory-label">VictoryLabel</a> will be created with the props described above.</p>\n<p><em>default:</em> <code class="language-text">cursorLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\n<h3 id="cursorlabeloffset"><a href="#cursorlabeloffset" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>cursorLabelOffset</h3>\n<p><code class="language-text">type: number || { x: number, y: number }</code></p>\n<p>The <code class="language-text">cursorLabelOffset</code> prop determines the pixel offset of the cursor label from the cursor point.\nThis prop should be an Object with <code class="language-text">x</code> and <code class="language-text">y</code> properties, or a number to be used for both dimensions.</p>\n<p><em>default:</em> <code class="language-text">cursorLabelOffset={{ x: 5, y: -10 }}</code></p>\n<h3 id="defaultcursorvalue"><a href="#defaultcursorvalue" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>defaultCursorValue</h3>\n<p><code class="language-text">type: number || { x: number, y: number }</code></p>\n<p>Whenever the mouse is not over the chart, the cursor will not be displayed.\nIf instead you would like to keep it displayed, use the <code class="language-text">defaultCursorValue</code> prop to set the default value. The prop should be a point (an Object with <code class="language-text">x</code> and <code class="language-text">y</code> properties) for 2-dimensional cursors, or a number for 1-dimensional cursors.</p>\n<p><em>examples:</em> <code class="language-text">defaultCursorValue={{x: 1, y: 1}}</code>, <code class="language-text">defaultCursorValue={0}</code></p>\n<h3 id="disable"><a href="#disable" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>disable</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p>When the <code class="language-text">disable</code> prop is set to <code class="language-text">true</code>, <code class="language-text">VictoryCursorContainer</code> events will not fire.</p>\n<h3 id="oncursorchange"><a href="#oncursorchange" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>onCursorChange</h3>\n<p><code class="language-text">type: function</code></p>\n<p>If provided, the <code class="language-text">onChange</code> function will be called every time the cursor value changes. <code class="language-text">onCursorChange</code> is called with <code class="language-text">value</code> (the updated cursor value) and <code class="language-text">props</code> (the props used by <code class="language-text">VictoryCursorContainer</code>). A common use for <code class="language-text">onChange</code> is to save the cursor value to state and use it in another part of the view.</p>\n<p><em>example:</em> <code class="language-text">onChange={(value, props) =&gt; this.setState({cursorValue: value})}</code></p>',frontmatter:{id:12,scope:["round"],title:"VictoryCursorContainer"},fields:{slug:"/docs/victory-cursor-container/"}}},pathContext:{slug:"/docs/victory-cursor-container/"}}}});
//# sourceMappingURL=path---docs-victory-cursor-container-3ae0a66c0716a475181e.js.map