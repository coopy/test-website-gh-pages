webpackJsonp([0xd2e96e8b48c],{867:function(t,o){t.exports={data:{markdownRemark:{html:'<pre class="pre"><code class="language-playground_norender">const colors = [ &quot;#428517&quot;, &quot;#77D200&quot;, &quot;#D6D305&quot;, &quot;#EC8E19&quot;, &quot;#C92B05&quot;];\n\nclass App extends React.Component {\n  render() {\n    return (\n      &lt;VictoryChart polar\n        theme={VictoryTheme.material}\n        domain={{ y: [0, 10] }}\n      &gt;\n        &lt;VictoryPolarAxis dependentAxis\n          style={{ axis: { stroke: &quot;none&quot; } }}\n          tickFormat={() =&gt; &quot;&quot;}\n        /&gt;\n        &lt;VictoryPolarAxis\n          tickValues={[0, Math.PI / 2, Math.PI, (3 * Math.PI) / 2]}\n          tickFormat={[&quot;2π&quot;, &quot;π/2&quot;, &quot;π&quot;, &quot;3π/2&quot;]}\n          labelPlacement=&quot;vertical&quot;\n        /&gt;\n        { [5, 4, 3, 2, 1].map((val, i) =&gt; {\n          return (\n            &lt;VictoryLine\n              key={i}\n              samples={100}\n              style={{ data: { stroke: colors[i] } }}\n              y={(d) =&gt; val * (1 - Math.cos(d.x))}\n            /&gt;\n          );\n        })}\n      &lt;/VictoryChart&gt;\n    );\n  }\n}\n\nReactDOM.render(&lt;App/&gt;, mountNode);</code></pre>',frontmatter:{id:9,scope:null,title:"Polar Cardioid"},fields:{slug:"/gallery/polar-cardioid/"}}},pathContext:{slug:"/gallery/polar-cardioid/"}}}});
//# sourceMappingURL=path---gallery-polar-cardioid-c47f05b8a67e2d0367bd.js.map