{"version":3,"sources":["webpack:///path---docs-victory-legend-a0a0f47400fd7a7e6220.js","webpack:///./.cache/json/docs-victory-legend.json"],"names":["webpackJsonp","840","module","exports","data","markdownRemark","html","frontmatter","id","scope","title","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA;AAAit3CC,aAAigDC,GAAA,GAAAC,MAAA,KAAAC,MAAA,iBAA6CC,QAAWC,KAAA,2BAAiCC,aAAgBD,KAAA","file":"path---docs-victory-legend-a0a0f47400fd7a7e6220.js","sourcesContent":["webpackJsonp([62514473588240],{\n\n/***/ 840:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"victorylegend\\\"><a href=\\\"#victorylegend\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>VictoryLegend</h1>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> renders a chart legend component.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domain={[0, 10]}&gt;\\n  &lt;VictoryLegend x={125} y={50}\\n  \\ttitle=&quot;Legend&quot;\\n    centerTitle\\n    orientation=&quot;horizontal&quot;\\n    gutter={20}\\n    style={{ border: { stroke: &quot;black&quot; }, title: {fontSize: 20 } }}\\n    data={[\\n      { name: &quot;One&quot;, symbol: { fill: &quot;tomato&quot;, type: &quot;star&quot; } },\\n      { name: &quot;Two&quot;, symbol: { fill: &quot;orange&quot; } },\\n      { name: &quot;Three&quot;, symbol: { fill: &quot;gold&quot; } }\\n    ]}\\n  /&gt;\\n  &lt;VictoryBar\\n      data={[\\n      { x: 2, y: 6, fill: &quot;tomato&quot; },\\n      { x: 4, y: 4, fill: &quot;orange&quot; },\\n      { x: 6, y: 2, fill: &quot;gold&quot; },\\n      { x: 8, y: 4, fill: &quot;tomato&quot; },\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h2 id=\\\"props\\\"><a href=\\\"#props\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Props</h2>\\n<h3 id=\\\"bordercomponent\\\"><a href=\\\"#bordercomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>borderComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">borderComponent</code> prop takes a component instance which will be responsible for rendering a border around the legend. The new element created from the passed <code class=\\\"language-text\\\">borderComponent</code> will be provided with the following properties calculated by <code class=\\\"language-text\\\">VictoryLegend</code>: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">width</code>, <code class=\\\"language-text\\\">height</code>, and <code class=\\\"language-text\\\">style</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">borderComponent</code> is not provided, <code class=\\\"language-text\\\">VictoryLegend</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#border\\\">Border component</a>. Please note that the default width and height calculated for the border component is based on <em>approximated</em> text measurements, and may need to be adjusted.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;Border/&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">borderComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Border</span> <span class=\\\"token attr-name\\\">width</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"borderpadding\\\"><a href=\\\"#borderpadding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>borderPadding</h3>\\n<p><code class=\\\"language-text\\\">type: number || { top: number, bottom: number, left: number, right: number }</code></p>\\n<p>The <code class=\\\"language-text\\\">borderPadding</code> specifies the amount of padding that should be added between the legend items and the border. This prop may be given as a number, or as an object with values specified for <code class=\\\"language-text\\\">top</code>, <code class=\\\"language-text\\\">bottom</code>, <code class=\\\"language-text\\\">left</code>, and <code class=\\\"language-text\\\">right</code>. Please note that the default width and height calculated for the border component is based on <em>approximated</em> text measurements, so padding may need to be adjusted.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">borderPadding<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> top<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> bottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"centertitle\\\"><a href=\\\"#centertitle\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>centerTitle</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">centerTitle</code> boolean prop specifies whether a legend title should be centered.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={10}\\n  title=&quot;Legend&quot;\\n  centerTitle\\n  orientation=&quot;horizontal&quot;\\n  gutter={20}\\n  style={{ border: { stroke: &quot;black&quot; }, title: {fontSize: 20 } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"colorscale\\\"><a href=\\\"#colorscale\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>colorScale</h3>\\n<p><code class=\\\"language-text\\\">type: array[string]</code></p>\\n<p>The <code class=\\\"language-text\\\">colorScale</code> prop defines a color scale to be applied to each data symbol in <code class=\\\"language-text\\\">VictoryLegend</code>. This prop should be given as an array of CSS colors, or as a string corresponding to one of the built in color scales: “grayscale”, “qualitative”, “heatmap”, “warm”, “cool”, “red”, “green”, “blue”. <code class=\\\"language-text\\\">VictoryLegend</code> will assign a color to each symbol by index, unless they are explicitly specified in the data object. Colors will repeat when there are more symbols than colors in the provided <code class=\\\"language-text\\\">colorScale</code>.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={10}\\n  orientation=&quot;horizontal&quot;\\n  gutter={20}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  colorScale={[ &quot;navy&quot;, &quot;blue&quot;, &quot;cyan&quot; ]}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"containercomponent\\\"><a href=\\\"#containercomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>containerComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">containerComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#containercomponent\\\">Read about it here</a></p>\\n<p><strong>Note:</strong> <code class=\\\"language-text\\\">VictoryLegend</code> only works with the <code class=\\\"language-text\\\">VictoryContainer</code> component</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">containerComponent={&lt;VictoryContainer/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">containerComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryContainer</span> <span class=\\\"token attr-name\\\">responsive</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"data\\\"><a href=\\\"#data\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>data</h3>\\n<p><code class=\\\"language-text\\\">type: array[{ name, symbol, labels }]</code></p>\\n<p>Specify data via the <code class=\\\"language-text\\\">data</code> prop. <code class=\\\"language-text\\\">VictoryLegend</code> expects data as an array of objects with <code class=\\\"language-text\\\">name</code> (required), <code class=\\\"language-text\\\">symbol</code>, and <code class=\\\"language-text\\\">labels</code> properties. The <code class=\\\"language-text\\\">data</code> prop must be given as an array. The symbol rendered may be changed by altering the <code class=\\\"language-text\\\">type</code> property of the <code class=\\\"language-text\\\">symbol</code> object. Valid types include: circle”, “diamond”, “plus”, “minus”, “square”, “star”, “triangleDown”, and “triangleUp”</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">data={[{ name: &quot;Series 1&quot; }, { name: &quot;Series 2&quot; }]}</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;horizontal&quot;\\n  gutter={20}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  data={[\\n    { name: &quot;One&quot;, symbol: { fill: &quot;tomato&quot;, type: &quot;star&quot; } },\\n    { name: &quot;Two&quot;, symbol: { fill: &quot;orange&quot; }, labels: { fill: &quot;orange&quot; } },\\n    { name: &quot;Three&quot;, symbol: { fill: &quot;gold&quot; } }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"datacomponent\\\"><a href=\\\"#datacomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>dataComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">dataComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#datacomponent\\\">Read about it here</a></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> supplies the following props to its <code class=\\\"language-text\\\">dataComponent</code>: <code class=\\\"language-text\\\">data</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">size</code>, <code class=\\\"language-text\\\">style</code>, and <code class=\\\"language-text\\\">symbol</code>. <code class=\\\"language-text\\\">VictoryLegend</code> renders a <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#point\\\">Point component</a> by default.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own <code class=\\\"language-text\\\">dataComponents</code></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;Point/&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">dataComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Point</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"eventkey\\\"><a href=\\\"#eventkey\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>eventKey</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">eventKey</code> prop to specify how event targets are addressed. <strong>This prop is not commonly used.</strong> <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#eventkey\\\">Read about the <code class=\\\"language-text\\\">eventKey</code> prop in more detail here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">eventKey<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"x\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"events\\\"><a href=\\\"#events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>events</h3>\\n<p><code class=\\\"language-text\\\">type: array[object]</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">events</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#events\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/events\\\">Events Guide</a> for more information on defining events.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;div&gt;\\n  &lt;h3&gt;Click Me&lt;/h3&gt;\\n  &lt;VictoryLegend\\n    events={[{\\n      target: &quot;data&quot;,\\n      eventHandlers: {\\n        onClick: () =&gt; {\\n          return [\\n            {\\n              target: &quot;data&quot;,\\n              mutation: (props) =&gt; {\\n                const fill = props.style &amp;&amp; props.style.fill;\\n                return fill === &quot;#c43a31&quot; ? null : { style: { fill: &quot;#c43a31&quot; } };\\n              }\\n            }, {\\n              target: &quot;labels&quot;,\\n              mutation: (props) =&gt; {\\n                return props.text === &quot;clicked&quot; ? null : { text: &quot;clicked&quot; };\\n              }\\n            }\\n          ];\\n        }\\n      }\\n    }]}\\n    data={[\\n      { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n    ]}\\n  /&gt;\\n&lt;/div&gt;</code></pre>\\n<h3 id=\\\"externaleventmutations\\\"><a href=\\\"#externaleventmutations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>externalEventMutations</h3>\\n<p><code class=\\\"language-text\\\">type: array[object]</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">externalEventMutations</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#externalEventsMutations\\\">Read about it in detail</a></p>\\n<h3 id=\\\"groupcomponent\\\"><a href=\\\"#groupcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>groupComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">groupComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#groupcomponent\\\">Read about it here</a></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;g/&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">groupComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>g</span> <span class=\\\"token attr-name\\\">transform</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>rotate(90)<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"gutter\\\"><a href=\\\"#gutter\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>gutter</h3>\\n<p><code class=\\\"language-text\\\">type: number || { left: number, right: number }</code></p>\\n<p>The <code class=\\\"language-text\\\">gutter</code> prop defines the number of pixels between legend columns. This prop may be given as a number, or as an object with values specified for “left” and “right” gutters. To set spacing between rows, use the <code class=\\\"language-text\\\">rowGutter</code> prop.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">gutter={10}</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;horizontal&quot;\\n  gutter={50}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"height\\\"><a href=\\\"#height\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>height</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">height</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#height\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">height={400}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">height<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"itemsperrow\\\"><a href=\\\"#itemsperrow\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>itemsPerRow</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">itemsPerRow</code> prop determines how many items to render in each row of a horizontal legend, or in each column of a vertical legend. This prop should be given as an integer. When this prop is not given, legend items will be rendered in a single row or column.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;horizontal&quot;\\n  itemsPerRow={3}\\n  gutter={20}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }, { name: &quot;Four&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"labelcomponent\\\"><a href=\\\"#labelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>labelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">labelComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#labelcomponent\\\">Read about it here</a></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;VictoryLabel/&gt;</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n  labelComponent={&lt;VictoryLabel angle={45}/&gt;}\\n/&gt;</code></pre>\\n<h3 id=\\\"orientation\\\"><a href=\\\"#orientation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>orientation</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;vertical&quot; || &quot;horizontal&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">orientation</code> prop takes a string that defines whether legend data are displayed in a row or column. When <code class=\\\"language-text\\\">orientation</code> is <code class=\\\"language-text\\\">&quot;horizontal&quot;</code>, legend items will be displayed in rows. When <code class=\\\"language-text\\\">orientation</code> is <code class=\\\"language-text\\\">&quot;vertical&quot;</code>, legend items will be displayed in columns.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">orientation=&quot;vertical&quot;</code></p>\\n<h3 id=\\\"padding\\\"><a href=\\\"#padding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>padding</h3>\\n<p><code class=\\\"language-text\\\">type: number || { top: number, bottom: number, left: number, right: number }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">padding</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#padding\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">padding={50}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">padding<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> top<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> bottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">60</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"rowgutter\\\"><a href=\\\"#rowgutter\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>rowGutter</h3>\\n<p><code class=\\\"language-text\\\">type: number || { top: number, bottom: number }</code></p>\\n<p>The <code class=\\\"language-text\\\">rowGutter</code> prop defines the number of pixels between legend rows. This prop may be given as a number, or as an object with values specified for “top” and “bottom” gutters. To set spacing between columns, use the <code class=\\\"language-text\\\">gutter</code> prop.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;vertical&quot;\\n  orientation=&quot;vertical&quot;\\n  gutter={20}\\n  rowGutter={{ top: 0, bottom: 10 }}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"sharedevents\\\"><a href=\\\"#sharedevents\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>sharedEvents</h3>\\n<p><strong>The <code class=\\\"language-text\\\">sharedEvents</code> prop is used internally to coordinate events between components. It should not be set manually.</strong></p>\\n<h3 id=\\\"standalone\\\"><a href=\\\"#standalone\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>standalone</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">standalone</code> props specifies whether the component should be rendered in an independent <code class=\\\"language-text\\\">&lt;svg&gt;</code> element or in a <code class=\\\"language-text\\\">&lt;g&gt;</code> tag. This prop defaults to true, and renders an <code class=\\\"language-text\\\">svg</code>.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">standalone={true}</code></p>\\n<h3 id=\\\"style\\\"><a href=\\\"#style\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>style</h3>\\n<p><code class=\\\"language-text\\\">type: { border: object, data: object, labels: object, parent: object, title: object }</code></p>\\n<p>The <code class=\\\"language-text\\\">style</code> prop defines the style of the component. The style prop should be given as an object with styles defined for <code class=\\\"language-text\\\">parent</code>, <code class=\\\"language-text\\\">data</code>, <code class=\\\"language-text\\\">labels</code>, <code class=\\\"language-text\\\">title</code>, and <code class=\\\"language-text\\\">border</code>. Any valid svg styles are supported, but <code class=\\\"language-text\\\">width</code>, <code class=\\\"language-text\\\">height</code>, and <code class=\\\"language-text\\\">padding</code> should be specified via props as they determine relative layout for components in VictoryChart. Functional styles may be defined for <code class=\\\"language-text\\\">data</code>, and <code class=\\\"language-text\\\">labels</code> style properties, and they will be evaluated with each datum.</p>\\n<p><strong>note:</strong> When a component is rendered as a child of another Victory component, or within a custom <code class=\\\"language-text\\\">&lt;svg&gt;</code> element with <code class=\\\"language-text\\\">standalone={false}</code> parent styles will be applied to the enclosing <code class=\\\"language-text\\\">&lt;g&gt;</code> tag. Many styles that can be applied to a parent <code class=\\\"language-text\\\">&lt;svg&gt;</code> will not be expressed when applied to a <code class=\\\"language-text\\\">&lt;g&gt;</code>.</p>\\n<p><strong>note:</strong> custom <code class=\\\"language-text\\\">angle</code> and <code class=\\\"language-text\\\">verticalAnchor</code> properties may be included in <code class=\\\"language-text\\\">labels</code> and <code class=\\\"language-text\\\">title</code> styles.</p>\\n<p><em>default (provided by default theme):</em> See <a href=\\\"https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-theme/grayscale.js\\\">grayscale theme</a> for more detail</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  title=&quot;Legend&quot;\\n  centerTitle\\n  orientation=&quot;horizontal&quot;\\n  gutter={20}\\n  style={{\\n    data: { fill: &quot;blue&quot;, stroke: &quot;navy&quot;, strokeWidth: 2 },\\n    labels: { fill: &quot;navy&quot; },\\n    border: { stroke: &quot;black&quot; },\\n    title: {fontSize: 20 }\\n  }}\\n  data={[\\n    { name: &quot;One&quot;, symbol: { fill: &quot;tomato&quot; } },\\n    { name: &quot;Two&quot;, labels: { fill: &quot;orange&quot; } },\\n    { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"symbolspacer\\\"><a href=\\\"#symbolspacer\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>symbolSpacer</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">symbolSpacer</code> prop defines the number of pixels between data components and label components. When a <code class=\\\"language-text\\\">symbolSpacer</code> is not defined, spacing is calculated based on symbol size and label font size.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;horizontal&quot;\\n  symbolSpacer={5}\\n  gutter={20}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"theme\\\"><a href=\\\"#theme\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>theme</h3>\\n<p><code class=\\\"language-text\\\">type: object</code></p>\\n<p>The <code class=\\\"language-text\\\">theme</code> prop specifies a theme to use for determining styles and layout properties for a component. Any styles or props defined in <code class=\\\"language-text\\\">theme</code> may be overridden by props specified on the component instance. By default, components use a <a href=\\\"https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-theme/grayscale.js\\\">grayscale theme</a>. <a href=\\\"https://formidable.com/open-source/victory/guides/themes\\\">Read more about themes here</a>.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">theme={VictoryTheme.grayscale}</code></p>\\n<h3 id=\\\"title\\\"><a href=\\\"#title\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>title</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string]</code></p>\\n<p>The <code class=\\\"language-text\\\">title</code> prop specifies a title to render with the legend. This prop should be given as a string, or an array of strings for multi-line titles.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  title=&quot;Legend Title&quot;\\n  gutter={20}\\n  orientation=&quot;horizontal&quot;\\n  style={{ border: { stroke: &quot;black&quot; }, title: { fontSize: 20 } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"titlecomponent\\\"><a href=\\\"#titlecomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>titleComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">titleComponent</code> prop takes a component instance which will be used to render a title for the component. The new element created from the passed <code class=\\\"language-text\\\">labelComponent</code> will be supplied with the following properties: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">data</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">text</code>, and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">labelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\">VictoryLabel</a> will be created with the props described above.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;VictoryLabel/&gt;</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  title={[&quot;Legend Title&quot;, &quot;subtitle&quot;]}\\n  gutter={20}\\n  orientation=&quot;horizontal&quot;\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  titleComponent={&lt;VictoryLabel style={[{ fontSize: 20 }, { fontSize: 12 }]}/&gt;}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"titleorientation\\\"><a href=\\\"#titleorientation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>titleOrientation</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;top&quot; || &quot;bottom&quot; || &quot;left&quot; || &quot;right&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">titleOrientation</code> prop specifies where the a title should be rendered in relation to the rest of the legend. Possible values for this prop are “top”, “bottom”, “left”, and “right”.</p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">titleOrientation=&quot;top&quot;</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={50} y={50}\\n  title=&quot;Legend Title&quot;\\n  titleOrientation=&quot;left&quot;\\n  gutter={20}\\n  orientation=&quot;horizontal&quot;\\n  style={{ border: { stroke: &quot;black&quot; }, title: { fontSize: 20 } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"width\\\"><a href=\\\"#width\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>width</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">width</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#width\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">width={400}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">width<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"x\\\"><a href=\\\"#x\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>x</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">x</code> prop defines the x coordinate corresponding to the upper left corner of the legend.</p>\\n<h3 id=\\\"y\\\"><a href=\\\"#y\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>y</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">y</code> prop defines the y coordinate corresponding to the upper left corner of the legend.</p>\",\"frontmatter\":{\"id\":16,\"scope\":null,\"title\":\"VictoryLegend\"},\"fields\":{\"slug\":\"/docs/victory-legend/\"}}},\"pathContext\":{\"slug\":\"/docs/victory-legend/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-victory-legend-a0a0f47400fd7a7e6220.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"victorylegend\\\"><a href=\\\"#victorylegend\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>VictoryLegend</h1>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> renders a chart legend component.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domain={[0, 10]}&gt;\\n  &lt;VictoryLegend x={125} y={50}\\n  \\ttitle=&quot;Legend&quot;\\n    centerTitle\\n    orientation=&quot;horizontal&quot;\\n    gutter={20}\\n    style={{ border: { stroke: &quot;black&quot; }, title: {fontSize: 20 } }}\\n    data={[\\n      { name: &quot;One&quot;, symbol: { fill: &quot;tomato&quot;, type: &quot;star&quot; } },\\n      { name: &quot;Two&quot;, symbol: { fill: &quot;orange&quot; } },\\n      { name: &quot;Three&quot;, symbol: { fill: &quot;gold&quot; } }\\n    ]}\\n  /&gt;\\n  &lt;VictoryBar\\n      data={[\\n      { x: 2, y: 6, fill: &quot;tomato&quot; },\\n      { x: 4, y: 4, fill: &quot;orange&quot; },\\n      { x: 6, y: 2, fill: &quot;gold&quot; },\\n      { x: 8, y: 4, fill: &quot;tomato&quot; },\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h2 id=\\\"props\\\"><a href=\\\"#props\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Props</h2>\\n<h3 id=\\\"bordercomponent\\\"><a href=\\\"#bordercomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>borderComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">borderComponent</code> prop takes a component instance which will be responsible for rendering a border around the legend. The new element created from the passed <code class=\\\"language-text\\\">borderComponent</code> will be provided with the following properties calculated by <code class=\\\"language-text\\\">VictoryLegend</code>: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">width</code>, <code class=\\\"language-text\\\">height</code>, and <code class=\\\"language-text\\\">style</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">borderComponent</code> is not provided, <code class=\\\"language-text\\\">VictoryLegend</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#border\\\">Border component</a>. Please note that the default width and height calculated for the border component is based on <em>approximated</em> text measurements, and may need to be adjusted.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;Border/&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">borderComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Border</span> <span class=\\\"token attr-name\\\">width</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"borderpadding\\\"><a href=\\\"#borderpadding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>borderPadding</h3>\\n<p><code class=\\\"language-text\\\">type: number || { top: number, bottom: number, left: number, right: number }</code></p>\\n<p>The <code class=\\\"language-text\\\">borderPadding</code> specifies the amount of padding that should be added between the legend items and the border. This prop may be given as a number, or as an object with values specified for <code class=\\\"language-text\\\">top</code>, <code class=\\\"language-text\\\">bottom</code>, <code class=\\\"language-text\\\">left</code>, and <code class=\\\"language-text\\\">right</code>. Please note that the default width and height calculated for the border component is based on <em>approximated</em> text measurements, so padding may need to be adjusted.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">borderPadding<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> top<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> bottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"centertitle\\\"><a href=\\\"#centertitle\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>centerTitle</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">centerTitle</code> boolean prop specifies whether a legend title should be centered.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={10}\\n  title=&quot;Legend&quot;\\n  centerTitle\\n  orientation=&quot;horizontal&quot;\\n  gutter={20}\\n  style={{ border: { stroke: &quot;black&quot; }, title: {fontSize: 20 } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"colorscale\\\"><a href=\\\"#colorscale\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>colorScale</h3>\\n<p><code class=\\\"language-text\\\">type: array[string]</code></p>\\n<p>The <code class=\\\"language-text\\\">colorScale</code> prop defines a color scale to be applied to each data symbol in <code class=\\\"language-text\\\">VictoryLegend</code>. This prop should be given as an array of CSS colors, or as a string corresponding to one of the built in color scales: “grayscale”, “qualitative”, “heatmap”, “warm”, “cool”, “red”, “green”, “blue”. <code class=\\\"language-text\\\">VictoryLegend</code> will assign a color to each symbol by index, unless they are explicitly specified in the data object. Colors will repeat when there are more symbols than colors in the provided <code class=\\\"language-text\\\">colorScale</code>.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={10}\\n  orientation=&quot;horizontal&quot;\\n  gutter={20}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  colorScale={[ &quot;navy&quot;, &quot;blue&quot;, &quot;cyan&quot; ]}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"containercomponent\\\"><a href=\\\"#containercomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>containerComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">containerComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#containercomponent\\\">Read about it here</a></p>\\n<p><strong>Note:</strong> <code class=\\\"language-text\\\">VictoryLegend</code> only works with the <code class=\\\"language-text\\\">VictoryContainer</code> component</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">containerComponent={&lt;VictoryContainer/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">containerComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryContainer</span> <span class=\\\"token attr-name\\\">responsive</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"data\\\"><a href=\\\"#data\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>data</h3>\\n<p><code class=\\\"language-text\\\">type: array[{ name, symbol, labels }]</code></p>\\n<p>Specify data via the <code class=\\\"language-text\\\">data</code> prop. <code class=\\\"language-text\\\">VictoryLegend</code> expects data as an array of objects with <code class=\\\"language-text\\\">name</code> (required), <code class=\\\"language-text\\\">symbol</code>, and <code class=\\\"language-text\\\">labels</code> properties. The <code class=\\\"language-text\\\">data</code> prop must be given as an array. The symbol rendered may be changed by altering the <code class=\\\"language-text\\\">type</code> property of the <code class=\\\"language-text\\\">symbol</code> object. Valid types include: circle”, “diamond”, “plus”, “minus”, “square”, “star”, “triangleDown”, and “triangleUp”</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">data={[{ name: &quot;Series 1&quot; }, { name: &quot;Series 2&quot; }]}</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;horizontal&quot;\\n  gutter={20}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  data={[\\n    { name: &quot;One&quot;, symbol: { fill: &quot;tomato&quot;, type: &quot;star&quot; } },\\n    { name: &quot;Two&quot;, symbol: { fill: &quot;orange&quot; }, labels: { fill: &quot;orange&quot; } },\\n    { name: &quot;Three&quot;, symbol: { fill: &quot;gold&quot; } }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"datacomponent\\\"><a href=\\\"#datacomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>dataComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">dataComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#datacomponent\\\">Read about it here</a></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> supplies the following props to its <code class=\\\"language-text\\\">dataComponent</code>: <code class=\\\"language-text\\\">data</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">size</code>, <code class=\\\"language-text\\\">style</code>, and <code class=\\\"language-text\\\">symbol</code>. <code class=\\\"language-text\\\">VictoryLegend</code> renders a <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#point\\\">Point component</a> by default.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own <code class=\\\"language-text\\\">dataComponents</code></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;Point/&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">dataComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Point</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"eventkey\\\"><a href=\\\"#eventkey\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>eventKey</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">eventKey</code> prop to specify how event targets are addressed. <strong>This prop is not commonly used.</strong> <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#eventkey\\\">Read about the <code class=\\\"language-text\\\">eventKey</code> prop in more detail here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">eventKey<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"x\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"events\\\"><a href=\\\"#events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>events</h3>\\n<p><code class=\\\"language-text\\\">type: array[object]</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">events</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#events\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/events\\\">Events Guide</a> for more information on defining events.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;div&gt;\\n  &lt;h3&gt;Click Me&lt;/h3&gt;\\n  &lt;VictoryLegend\\n    events={[{\\n      target: &quot;data&quot;,\\n      eventHandlers: {\\n        onClick: () =&gt; {\\n          return [\\n            {\\n              target: &quot;data&quot;,\\n              mutation: (props) =&gt; {\\n                const fill = props.style &amp;&amp; props.style.fill;\\n                return fill === &quot;#c43a31&quot; ? null : { style: { fill: &quot;#c43a31&quot; } };\\n              }\\n            }, {\\n              target: &quot;labels&quot;,\\n              mutation: (props) =&gt; {\\n                return props.text === &quot;clicked&quot; ? null : { text: &quot;clicked&quot; };\\n              }\\n            }\\n          ];\\n        }\\n      }\\n    }]}\\n    data={[\\n      { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n    ]}\\n  /&gt;\\n&lt;/div&gt;</code></pre>\\n<h3 id=\\\"externaleventmutations\\\"><a href=\\\"#externaleventmutations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>externalEventMutations</h3>\\n<p><code class=\\\"language-text\\\">type: array[object]</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">externalEventMutations</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#externalEventsMutations\\\">Read about it in detail</a></p>\\n<h3 id=\\\"groupcomponent\\\"><a href=\\\"#groupcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>groupComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">groupComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#groupcomponent\\\">Read about it here</a></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;g/&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">groupComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>g</span> <span class=\\\"token attr-name\\\">transform</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>rotate(90)<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"gutter\\\"><a href=\\\"#gutter\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>gutter</h3>\\n<p><code class=\\\"language-text\\\">type: number || { left: number, right: number }</code></p>\\n<p>The <code class=\\\"language-text\\\">gutter</code> prop defines the number of pixels between legend columns. This prop may be given as a number, or as an object with values specified for “left” and “right” gutters. To set spacing between rows, use the <code class=\\\"language-text\\\">rowGutter</code> prop.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">gutter={10}</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;horizontal&quot;\\n  gutter={50}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"height\\\"><a href=\\\"#height\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>height</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">height</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#height\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">height={400}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">height<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"itemsperrow\\\"><a href=\\\"#itemsperrow\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>itemsPerRow</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">itemsPerRow</code> prop determines how many items to render in each row of a horizontal legend, or in each column of a vertical legend. This prop should be given as an integer. When this prop is not given, legend items will be rendered in a single row or column.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;horizontal&quot;\\n  itemsPerRow={3}\\n  gutter={20}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }, { name: &quot;Four&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"labelcomponent\\\"><a href=\\\"#labelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>labelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">labelComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#labelcomponent\\\">Read about it here</a></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;VictoryLabel/&gt;</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n  labelComponent={&lt;VictoryLabel angle={45}/&gt;}\\n/&gt;</code></pre>\\n<h3 id=\\\"orientation\\\"><a href=\\\"#orientation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>orientation</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;vertical&quot; || &quot;horizontal&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">orientation</code> prop takes a string that defines whether legend data are displayed in a row or column. When <code class=\\\"language-text\\\">orientation</code> is <code class=\\\"language-text\\\">&quot;horizontal&quot;</code>, legend items will be displayed in rows. When <code class=\\\"language-text\\\">orientation</code> is <code class=\\\"language-text\\\">&quot;vertical&quot;</code>, legend items will be displayed in columns.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">orientation=&quot;vertical&quot;</code></p>\\n<h3 id=\\\"padding\\\"><a href=\\\"#padding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>padding</h3>\\n<p><code class=\\\"language-text\\\">type: number || { top: number, bottom: number, left: number, right: number }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">padding</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#padding\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">padding={50}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">padding<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> top<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> bottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">60</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"rowgutter\\\"><a href=\\\"#rowgutter\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>rowGutter</h3>\\n<p><code class=\\\"language-text\\\">type: number || { top: number, bottom: number }</code></p>\\n<p>The <code class=\\\"language-text\\\">rowGutter</code> prop defines the number of pixels between legend rows. This prop may be given as a number, or as an object with values specified for “top” and “bottom” gutters. To set spacing between columns, use the <code class=\\\"language-text\\\">gutter</code> prop.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;vertical&quot;\\n  orientation=&quot;vertical&quot;\\n  gutter={20}\\n  rowGutter={{ top: 0, bottom: 10 }}\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"sharedevents\\\"><a href=\\\"#sharedevents\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>sharedEvents</h3>\\n<p><strong>The <code class=\\\"language-text\\\">sharedEvents</code> prop is used internally to coordinate events between components. It should not be set manually.</strong></p>\\n<h3 id=\\\"standalone\\\"><a href=\\\"#standalone\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>standalone</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">standalone</code> props specifies whether the component should be rendered in an independent <code class=\\\"language-text\\\">&lt;svg&gt;</code> element or in a <code class=\\\"language-text\\\">&lt;g&gt;</code> tag. This prop defaults to true, and renders an <code class=\\\"language-text\\\">svg</code>.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">standalone={true}</code></p>\\n<h3 id=\\\"style\\\"><a href=\\\"#style\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>style</h3>\\n<p><code class=\\\"language-text\\\">type: { border: object, data: object, labels: object, parent: object, title: object }</code></p>\\n<p>The <code class=\\\"language-text\\\">style</code> prop defines the style of the component. The style prop should be given as an object with styles defined for <code class=\\\"language-text\\\">parent</code>, <code class=\\\"language-text\\\">data</code>, <code class=\\\"language-text\\\">labels</code>, <code class=\\\"language-text\\\">title</code>, and <code class=\\\"language-text\\\">border</code>. Any valid svg styles are supported, but <code class=\\\"language-text\\\">width</code>, <code class=\\\"language-text\\\">height</code>, and <code class=\\\"language-text\\\">padding</code> should be specified via props as they determine relative layout for components in VictoryChart. Functional styles may be defined for <code class=\\\"language-text\\\">data</code>, and <code class=\\\"language-text\\\">labels</code> style properties, and they will be evaluated with each datum.</p>\\n<p><strong>note:</strong> When a component is rendered as a child of another Victory component, or within a custom <code class=\\\"language-text\\\">&lt;svg&gt;</code> element with <code class=\\\"language-text\\\">standalone={false}</code> parent styles will be applied to the enclosing <code class=\\\"language-text\\\">&lt;g&gt;</code> tag. Many styles that can be applied to a parent <code class=\\\"language-text\\\">&lt;svg&gt;</code> will not be expressed when applied to a <code class=\\\"language-text\\\">&lt;g&gt;</code>.</p>\\n<p><strong>note:</strong> custom <code class=\\\"language-text\\\">angle</code> and <code class=\\\"language-text\\\">verticalAnchor</code> properties may be included in <code class=\\\"language-text\\\">labels</code> and <code class=\\\"language-text\\\">title</code> styles.</p>\\n<p><em>default (provided by default theme):</em> See <a href=\\\"https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-theme/grayscale.js\\\">grayscale theme</a> for more detail</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  title=&quot;Legend&quot;\\n  centerTitle\\n  orientation=&quot;horizontal&quot;\\n  gutter={20}\\n  style={{\\n    data: { fill: &quot;blue&quot;, stroke: &quot;navy&quot;, strokeWidth: 2 },\\n    labels: { fill: &quot;navy&quot; },\\n    border: { stroke: &quot;black&quot; },\\n    title: {fontSize: 20 }\\n  }}\\n  data={[\\n    { name: &quot;One&quot;, symbol: { fill: &quot;tomato&quot; } },\\n    { name: &quot;Two&quot;, labels: { fill: &quot;orange&quot; } },\\n    { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"symbolspacer\\\"><a href=\\\"#symbolspacer\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>symbolSpacer</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">symbolSpacer</code> prop defines the number of pixels between data components and label components. When a <code class=\\\"language-text\\\">symbolSpacer</code> is not defined, spacing is calculated based on symbol size and label font size.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  orientation=&quot;horizontal&quot;\\n  symbolSpacer={5}\\n  gutter={20}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"theme\\\"><a href=\\\"#theme\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>theme</h3>\\n<p><code class=\\\"language-text\\\">type: object</code></p>\\n<p>The <code class=\\\"language-text\\\">theme</code> prop specifies a theme to use for determining styles and layout properties for a component. Any styles or props defined in <code class=\\\"language-text\\\">theme</code> may be overridden by props specified on the component instance. By default, components use a <a href=\\\"https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-theme/grayscale.js\\\">grayscale theme</a>. <a href=\\\"https://formidable.com/open-source/victory/guides/themes\\\">Read more about themes here</a>.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">theme={VictoryTheme.grayscale}</code></p>\\n<h3 id=\\\"title\\\"><a href=\\\"#title\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>title</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string]</code></p>\\n<p>The <code class=\\\"language-text\\\">title</code> prop specifies a title to render with the legend. This prop should be given as a string, or an array of strings for multi-line titles.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  title=&quot;Legend Title&quot;\\n  gutter={20}\\n  orientation=&quot;horizontal&quot;\\n  style={{ border: { stroke: &quot;black&quot; }, title: { fontSize: 20 } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"titlecomponent\\\"><a href=\\\"#titlecomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>titleComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">titleComponent</code> prop takes a component instance which will be used to render a title for the component. The new element created from the passed <code class=\\\"language-text\\\">labelComponent</code> will be supplied with the following properties: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">data</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">text</code>, and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">labelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\">VictoryLabel</a> will be created with the props described above.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;VictoryLabel/&gt;</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={125} y={50}\\n  title={[&quot;Legend Title&quot;, &quot;subtitle&quot;]}\\n  gutter={20}\\n  orientation=&quot;horizontal&quot;\\n  style={{ border: { stroke: &quot;black&quot; } }}\\n  titleComponent={&lt;VictoryLabel style={[{ fontSize: 20 }, { fontSize: 12 }]}/&gt;}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"titleorientation\\\"><a href=\\\"#titleorientation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>titleOrientation</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;top&quot; || &quot;bottom&quot; || &quot;left&quot; || &quot;right&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">titleOrientation</code> prop specifies where the a title should be rendered in relation to the rest of the legend. Possible values for this prop are “top”, “bottom”, “left”, and “right”.</p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">titleOrientation=&quot;top&quot;</code></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryLegend x={50} y={50}\\n  title=&quot;Legend Title&quot;\\n  titleOrientation=&quot;left&quot;\\n  gutter={20}\\n  orientation=&quot;horizontal&quot;\\n  style={{ border: { stroke: &quot;black&quot; }, title: { fontSize: 20 } }}\\n  data={[\\n    { name: &quot;One&quot; }, { name: &quot;Two&quot; }, { name: &quot;Three&quot; }\\n  ]}\\n/&gt;</code></pre>\\n<h3 id=\\\"width\\\"><a href=\\\"#width\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>width</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryLegend</code> uses the standard <code class=\\\"language-text\\\">width</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#width\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">width={400}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">width<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"x\\\"><a href=\\\"#x\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>x</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">x</code> prop defines the x coordinate corresponding to the upper left corner of the legend.</p>\\n<h3 id=\\\"y\\\"><a href=\\\"#y\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>y</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">y</code> prop defines the y coordinate corresponding to the upper left corner of the legend.</p>\",\"frontmatter\":{\"id\":16,\"scope\":null,\"title\":\"VictoryLegend\"},\"fields\":{\"slug\":\"/docs/victory-legend/\"}}},\"pathContext\":{\"slug\":\"/docs/victory-legend/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-victory-legend.json\n// module id = 840\n// module chunks = 62514473588240"],"sourceRoot":""}