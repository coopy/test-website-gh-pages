{"version":3,"sources":["webpack:///path---docs-victory-boxplot-ddad2d59d595cbf50a08.js","webpack:///./.cache/json/docs-victory-boxplot.json"],"names":["webpackJsonp","829","module","exports","data","markdownRemark","html","frontmatter","id","scope","title","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA;AAAgytGC,aAAmDC,GAAA,EAAAC,MAAA,KAAAC,MAAA,kBAA6CC,QAAWC,KAAA,4BAAkCC,aAAgBD,KAAA","file":"path---docs-victory-boxplot-ddad2d59d595cbf50a08.js","sourcesContent":["webpackJsonp([182969186163636],{\n\n/***/ 829:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"victoryboxplot\\\"><a href=\\\"#victoryboxplot\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>VictoryBoxPlot</h1>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> renders a box plot to describe the distribution of a set of data. Data for <code class=\\\"language-text\\\">VictoryBoxPlot</code> may be given with summary statistics pre-calculated (<code class=\\\"language-text\\\">min</code>, <code class=\\\"language-text\\\">median</code>, <code class=\\\"language-text\\\">max</code>, <code class=\\\"language-text\\\">q1</code>, <code class=\\\"language-text\\\">q3</code>), or as an array of raw data. VictoryBoxPlot can be composed with <a href=\\\"https://formidable.com/open-source/victory/docs/victory-chart\\\"><code class=\\\"language-text\\\">VictoryChart</code></a> to create box plot charts.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={20}&gt;\\n  &lt;VictoryBoxPlot\\n    boxWidth={20}\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h2 id=\\\"props\\\"><a href=\\\"#props\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Props</h2>\\n<h3 id=\\\"animate\\\"><a href=\\\"#animate\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>animate</h3>\\n<p><code class=\\\"language-text\\\">type: boolean || object</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">animate</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#animate\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/animations\\\">Animations Guide</a> for more detail on animations and transitions</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">animate<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n  duration<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">,</span>\\n  onLoad<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> duration<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1000</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"boxwidth\\\"><a href=\\\"#boxwidth\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>boxWidth</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">boxWidth</code> prop specifies how wide each box should be. If the <code class=\\\"language-text\\\">whiskerWidth</code> prop is not set, this prop will also determine the width of the whisker crosshair.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={10}&gt;\\n  &lt;VictoryBoxPlot\\n    boxWidth={10}\\n    whiskerWidth={5}\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"categories\\\"><a href=\\\"#categories\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>categories</h3>\\n<p><code class=\\\"language-text\\\">type: array[string] || { x: array[string], y: array[string] }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBar</code> uses the standard <code class=\\\"language-text\\\">categories</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#categories\\\">Read about it here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">categories<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"dogs\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"cats\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"mice\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"containercomponent\\\"><a href=\\\"#containercomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>containerComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBar</code> uses the standard <code class=\\\"language-text\\\">containerComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#containercomponent\\\">Read about it here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">containerComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryVoronoiContainer</span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"data\\\"><a href=\\\"#data\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>data</h3>\\n<p><code class=\\\"language-text\\\">type: array[object]</code></p>\\n<p>The <code class=\\\"language-text\\\">data</code> prop for <code class=\\\"language-text\\\">VictoryBoxPlot</code> may be given in a a variety of formats:</p>\\n<ul>\\n<li>As an array of standard data objects with values specified for <code class=\\\"language-text\\\">x</code> and <code class=\\\"language-text\\\">y</code>\\nWhen given in this format, repeated values for either <code class=\\\"language-text\\\">x</code>or <code class=\\\"language-text\\\">y</code> will be used for calculating summary statistics</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">data<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token operator\\\">...</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<ul>\\n<li>As an array of data objects where <em>either</em> <code class=\\\"language-text\\\">x</code> <em>or</em> <code class=\\\"language-text\\\">y</code> is given as an array of values\\nWhen given in this format, array values are used for calculating summary statistics.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">data<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<ul>\\n<li>As an array of data objects with pre-calculated summary statistics(<code class=\\\"language-text\\\">min</code>, <code class=\\\"language-text\\\">median</code>, <code class=\\\"language-text\\\">max</code>, <code class=\\\"language-text\\\">q1</code>, <code class=\\\"language-text\\\">q3</code>)\\nWhen given in this format, <code class=\\\"language-text\\\">VictoryBoxPlot</code> <em>will not</em> preform statistical analysis. Pre-calculating summary statistics for large datasets will improve performance.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">data<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> min<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> median<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> max<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> q1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> q3<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">7</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> min<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> median<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> max<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">,</span> q1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> q3<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">6</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> min<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> median<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span> max<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">,</span> q1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> q3<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span></code></pre>\\n      </div>\\n<p>Use the <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#x\\\"><code class=\\\"language-text\\\">x</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#y\\\"><code class=\\\"language-text\\\">y</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#min\\\"><code class=\\\"language-text\\\">min</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#max\\\"><code class=\\\"language-text\\\">max</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#median\\\"><code class=\\\"language-text\\\">median</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#q1\\\"><code class=\\\"language-text\\\">q1</code></a>, and <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#q3\\\"><code class=\\\"language-text\\\">q3</code></a> data accessor props to specify custom data formats. Refer to the <a href=\\\"https://formidable.com/open-source/victory/guides/data-accessors\\\">Data Accessors Guide</a> for more detail.</p>\\n<h3 id=\\\"domain\\\"><a href=\\\"#domain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>domain</h3>\\n<p><code class=\\\"language-text\\\">type: array[low, high] || { x: [low, high], y: [low, high] }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">domain</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#domain\\\">Read about it here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">domain<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"domainpadding\\\"><a href=\\\"#domainpadding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>domainPadding</h3>\\n<p><code class=\\\"language-text\\\">type: number || array[left, right] || { x: [left, right], y: [bottom, top] }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">domainPadding</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#domainpadding\\\">Read about it here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">domainPadding<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"eventkey\\\"><a href=\\\"#eventkey\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>eventKey</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">eventKey</code> prop to specify how event targets are addressed. <strong>This prop is not commonly used.</strong> <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#eventkey\\\">Read about the <code class=\\\"language-text\\\">eventKey</code> prop in more detail here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">eventKey<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"x\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"events\\\"><a href=\\\"#events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>events</h3>\\n<p><code class=\\\"language-text\\\">type array[object]</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">events</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#events\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/events\\\">Events Guide</a> for more information on defining events.</p>\\n<p><strong>note:</strong> valid event targets for <code class=\\\"language-text\\\">VictoryBoxPlot</code> are:\\n“min”, “minLabels”, “grid”, “ticks”, and “tickLabels”.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;div&gt;\\n  &lt;h3&gt;Click Me&lt;/h3&gt;\\n  &lt;VictoryBoxPlot\\n    medianLabels={() =&gt; null}\\n    events={[{\\n      target: &quot;q3&quot;,\\n      eventHandlers: {\\n        onClick: () =&gt; {\\n          return [\\n            {\\n              mutation: (props) =&gt; {\\n                return { style: Object.assign(props.style, { fill: &quot;tomato&quot; }) };\\n              }\\n            }\\n          ];\\n        }\\n      }\\n    }]}\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/div&gt;</code></pre>\\n<h3 id=\\\"externaleventmutations\\\"><a href=\\\"#externaleventmutations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>externalEventMutations</h3>\\n<p><code class=\\\"language-text\\\">type: array[object]</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">externalEventMutations</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#externalEventsMutations\\\">Read about it in detail</a></p>\\n<h3 id=\\\"groupcomponent\\\"><a href=\\\"#groupcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>groupComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">groupComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#groupcomponent\\\">Read about it here</a></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;g/&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">groupComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>g</span> <span class=\\\"token attr-name\\\">transform</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>translate(10, 10)<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"height\\\"><a href=\\\"#height\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>height</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">height</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#height\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">height={300}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">height<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"horizontal\\\"><a href=\\\"#horizontal\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>horizontal</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The horizontal prop determines whether boxes will be laid vertically or horizontally. The boxes will be vertical if this prop is false or unspecified, or horizontal if the prop is set to true.</p>\\n<p><em>Note: Data should be flipped when <code class=\\\"language-text\\\">horizontal</code> is true</em></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={20}&gt;\\n  &lt;VictoryBoxPlot horizontal\\n    data={[\\n      { y: 1, x: [1, 2, 3, 5] },\\n      { y: 2, x: [3, 2, 8, 10] },\\n      { y: 3, x: [2, 8, 6, 5] },\\n      { y: 4, x: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"labelorientation\\\"><a href=\\\"#labelorientation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>labelOrientation</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;top&quot; || &quot;bottom&quot; || &quot;left&quot; || &quot;right&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">labelOrientation</code> prop determines where labels are placed relative to their corresponding data. If this prop is not set, it will be set to “top” for horizontal charts, and “right” for vertical charts.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={20}&gt;\\n  &lt;VictoryBoxPlot horizontal\\n    labels\\n    labelOrientation=&quot;top&quot;\\n    data={[\\n      { y: 1, x: [1, 2, 3, 5] },\\n      { y: 2, x: [3, 2, 8, 10] },\\n      { y: 3, x: [2, 8, 6, 5] },\\n      { y: 4, x: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"labels\\\"><a href=\\\"#labels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>labels</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>When the boolean <code class=\\\"language-text\\\">labels</code> prop is set to <code class=\\\"language-text\\\">true</code>, the values for <code class=\\\"language-text\\\">min</code>, <code class=\\\"language-text\\\">max</code>, <code class=\\\"language-text\\\">median</code>, <code class=\\\"language-text\\\">q1</code>, and <code class=\\\"language-text\\\">q3</code> will be displayed for each box. For more granular label control, use the individual <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#minlabels\\\"><code class=\\\"language-text\\\">minLabels</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#maxlabels\\\"><code class=\\\"language-text\\\">maxLabels</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#medianlabels\\\"><code class=\\\"language-text\\\">medianLabels</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#q1labels\\\"><code class=\\\"language-text\\\">q1Labels</code></a>, and <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#q3labels\\\"><code class=\\\"language-text\\\">q3Labels</code></a> props.</p>\\n<h3 id=\\\"max\\\"><a href=\\\"#max\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>max</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">max</code> data accessor prop to define the max value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the max value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">max=&quot;max_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a max value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">max={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a max value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">max=&quot;bonds.max&quot;</code>, <code class=\\\"language-text\\\">max={[&quot;bonds&quot;, &quot;max&quot;]}</code></p>\\n<h3 id=\\\"maxcomponent\\\"><a href=\\\"#maxcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>maxComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">maxComponent</code> prop takes a component instance which will be responsible for rendering an element to represent the maximum value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">maxComponent</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">majorWhisker</code> and <code class=\\\"language-text\\\">minorWhisker</code>. The <code class=\\\"language-text\\\">majorWhisker</code> and <code class=\\\"language-text\\\">minorWhisker</code> props are given as objects with values for <code class=\\\"language-text\\\">x1</code>, <code class=\\\"language-text\\\">y1</code>, <code class=\\\"language-text\\\">x2</code> and <code class=\\\"language-text\\\">y2</code> that describes the lines that make up the major and minor whisker. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">maxComponent</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#whisker\\\">Whisker component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">maxComponent={&lt;Whisker/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">maxComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Whisker</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"maxlabelcomponent\\\"><a href=\\\"#maxlabelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>maxLabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">maxLabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the maximum value for each box. The new element created from the passed <code class=\\\"language-text\\\">maxLabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">maxLabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">maxLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">maxLabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  maxLabels\\n  maxLabelComponent={\\n    &lt;VictoryLabel\\n      dx={-10} dy={-10}\\n      textAnchor=&quot;middle&quot;\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"maxlabels\\\"><a href=\\\"#maxlabels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>maxLabels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">maxLabels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the max value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">maxLabels</code></li>\\n<li><code class=\\\"language-text\\\">maxLabels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">maxLabels={(d) =&gt; Math.round(d.max)}</code></li>\\n</ul>\\n<h3 id=\\\"maxdomain\\\"><a href=\\\"#maxdomain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>maxDomain</h3>\\n<p><code class=\\\"language-text\\\">type: number || { x: number, y: number }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">maxDomain</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#maxDomain\\\">Read about it in detail</a></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart maxDomain={{ x: 3 }}&gt;\\n  &lt;VictoryBoxPlot\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"median\\\"><a href=\\\"#median\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>median</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">median</code> data accessor prop to define the median value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the median value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">median=&quot;median_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a median value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">median={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a median value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">median=&quot;bonds.median&quot;</code>, <code class=\\\"language-text\\\">median={[&quot;bonds&quot;, &quot;median&quot;]}</code></p>\\n<h3 id=\\\"mediancomponent\\\"><a href=\\\"#mediancomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>medianComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">medianComponent</code> prop takes a component instance which will be responsible for rendering an element to represent the median value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">medianComponent</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">x1</code>, <code class=\\\"language-text\\\">y1</code>, <code class=\\\"language-text\\\">x2</code> and <code class=\\\"language-text\\\">y2</code> Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">medianComponent</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#line\\\">Line component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">medianComponent={&lt;LineSegment/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">medianComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>LineSegment</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"medianlabelcomponent\\\"><a href=\\\"#medianlabelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>medianLabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">medianLabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the median value for each box. The new element created from the passed <code class=\\\"language-text\\\">medianLabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">medianLabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">medianLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">medianLabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  medianLabels\\n  medianLabelComponent={\\n    &lt;VictoryLabel\\n      dx={-10} dy={-10}\\n      textAnchor=&quot;middle&quot;\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"medianlabels\\\"><a href=\\\"#medianlabels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>medianLabels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">medianLabels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the median value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">medianLabels</code></li>\\n<li><code class=\\\"language-text\\\">medianLabels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">medianLabels={(d) =&gt; Math.round(d.median)}</code></li>\\n</ul>\\n<h3 id=\\\"min\\\"><a href=\\\"#min\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>min</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">min</code> data accessor prop to define the min value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the min value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">min=&quot;min_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a min value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">min={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a min value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">min=&quot;bonds.min&quot;</code>, <code class=\\\"language-text\\\">min={[&quot;bonds&quot;, &quot;min&quot;]}</code></p>\\n<h3 id=\\\"mincomponent\\\"><a href=\\\"#mincomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>minComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">minComponent</code> prop takes a component instance which will be responsible for rendering an element to represent the minimum value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">minComponent</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">majorWhisker</code> and <code class=\\\"language-text\\\">minorWhisker</code>. The <code class=\\\"language-text\\\">majorWhisker</code> and <code class=\\\"language-text\\\">minorWhisker</code> props are given as objects with values for <code class=\\\"language-text\\\">x1</code>, <code class=\\\"language-text\\\">y1</code>, <code class=\\\"language-text\\\">x2</code> and <code class=\\\"language-text\\\">y2</code> that describes the lines that make up the major and minor whisker. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">minComponent</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#whisker\\\">Whisker component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">minComponent={&lt;Whisker/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">minComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Whisker</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"minlabelcomponent\\\"><a href=\\\"#minlabelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>minLabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">minLabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the minimum value for each box. The new element created from the passed <code class=\\\"language-text\\\">minLabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">minLabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">minLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">minLabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  minLabels\\n  minLabelComponent={\\n    &lt;VictoryLabel\\n      dx={-10} dy={10}\\n      textAnchor=&quot;middle&quot;\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"minlabels\\\"><a href=\\\"#minlabels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>minLabels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">minLabels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the min value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">minLabels</code></li>\\n<li><code class=\\\"language-text\\\">minLabels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">minLabels={(d) =&gt; Math.round(d.min)}</code></li>\\n</ul>\\n<h3 id=\\\"mindomain\\\"><a href=\\\"#mindomain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>minDomain</h3>\\n<p><code class=\\\"language-text\\\">type: number || { x: number, y: number }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">minDomain</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#minDomain\\\">Read about it in detail</a></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart minDomain={{ y: 0 }}&gt;\\n  &lt;VictoryBoxPlot\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"name\\\"><a href=\\\"#name\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>name</h3>\\n<p><code class=\\\"language-text\\\">type: string</code></p>\\n<p>The <code class=\\\"language-text\\\">name</code> prop is used to reference a component instance when defining shared events.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"series-1\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"origin\\\"><a href=\\\"#origin\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>origin</h3>\\n<p><code class=\\\"language-text\\\">type: { x: number, y: number }</code></p>\\n<p><strong>The <code class=\\\"language-text\\\">origin</code> prop is only used by polar charts, and is usually controlled by <code class=\\\"language-text\\\">VictoryChart</code>. It will not typically be necessary to set an <code class=\\\"language-text\\\">origin</code> prop manually</strong></p>\\n<p><a href=\\\"https://formidable.com/open-source/victory/docs/common-props#origin\\\">Read about the <code class=\\\"language-text\\\">origin</code> prop in detail</a></p>\\n<h3 id=\\\"padding\\\"><a href=\\\"#padding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>padding</h3>\\n<p><code class=\\\"language-text\\\">type: number || { top: number, bottom: number, left: number, right: number }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBar</code> uses the standard <code class=\\\"language-text\\\">padding</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#padding\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">padding={50}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">padding<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> top<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> bottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">60</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"polar\\\"><a href=\\\"#polar\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>polar</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">polar</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#polar\\\">Read about it here</a></p>\\n<p><strong>Note:</strong> Polar Charts are not yet supported for <code class=\\\"language-text\\\">VictoryBoxPlot</code></p>\\n<h3 id=\\\"q1\\\"><a href=\\\"#q1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q1</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">q1</code> data accessor prop to define the q1 value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the q1 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q1=&quot;q1_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a q1 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q1={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a q1 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q1=&quot;bonds.q1&quot;</code>, <code class=\\\"language-text\\\">q1={[&quot;bonds&quot;, &quot;q1&quot;]}</code></p>\\n<h3 id=\\\"q1component\\\"><a href=\\\"#q1component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q1Component</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">q1Component</code> prop takes a component instance which will be responsible for rendering an element to represent the q1 value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">q1Component</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">width</code> and <code class=\\\"language-text\\\">height</code> Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">q1Component</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#box\\\">Box component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">q1Component={&lt;Box/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">q1Component<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Box</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"q1labelcomponent\\\"><a href=\\\"#q1labelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q1LabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">q1LabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the q1 value for each box. The new element created from the passed <code class=\\\"language-text\\\">q1LabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">q1LabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">q1LabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">q1LabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  q1Labels\\n  q1LabelComponent={\\n    &lt;VictoryLabel\\n      dx={5} dy={5}\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"q1labels\\\"><a href=\\\"#q1labels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q1Labels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">q1Labels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the q1 value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">q1Labels</code></li>\\n<li><code class=\\\"language-text\\\">q1Labels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">q1Labels={(d) =&gt; Math.round(d.q1)}</code></li>\\n</ul>\\n<h3 id=\\\"q3\\\"><a href=\\\"#q3\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q3</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">q3</code> data accessor prop to define the q3 value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the q3 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q3=&quot;q3_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a q3 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q3={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a q3 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q3=&quot;bonds.q3&quot;</code>, <code class=\\\"language-text\\\">q3={[&quot;bonds&quot;, &quot;q3&quot;]}</code></p>\\n<h3 id=\\\"q3component\\\"><a href=\\\"#q3component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q3Component</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">q3Component</code> prop takes a component instance which will be responsible for rendering an element to represent the q3 value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">q3Component</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">width</code> and <code class=\\\"language-text\\\">height</code> Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">q3Component</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#box\\\">Box component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">q3Component={&lt;Box/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">q3Component<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Box</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"q3labelcomponent\\\"><a href=\\\"#q3labelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q3LabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">q3LabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the q3 value for each box. The new element created from the passed <code class=\\\"language-text\\\">q3LabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">q3LabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">q3LabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">q3LabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  q3Labels\\n  q3LabelComponent={\\n    &lt;VictoryLabel\\n      dx={5} dy={5}\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"q3labels\\\"><a href=\\\"#q3labels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q3Labels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">q3Labels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the q3 value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">q3Labels</code></li>\\n<li><code class=\\\"language-text\\\">q3Labels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">q3Labels={(d) =&gt; Math.round(d.q3)}</code></li>\\n</ul>\\n<h3 id=\\\"range\\\"><a href=\\\"#range\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>range</h3>\\n<p><code class=\\\"language-text\\\">type: array[low, high] || { x: [low, high], y: [low, high] }</code></p>\\n<p><strong>The <code class=\\\"language-text\\\">range</code> prop is usually controlled by <code class=\\\"language-text\\\">VictoryChart</code>. It will not typically be necessary to set a <code class=\\\"language-text\\\">range</code> prop manually</strong></p>\\n<p><a href=\\\"https://formidable.com/open-source/victory/docs/common-props#range\\\">Read about the <code class=\\\"language-text\\\">range</code> prop in detail</a></p>\\n<h3 id=\\\"samples\\\"><a href=\\\"#samples\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>samples</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">samples</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#samples\\\">Read about it here</a></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">samples={50}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">samples<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"scale\\\"><a href=\\\"#scale\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>scale</h3>\\n<p><code class=\\\"language-text\\\">type: scale || { x: scale, y: scale }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">scale</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#scale\\\">Read about it here</a>\\nOptions for scale include “linear”, “time”, “log”, “sqrt” and the <code class=\\\"language-text\\\">d3-scale</code> functions that correspond to these options.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">scale=&quot;linear&quot;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">scale<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"linear\\\"</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"log\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"sharedevents\\\"><a href=\\\"#sharedevents\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>sharedEvents</h3>\\n<p><strong>The <code class=\\\"language-text\\\">sharedEvents</code> prop is used internally to coordinate events between components. It should not be set manually.</strong></p>\\n<h3 id=\\\"singlequadrantdomainpadding\\\"><a href=\\\"#singlequadrantdomainpadding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>singleQuadrantDomainPadding</h3>\\n<p><code class=\\\"language-text\\\">type: boolean || { x: boolean, y: boolean }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">singleQuadrantDomainPadding</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#singlequadrantdomainpadding\\\">Read about it here</a></p>\\n<h3 id=\\\"sortkey\\\"><a href=\\\"#sortkey\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>sortKey</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">sortKey</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#sortkey\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/data-accessors\\\">Data Accessors Guide</a> for more detail on formatting and processing data.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">sortKey<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"x\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"sortorder\\\"><a href=\\\"#sortorder\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>sortOrder</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;ascending&quot; || &quot;descending&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">sortOrder</code> prop specifies whether sorted data should be returned in ascending or descending order.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">sortOrder=&quot;ascending&quot;</code></p>\\n<h3 id=\\\"standalone\\\"><a href=\\\"#standalone\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>standalone</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">standalone</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#standalone\\\">Read about it here</a></p>\\n<p><strong>note:</strong> When <code class=\\\"language-text\\\">VictoryBar</code> is nested within a component like <code class=\\\"language-text\\\">VictoryChart</code>, this prop will be set to <code class=\\\"language-text\\\">false</code></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">standalone={true}</code></p>\\n<h3 id=\\\"style\\\"><a href=\\\"#style\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>style</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">type: {\\n  parent: object,\\n  max: object,\\n  maxLabels: object,\\n  min: object,\\n  minLabels: object,\\n  median: object,\\n  medianLabels: object,\\n  q1: object,\\n  q1Labels: object,\\n  q3: object,\\n  q3Labels: object\\n}</code></pre>\\n      </div>\\n<p>The <code class=\\\"language-text\\\">style</code> prop defines the style of the component. The style prop should be given as an object with styles defined for <code class=\\\"language-text\\\">parent</code>, <code class=\\\"language-text\\\">max</code>, <code class=\\\"language-text\\\">maxLabels</code>, <code class=\\\"language-text\\\">min</code>, <code class=\\\"language-text\\\">minLabels</code>,<code class=\\\"language-text\\\">median</code>, <code class=\\\"language-text\\\">medianLabels</code>,<code class=\\\"language-text\\\">q1</code>, <code class=\\\"language-text\\\">q1Labels</code>,<code class=\\\"language-text\\\">q3</code>, <code class=\\\"language-text\\\">q3Labels</code>. Any valid svg styles are supported, but <code class=\\\"language-text\\\">width</code>, <code class=\\\"language-text\\\">height</code>, and <code class=\\\"language-text\\\">padding</code> should be specified via props as they determine relative layout for components in VictoryChart. Functional styles may be defined for style properties, and they will be evaluated with each datum.</p>\\n<p><strong>note:</strong> When a component is rendered as a child of another Victory component, or within a custom <code class=\\\"language-text\\\">&lt;svg&gt;</code> element with <code class=\\\"language-text\\\">standalone={false}</code> parent styles will be applied to the enclosing <code class=\\\"language-text\\\">&lt;g&gt;</code> tag. Many styles that can be applied to a parent <code class=\\\"language-text\\\">&lt;svg&gt;</code> will not be expressed when applied to a <code class=\\\"language-text\\\">&lt;g&gt;</code>.</p>\\n<p><strong>note:</strong> custom <code class=\\\"language-text\\\">angle</code> and <code class=\\\"language-text\\\">verticalAnchor</code> properties may be included in <code class=\\\"language-text\\\">labels</code> styles.</p>\\n<p><em>default (provided by default theme):</em> See <a href=\\\"https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-theme/grayscale.js\\\">grayscale theme</a> for more detail</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  minLabels\\n  maxLabels\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  style={{\\n    min: { stroke: &quot;tomato&quot; },\\n    max: { stroke: &quot;orange&quot; },\\n    q1: { fill: &quot;tomato&quot; },\\n    q3: { fill: &quot;orange&quot; },\\n    median: { stroke: &quot;white&quot;, strokeWidth: 2 },\\n    minLabels: { fill: &quot;tomato&quot; },\\n    maxLabels: { fill: &quot;orange&quot; }\\n  }}\\n/&gt;</code></pre>\\n<h3 id=\\\"theme\\\"><a href=\\\"#theme\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>theme</h3>\\n<p><code class=\\\"language-text\\\">type: object</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">theme</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#theme\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/themes\\\">Themes Guide</a> for information about creating custom themes.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">theme={VictoryTheme.grayscale}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">theme<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>VictoryTheme<span class=\\\"token punctuation\\\">.</span>material<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"whiskerwidth\\\"><a href=\\\"#whiskerwidth\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>whiskerWidth</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">whiskerWidth</code> prop specifies how wide each whisker crosshair should be. If the <code class=\\\"language-text\\\">whiskerWidth</code> prop is not set, the width of the whisker crosshair will match the width of the box.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={10}&gt;\\n  &lt;VictoryBoxPlot\\n    boxWidth={10}\\n    whiskerWidth={5}\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"width\\\"><a href=\\\"#width\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>width</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">width</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#width\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">width={450}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">width<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"x\\\"><a href=\\\"#x\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>x</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">x</code> data accessor prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#x\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/data-accessors\\\">Data Accessors Guide</a> for more detail on formatting and processing data.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">x<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"employee.name\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"y\\\"><a href=\\\"#y\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>y</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">y</code> data accessor prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#y\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/data-accessors\\\">Data Accessors Guide</a> for more detail on formatting and processing data.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">y<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span>d<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> d<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token operator\\\">+</span> d<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\",\"frontmatter\":{\"id\":0,\"scope\":null,\"title\":\"VictoryBoxPlot\"},\"fields\":{\"slug\":\"/docs/victory-boxplot/\"}}},\"pathContext\":{\"slug\":\"/docs/victory-boxplot/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-victory-boxplot-ddad2d59d595cbf50a08.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"victoryboxplot\\\"><a href=\\\"#victoryboxplot\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>VictoryBoxPlot</h1>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> renders a box plot to describe the distribution of a set of data. Data for <code class=\\\"language-text\\\">VictoryBoxPlot</code> may be given with summary statistics pre-calculated (<code class=\\\"language-text\\\">min</code>, <code class=\\\"language-text\\\">median</code>, <code class=\\\"language-text\\\">max</code>, <code class=\\\"language-text\\\">q1</code>, <code class=\\\"language-text\\\">q3</code>), or as an array of raw data. VictoryBoxPlot can be composed with <a href=\\\"https://formidable.com/open-source/victory/docs/victory-chart\\\"><code class=\\\"language-text\\\">VictoryChart</code></a> to create box plot charts.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={20}&gt;\\n  &lt;VictoryBoxPlot\\n    boxWidth={20}\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h2 id=\\\"props\\\"><a href=\\\"#props\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Props</h2>\\n<h3 id=\\\"animate\\\"><a href=\\\"#animate\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>animate</h3>\\n<p><code class=\\\"language-text\\\">type: boolean || object</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">animate</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#animate\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/animations\\\">Animations Guide</a> for more detail on animations and transitions</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">animate<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n  duration<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2000</span><span class=\\\"token punctuation\\\">,</span>\\n  onLoad<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> duration<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1000</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"boxwidth\\\"><a href=\\\"#boxwidth\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>boxWidth</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">boxWidth</code> prop specifies how wide each box should be. If the <code class=\\\"language-text\\\">whiskerWidth</code> prop is not set, this prop will also determine the width of the whisker crosshair.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={10}&gt;\\n  &lt;VictoryBoxPlot\\n    boxWidth={10}\\n    whiskerWidth={5}\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"categories\\\"><a href=\\\"#categories\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>categories</h3>\\n<p><code class=\\\"language-text\\\">type: array[string] || { x: array[string], y: array[string] }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBar</code> uses the standard <code class=\\\"language-text\\\">categories</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#categories\\\">Read about it here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">categories<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"dogs\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"cats\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"mice\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"containercomponent\\\"><a href=\\\"#containercomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>containerComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBar</code> uses the standard <code class=\\\"language-text\\\">containerComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#containercomponent\\\">Read about it here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">containerComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryVoronoiContainer</span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"data\\\"><a href=\\\"#data\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>data</h3>\\n<p><code class=\\\"language-text\\\">type: array[object]</code></p>\\n<p>The <code class=\\\"language-text\\\">data</code> prop for <code class=\\\"language-text\\\">VictoryBoxPlot</code> may be given in a a variety of formats:</p>\\n<ul>\\n<li>As an array of standard data objects with values specified for <code class=\\\"language-text\\\">x</code> and <code class=\\\"language-text\\\">y</code>\\nWhen given in this format, repeated values for either <code class=\\\"language-text\\\">x</code>or <code class=\\\"language-text\\\">y</code> will be used for calculating summary statistics</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">data<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token operator\\\">...</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<ul>\\n<li>As an array of data objects where <em>either</em> <code class=\\\"language-text\\\">x</code> <em>or</em> <code class=\\\"language-text\\\">y</code> is given as an array of values\\nWhen given in this format, array values are used for calculating summary statistics.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">data<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<ul>\\n<li>As an array of data objects with pre-calculated summary statistics(<code class=\\\"language-text\\\">min</code>, <code class=\\\"language-text\\\">median</code>, <code class=\\\"language-text\\\">max</code>, <code class=\\\"language-text\\\">q1</code>, <code class=\\\"language-text\\\">q3</code>)\\nWhen given in this format, <code class=\\\"language-text\\\">VictoryBoxPlot</code> <em>will not</em> preform statistical analysis. Pre-calculating summary statistics for large datasets will improve performance.</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">data<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> min<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> median<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> max<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> q1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> q3<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">7</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> min<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> median<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> max<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">,</span> q1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> q3<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">6</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> min<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> median<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span> max<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">,</span> q1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> q3<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span></code></pre>\\n      </div>\\n<p>Use the <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#x\\\"><code class=\\\"language-text\\\">x</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#y\\\"><code class=\\\"language-text\\\">y</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#min\\\"><code class=\\\"language-text\\\">min</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#max\\\"><code class=\\\"language-text\\\">max</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#median\\\"><code class=\\\"language-text\\\">median</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#q1\\\"><code class=\\\"language-text\\\">q1</code></a>, and <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#q3\\\"><code class=\\\"language-text\\\">q3</code></a> data accessor props to specify custom data formats. Refer to the <a href=\\\"https://formidable.com/open-source/victory/guides/data-accessors\\\">Data Accessors Guide</a> for more detail.</p>\\n<h3 id=\\\"domain\\\"><a href=\\\"#domain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>domain</h3>\\n<p><code class=\\\"language-text\\\">type: array[low, high] || { x: [low, high], y: [low, high] }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">domain</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#domain\\\">Read about it here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">domain<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"domainpadding\\\"><a href=\\\"#domainpadding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>domainPadding</h3>\\n<p><code class=\\\"language-text\\\">type: number || array[left, right] || { x: [left, right], y: [bottom, top] }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">domainPadding</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#domainpadding\\\">Read about it here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">domainPadding<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"eventkey\\\"><a href=\\\"#eventkey\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>eventKey</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">eventKey</code> prop to specify how event targets are addressed. <strong>This prop is not commonly used.</strong> <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#eventkey\\\">Read about the <code class=\\\"language-text\\\">eventKey</code> prop in more detail here</a></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">eventKey<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"x\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"events\\\"><a href=\\\"#events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>events</h3>\\n<p><code class=\\\"language-text\\\">type array[object]</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">events</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#events\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/events\\\">Events Guide</a> for more information on defining events.</p>\\n<p><strong>note:</strong> valid event targets for <code class=\\\"language-text\\\">VictoryBoxPlot</code> are:\\n“min”, “minLabels”, “grid”, “ticks”, and “tickLabels”.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;div&gt;\\n  &lt;h3&gt;Click Me&lt;/h3&gt;\\n  &lt;VictoryBoxPlot\\n    medianLabels={() =&gt; null}\\n    events={[{\\n      target: &quot;q3&quot;,\\n      eventHandlers: {\\n        onClick: () =&gt; {\\n          return [\\n            {\\n              mutation: (props) =&gt; {\\n                return { style: Object.assign(props.style, { fill: &quot;tomato&quot; }) };\\n              }\\n            }\\n          ];\\n        }\\n      }\\n    }]}\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/div&gt;</code></pre>\\n<h3 id=\\\"externaleventmutations\\\"><a href=\\\"#externaleventmutations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>externalEventMutations</h3>\\n<p><code class=\\\"language-text\\\">type: array[object]</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">externalEventMutations</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#externalEventsMutations\\\">Read about it in detail</a></p>\\n<h3 id=\\\"groupcomponent\\\"><a href=\\\"#groupcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>groupComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">groupComponent</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#groupcomponent\\\">Read about it here</a></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">&lt;g/&gt;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">groupComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>g</span> <span class=\\\"token attr-name\\\">transform</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>translate(10, 10)<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"height\\\"><a href=\\\"#height\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>height</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">height</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#height\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">height={300}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">height<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"horizontal\\\"><a href=\\\"#horizontal\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>horizontal</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The horizontal prop determines whether boxes will be laid vertically or horizontally. The boxes will be vertical if this prop is false or unspecified, or horizontal if the prop is set to true.</p>\\n<p><em>Note: Data should be flipped when <code class=\\\"language-text\\\">horizontal</code> is true</em></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={20}&gt;\\n  &lt;VictoryBoxPlot horizontal\\n    data={[\\n      { y: 1, x: [1, 2, 3, 5] },\\n      { y: 2, x: [3, 2, 8, 10] },\\n      { y: 3, x: [2, 8, 6, 5] },\\n      { y: 4, x: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"labelorientation\\\"><a href=\\\"#labelorientation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>labelOrientation</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;top&quot; || &quot;bottom&quot; || &quot;left&quot; || &quot;right&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">labelOrientation</code> prop determines where labels are placed relative to their corresponding data. If this prop is not set, it will be set to “top” for horizontal charts, and “right” for vertical charts.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={20}&gt;\\n  &lt;VictoryBoxPlot horizontal\\n    labels\\n    labelOrientation=&quot;top&quot;\\n    data={[\\n      { y: 1, x: [1, 2, 3, 5] },\\n      { y: 2, x: [3, 2, 8, 10] },\\n      { y: 3, x: [2, 8, 6, 5] },\\n      { y: 4, x: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"labels\\\"><a href=\\\"#labels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>labels</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>When the boolean <code class=\\\"language-text\\\">labels</code> prop is set to <code class=\\\"language-text\\\">true</code>, the values for <code class=\\\"language-text\\\">min</code>, <code class=\\\"language-text\\\">max</code>, <code class=\\\"language-text\\\">median</code>, <code class=\\\"language-text\\\">q1</code>, and <code class=\\\"language-text\\\">q3</code> will be displayed for each box. For more granular label control, use the individual <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#minlabels\\\"><code class=\\\"language-text\\\">minLabels</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#maxlabels\\\"><code class=\\\"language-text\\\">maxLabels</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#medianlabels\\\"><code class=\\\"language-text\\\">medianLabels</code></a>, <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#q1labels\\\"><code class=\\\"language-text\\\">q1Labels</code></a>, and <a href=\\\"https://formidable.com/open-source/victory/docs/victory-boxplot#q3labels\\\"><code class=\\\"language-text\\\">q3Labels</code></a> props.</p>\\n<h3 id=\\\"max\\\"><a href=\\\"#max\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>max</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">max</code> data accessor prop to define the max value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the max value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">max=&quot;max_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a max value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">max={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a max value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">max=&quot;bonds.max&quot;</code>, <code class=\\\"language-text\\\">max={[&quot;bonds&quot;, &quot;max&quot;]}</code></p>\\n<h3 id=\\\"maxcomponent\\\"><a href=\\\"#maxcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>maxComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">maxComponent</code> prop takes a component instance which will be responsible for rendering an element to represent the maximum value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">maxComponent</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">majorWhisker</code> and <code class=\\\"language-text\\\">minorWhisker</code>. The <code class=\\\"language-text\\\">majorWhisker</code> and <code class=\\\"language-text\\\">minorWhisker</code> props are given as objects with values for <code class=\\\"language-text\\\">x1</code>, <code class=\\\"language-text\\\">y1</code>, <code class=\\\"language-text\\\">x2</code> and <code class=\\\"language-text\\\">y2</code> that describes the lines that make up the major and minor whisker. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">maxComponent</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#whisker\\\">Whisker component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">maxComponent={&lt;Whisker/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">maxComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Whisker</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"maxlabelcomponent\\\"><a href=\\\"#maxlabelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>maxLabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">maxLabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the maximum value for each box. The new element created from the passed <code class=\\\"language-text\\\">maxLabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">maxLabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">maxLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">maxLabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  maxLabels\\n  maxLabelComponent={\\n    &lt;VictoryLabel\\n      dx={-10} dy={-10}\\n      textAnchor=&quot;middle&quot;\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"maxlabels\\\"><a href=\\\"#maxlabels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>maxLabels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">maxLabels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the max value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">maxLabels</code></li>\\n<li><code class=\\\"language-text\\\">maxLabels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">maxLabels={(d) =&gt; Math.round(d.max)}</code></li>\\n</ul>\\n<h3 id=\\\"maxdomain\\\"><a href=\\\"#maxdomain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>maxDomain</h3>\\n<p><code class=\\\"language-text\\\">type: number || { x: number, y: number }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">maxDomain</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#maxDomain\\\">Read about it in detail</a></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart maxDomain={{ x: 3 }}&gt;\\n  &lt;VictoryBoxPlot\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"median\\\"><a href=\\\"#median\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>median</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">median</code> data accessor prop to define the median value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the median value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">median=&quot;median_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a median value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">median={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a median value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">median=&quot;bonds.median&quot;</code>, <code class=\\\"language-text\\\">median={[&quot;bonds&quot;, &quot;median&quot;]}</code></p>\\n<h3 id=\\\"mediancomponent\\\"><a href=\\\"#mediancomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>medianComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">medianComponent</code> prop takes a component instance which will be responsible for rendering an element to represent the median value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">medianComponent</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">x1</code>, <code class=\\\"language-text\\\">y1</code>, <code class=\\\"language-text\\\">x2</code> and <code class=\\\"language-text\\\">y2</code> Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">medianComponent</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#line\\\">Line component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">medianComponent={&lt;LineSegment/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">medianComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>LineSegment</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"medianlabelcomponent\\\"><a href=\\\"#medianlabelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>medianLabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">medianLabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the median value for each box. The new element created from the passed <code class=\\\"language-text\\\">medianLabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">medianLabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">medianLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">medianLabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  medianLabels\\n  medianLabelComponent={\\n    &lt;VictoryLabel\\n      dx={-10} dy={-10}\\n      textAnchor=&quot;middle&quot;\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"medianlabels\\\"><a href=\\\"#medianlabels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>medianLabels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">medianLabels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the median value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">medianLabels</code></li>\\n<li><code class=\\\"language-text\\\">medianLabels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">medianLabels={(d) =&gt; Math.round(d.median)}</code></li>\\n</ul>\\n<h3 id=\\\"min\\\"><a href=\\\"#min\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>min</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">min</code> data accessor prop to define the min value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the min value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">min=&quot;min_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a min value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">min={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a min value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">min=&quot;bonds.min&quot;</code>, <code class=\\\"language-text\\\">min={[&quot;bonds&quot;, &quot;min&quot;]}</code></p>\\n<h3 id=\\\"mincomponent\\\"><a href=\\\"#mincomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>minComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">minComponent</code> prop takes a component instance which will be responsible for rendering an element to represent the minimum value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">minComponent</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">majorWhisker</code> and <code class=\\\"language-text\\\">minorWhisker</code>. The <code class=\\\"language-text\\\">majorWhisker</code> and <code class=\\\"language-text\\\">minorWhisker</code> props are given as objects with values for <code class=\\\"language-text\\\">x1</code>, <code class=\\\"language-text\\\">y1</code>, <code class=\\\"language-text\\\">x2</code> and <code class=\\\"language-text\\\">y2</code> that describes the lines that make up the major and minor whisker. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">minComponent</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#whisker\\\">Whisker component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">minComponent={&lt;Whisker/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">minComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Whisker</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"minlabelcomponent\\\"><a href=\\\"#minlabelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>minLabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">minLabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the minimum value for each box. The new element created from the passed <code class=\\\"language-text\\\">minLabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">minLabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">minLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">minLabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  minLabels\\n  minLabelComponent={\\n    &lt;VictoryLabel\\n      dx={-10} dy={10}\\n      textAnchor=&quot;middle&quot;\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"minlabels\\\"><a href=\\\"#minlabels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>minLabels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">minLabels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the min value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">minLabels</code></li>\\n<li><code class=\\\"language-text\\\">minLabels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">minLabels={(d) =&gt; Math.round(d.min)}</code></li>\\n</ul>\\n<h3 id=\\\"mindomain\\\"><a href=\\\"#mindomain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>minDomain</h3>\\n<p><code class=\\\"language-text\\\">type: number || { x: number, y: number }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">minDomain</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#minDomain\\\">Read about it in detail</a></p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart minDomain={{ y: 0 }}&gt;\\n  &lt;VictoryBoxPlot\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"name\\\"><a href=\\\"#name\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>name</h3>\\n<p><code class=\\\"language-text\\\">type: string</code></p>\\n<p>The <code class=\\\"language-text\\\">name</code> prop is used to reference a component instance when defining shared events.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"series-1\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"origin\\\"><a href=\\\"#origin\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>origin</h3>\\n<p><code class=\\\"language-text\\\">type: { x: number, y: number }</code></p>\\n<p><strong>The <code class=\\\"language-text\\\">origin</code> prop is only used by polar charts, and is usually controlled by <code class=\\\"language-text\\\">VictoryChart</code>. It will not typically be necessary to set an <code class=\\\"language-text\\\">origin</code> prop manually</strong></p>\\n<p><a href=\\\"https://formidable.com/open-source/victory/docs/common-props#origin\\\">Read about the <code class=\\\"language-text\\\">origin</code> prop in detail</a></p>\\n<h3 id=\\\"padding\\\"><a href=\\\"#padding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>padding</h3>\\n<p><code class=\\\"language-text\\\">type: number || { top: number, bottom: number, left: number, right: number }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBar</code> uses the standard <code class=\\\"language-text\\\">padding</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#padding\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">padding={50}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">padding<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> top<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span> bottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">60</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"polar\\\"><a href=\\\"#polar\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>polar</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">polar</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#polar\\\">Read about it here</a></p>\\n<p><strong>Note:</strong> Polar Charts are not yet supported for <code class=\\\"language-text\\\">VictoryBoxPlot</code></p>\\n<h3 id=\\\"q1\\\"><a href=\\\"#q1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q1</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">q1</code> data accessor prop to define the q1 value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the q1 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q1=&quot;q1_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a q1 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q1={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a q1 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q1=&quot;bonds.q1&quot;</code>, <code class=\\\"language-text\\\">q1={[&quot;bonds&quot;, &quot;q1&quot;]}</code></p>\\n<h3 id=\\\"q1component\\\"><a href=\\\"#q1component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q1Component</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">q1Component</code> prop takes a component instance which will be responsible for rendering an element to represent the q1 value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">q1Component</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">width</code> and <code class=\\\"language-text\\\">height</code> Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">q1Component</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#box\\\">Box component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">q1Component={&lt;Box/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">q1Component<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Box</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"q1labelcomponent\\\"><a href=\\\"#q1labelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q1LabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">q1LabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the q1 value for each box. The new element created from the passed <code class=\\\"language-text\\\">q1LabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">q1LabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">q1LabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">q1LabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  q1Labels\\n  q1LabelComponent={\\n    &lt;VictoryLabel\\n      dx={5} dy={5}\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"q1labels\\\"><a href=\\\"#q1labels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q1Labels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">q1Labels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the q1 value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">q1Labels</code></li>\\n<li><code class=\\\"language-text\\\">q1Labels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">q1Labels={(d) =&gt; Math.round(d.q1)}</code></li>\\n</ul>\\n<h3 id=\\\"q3\\\"><a href=\\\"#q3\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q3</h3>\\n<p><code class=\\\"language-text\\\">type: string || array[string] || function</code></p>\\n<p>Use the <code class=\\\"language-text\\\">q3</code> data accessor prop to define the q3 value of a box plot.</p>\\n<p><strong>string:</strong> specify which property in an array of data objects should be used as the q3 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q3=&quot;q3_value&quot;</code></p>\\n<p><strong>function:</strong> use a function to translate each element in a data array into a q3 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q3={() =&gt; 10}</code></p>\\n<p><strong>path string or path array:</strong> specify which property in an array of nested data objects should be used as a q3 value</p>\\n<p><em>examples:</em> <code class=\\\"language-text\\\">q3=&quot;bonds.q3&quot;</code>, <code class=\\\"language-text\\\">q3={[&quot;bonds&quot;, &quot;q3&quot;]}</code></p>\\n<h3 id=\\\"q3component\\\"><a href=\\\"#q3component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q3Component</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">q3Component</code> prop takes a component instance which will be responsible for rendering an element to represent the q3 value of the box plot. The new element created from the passed <code class=\\\"language-text\\\">q3Component</code> will be provided with the following props calculated by <code class=\\\"language-text\\\">VictoryBoxPlot</code>:  <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">style</code>, <code class=\\\"language-text\\\">events</code>, <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">width</code> and <code class=\\\"language-text\\\">height</code> Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class=\\\"language-text\\\">q3Component</code> is not provided, <code class=\\\"language-text\\\">VictoryBoxPlot</code> will use its default <a href=\\\"https://formidable.com/open-source/victory/docs/victory-primitives#box\\\">Box component</a>.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">q3Component={&lt;Box/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">q3Component<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Box</span> <span class=\\\"token attr-name\\\">events</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> onClick<span class=\\\"token punctuation\\\">:</span> handleClick <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"q3labelcomponent\\\"><a href=\\\"#q3labelcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q3LabelComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">q3LabelComponent</code> prop takes a component instance which will be used to render the label corresponding to the q3 value for each box. The new element created from the passed <code class=\\\"language-text\\\">q3LabelComponent</code> will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">datum</code>, <code class=\\\"language-text\\\">index</code>, <code class=\\\"language-text\\\">scale</code>, <code class=\\\"language-text\\\">verticalAnchor</code>, <code class=\\\"language-text\\\">textAnchor</code>, <code class=\\\"language-text\\\">angle</code>, <code class=\\\"language-text\\\">transform</code>, <code class=\\\"language-text\\\">style</code> and <code class=\\\"language-text\\\">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class=\\\"language-text\\\">q3LabelComponent</code> is omitted, a new <a href=\\\"https://formidable.com/open-source/victory/docs/victory-label\\\"><code class=\\\"language-text\\\">VictoryLabel</code></a> will be created with props described above.</p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/custom-components\\\">Custom Components Guide</a> for more detail on creating your own components</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">q3LabelComponent={&lt;VictoryLabel/&gt;}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">q3LabelComponent<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>VictoryLabel</span> <span class=\\\"token attr-name\\\">dy</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  q3Labels\\n  q3LabelComponent={\\n    &lt;VictoryLabel\\n      dx={5} dy={5}\\n    /&gt;\\n  }\\n/&gt;</code></pre>\\n<h3 id=\\\"q3labels\\\"><a href=\\\"#q3labels\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>q3Labels</h3>\\n<p><code class=\\\"language-text\\\">type: array || function || boolean</code></p>\\n<p>The <code class=\\\"language-text\\\">q3Labels</code> prop defines the labels that will appear above each point. This prop should be given as a boolean, an array or as a function of data. When given as a boolean value, the q3 value of each datum will be used for the label.</p>\\n<p><em>examples:</em></p>\\n<ul>\\n<li><code class=\\\"language-text\\\">q3Labels</code></li>\\n<li><code class=\\\"language-text\\\">q3Labels={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;]}</code></li>\\n<li><code class=\\\"language-text\\\">q3Labels={(d) =&gt; Math.round(d.q3)}</code></li>\\n</ul>\\n<h3 id=\\\"range\\\"><a href=\\\"#range\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>range</h3>\\n<p><code class=\\\"language-text\\\">type: array[low, high] || { x: [low, high], y: [low, high] }</code></p>\\n<p><strong>The <code class=\\\"language-text\\\">range</code> prop is usually controlled by <code class=\\\"language-text\\\">VictoryChart</code>. It will not typically be necessary to set a <code class=\\\"language-text\\\">range</code> prop manually</strong></p>\\n<p><a href=\\\"https://formidable.com/open-source/victory/docs/common-props#range\\\">Read about the <code class=\\\"language-text\\\">range</code> prop in detail</a></p>\\n<h3 id=\\\"samples\\\"><a href=\\\"#samples\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>samples</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">samples</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#samples\\\">Read about it here</a></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">samples={50}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">samples<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"scale\\\"><a href=\\\"#scale\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>scale</h3>\\n<p><code class=\\\"language-text\\\">type: scale || { x: scale, y: scale }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">scale</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#scale\\\">Read about it here</a>\\nOptions for scale include “linear”, “time”, “log”, “sqrt” and the <code class=\\\"language-text\\\">d3-scale</code> functions that correspond to these options.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">scale=&quot;linear&quot;</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">scale<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"linear\\\"</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"log\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"sharedevents\\\"><a href=\\\"#sharedevents\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>sharedEvents</h3>\\n<p><strong>The <code class=\\\"language-text\\\">sharedEvents</code> prop is used internally to coordinate events between components. It should not be set manually.</strong></p>\\n<h3 id=\\\"singlequadrantdomainpadding\\\"><a href=\\\"#singlequadrantdomainpadding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>singleQuadrantDomainPadding</h3>\\n<p><code class=\\\"language-text\\\">type: boolean || { x: boolean, y: boolean }</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">singleQuadrantDomainPadding</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#singlequadrantdomainpadding\\\">Read about it here</a></p>\\n<h3 id=\\\"sortkey\\\"><a href=\\\"#sortkey\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>sortKey</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">sortKey</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#sortkey\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/data-accessors\\\">Data Accessors Guide</a> for more detail on formatting and processing data.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">sortKey<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"x\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"sortorder\\\"><a href=\\\"#sortorder\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>sortOrder</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;ascending&quot; || &quot;descending&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">sortOrder</code> prop specifies whether sorted data should be returned in ascending or descending order.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">sortOrder=&quot;ascending&quot;</code></p>\\n<h3 id=\\\"standalone\\\"><a href=\\\"#standalone\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>standalone</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">standalone</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#standalone\\\">Read about it here</a></p>\\n<p><strong>note:</strong> When <code class=\\\"language-text\\\">VictoryBar</code> is nested within a component like <code class=\\\"language-text\\\">VictoryChart</code>, this prop will be set to <code class=\\\"language-text\\\">false</code></p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">standalone={true}</code></p>\\n<h3 id=\\\"style\\\"><a href=\\\"#style\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>style</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">type: {\\n  parent: object,\\n  max: object,\\n  maxLabels: object,\\n  min: object,\\n  minLabels: object,\\n  median: object,\\n  medianLabels: object,\\n  q1: object,\\n  q1Labels: object,\\n  q3: object,\\n  q3Labels: object\\n}</code></pre>\\n      </div>\\n<p>The <code class=\\\"language-text\\\">style</code> prop defines the style of the component. The style prop should be given as an object with styles defined for <code class=\\\"language-text\\\">parent</code>, <code class=\\\"language-text\\\">max</code>, <code class=\\\"language-text\\\">maxLabels</code>, <code class=\\\"language-text\\\">min</code>, <code class=\\\"language-text\\\">minLabels</code>,<code class=\\\"language-text\\\">median</code>, <code class=\\\"language-text\\\">medianLabels</code>,<code class=\\\"language-text\\\">q1</code>, <code class=\\\"language-text\\\">q1Labels</code>,<code class=\\\"language-text\\\">q3</code>, <code class=\\\"language-text\\\">q3Labels</code>. Any valid svg styles are supported, but <code class=\\\"language-text\\\">width</code>, <code class=\\\"language-text\\\">height</code>, and <code class=\\\"language-text\\\">padding</code> should be specified via props as they determine relative layout for components in VictoryChart. Functional styles may be defined for style properties, and they will be evaluated with each datum.</p>\\n<p><strong>note:</strong> When a component is rendered as a child of another Victory component, or within a custom <code class=\\\"language-text\\\">&lt;svg&gt;</code> element with <code class=\\\"language-text\\\">standalone={false}</code> parent styles will be applied to the enclosing <code class=\\\"language-text\\\">&lt;g&gt;</code> tag. Many styles that can be applied to a parent <code class=\\\"language-text\\\">&lt;svg&gt;</code> will not be expressed when applied to a <code class=\\\"language-text\\\">&lt;g&gt;</code>.</p>\\n<p><strong>note:</strong> custom <code class=\\\"language-text\\\">angle</code> and <code class=\\\"language-text\\\">verticalAnchor</code> properties may be included in <code class=\\\"language-text\\\">labels</code> styles.</p>\\n<p><em>default (provided by default theme):</em> See <a href=\\\"https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-theme/grayscale.js\\\">grayscale theme</a> for more detail</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryBoxPlot\\n  minLabels\\n  maxLabels\\n  data={[\\n    { x: 1, y: [1, 2, 3, 5] },\\n    { x: 2, y: [3, 2, 8, 10] },\\n    { x: 3, y: [2, 8, 6, 5] },\\n    { x: 4, y: [1, 3, 2, 9] }\\n  ]}\\n  style={{\\n    min: { stroke: &quot;tomato&quot; },\\n    max: { stroke: &quot;orange&quot; },\\n    q1: { fill: &quot;tomato&quot; },\\n    q3: { fill: &quot;orange&quot; },\\n    median: { stroke: &quot;white&quot;, strokeWidth: 2 },\\n    minLabels: { fill: &quot;tomato&quot; },\\n    maxLabels: { fill: &quot;orange&quot; }\\n  }}\\n/&gt;</code></pre>\\n<h3 id=\\\"theme\\\"><a href=\\\"#theme\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>theme</h3>\\n<p><code class=\\\"language-text\\\">type: object</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">theme</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#theme\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/themes\\\">Themes Guide</a> for information about creating custom themes.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">theme={VictoryTheme.grayscale}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">theme<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>VictoryTheme<span class=\\\"token punctuation\\\">.</span>material<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"whiskerwidth\\\"><a href=\\\"#whiskerwidth\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>whiskerWidth</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p>The <code class=\\\"language-text\\\">whiskerWidth</code> prop specifies how wide each whisker crosshair should be. If the <code class=\\\"language-text\\\">whiskerWidth</code> prop is not set, the width of the whisker crosshair will match the width of the box.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart domainPadding={10}&gt;\\n  &lt;VictoryBoxPlot\\n    boxWidth={10}\\n    whiskerWidth={5}\\n    data={[\\n      { x: 1, y: [1, 2, 3, 5] },\\n      { x: 2, y: [3, 2, 8, 10] },\\n      { x: 3, y: [2, 8, 6, 5] },\\n      { x: 4, y: [1, 3, 2, 9] }\\n    ]}\\n  /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"width\\\"><a href=\\\"#width\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>width</h3>\\n<p><code class=\\\"language-text\\\">type: number</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">width</code> prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#width\\\">Read about it here</a></p>\\n<p><em>default (provided by default theme):</em> <code class=\\\"language-text\\\">width={450}</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">width<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h3 id=\\\"x\\\"><a href=\\\"#x\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>x</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">x</code> data accessor prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#x\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/data-accessors\\\">Data Accessors Guide</a> for more detail on formatting and processing data.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">x<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"employee.name\\\"</span></code></pre>\\n      </div>\\n<h3 id=\\\"y\\\"><a href=\\\"#y\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>y</h3>\\n<p><code class=\\\"language-text\\\">type: string || integer || array[string] || function</code></p>\\n<p><code class=\\\"language-text\\\">VictoryBoxPlot</code> uses the standard <code class=\\\"language-text\\\">y</code> data accessor prop. <a href=\\\"https://formidable.com/open-source/victory/docs/common-props#y\\\">Read about it here</a></p>\\n<p>See the <a href=\\\"https://formidable.com/open-source/victory/guides/data-accessors\\\">Data Accessors Guide</a> for more detail on formatting and processing data.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">y<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span>d<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> d<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token operator\\\">+</span> d<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\",\"frontmatter\":{\"id\":0,\"scope\":null,\"title\":\"VictoryBoxPlot\"},\"fields\":{\"slug\":\"/docs/victory-boxplot/\"}}},\"pathContext\":{\"slug\":\"/docs/victory-boxplot/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-victory-boxplot.json\n// module id = 829\n// module chunks = 182969186163636"],"sourceRoot":""}