webpackJsonp([0x9214b7ff9159],{823:function(t,e){t.exports={data:{markdownRemark:{html:'<h1 id="frequently-asked-questions-faq"><a href="#frequently-asked-questions-faq" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Frequently Asked Questions (FAQ)</h1>\n<p>Thanks for trying Victory! The FAQs below are based on issues and questions from our <a href="https://gitter.im/FormidableLabs/victory">support channel</a>. You can find more examples in <a href="https://formidable.com/open-source/victory/gallery">our gallery</a>. Can’t find what you’re looking for? Help us improve these docs by <a href="https://github.com/FormidableLabs/victory-docs/issues/new">opening an issue</a>.</p>\n<h2 id="styles"><a href="#styles" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Styles</h2>\n<h3 id="how-can-i-change-the-colors-of-lines-and-other-elements-in-victory"><a href="#how-can-i-change-the-colors-of-lines-and-other-elements-in-victory" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I change the colors of lines and other elements in Victory?</h3>\n<p>Most components in Victory use a standard <code class="language-text">style</code> prop with style namespaces for “data” and “labels”. Any styles added to the “data” namespace will be applied to all the svg elements rendered for a given dataset.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart domain={{ x: [0, 4] }}&gt;\n  &lt;VictoryBar\n    style={{ data: { fill: &quot;red&quot; } }}\n    data={[\n      { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 6 }\n    ]}\n  /&gt;\n  &lt;VictoryLine\n    style={{ data: { stroke: &quot;blue&quot;, strokeWidth: 5 } }}\n    y={(d) =&gt; d.x}\n  /&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<h3 id="how-can-i-change-the-color-of-an-individual-point-or-bar"><a href="#how-can-i-change-the-color-of-an-individual-point-or-bar" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I change the color of an individual point or bar?</h3>\n<p>Individual elements in Victory can be styled by adding style attributes directly to your data object. Functional styles and props can also be used to change the appearance of an element based on the data point it represents.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart&gt;\n  &lt;VictoryBar\n    data={[\n      { x: 1, y: 2, fill: &quot;red&quot;, width: 5 },\n      { x: 2, y: 4 , fill: &quot;orange&quot;, width: 10},\n      { x: 3, y: 6, fill: &quot;gold&quot;, width: 20 }\n    ]}\n  /&gt;\n  &lt;VictoryScatter\n    style={{ data: {\n      fill: (d) =&gt; d.x &gt; 2 ? &quot;blue&quot; : &quot;grey&quot;,\n      stroke: (d) =&gt; d.y &lt; 6 ? &quot;red&quot; : &quot;black&quot;,\n      strokeWidth: 2\n    } }}\n    symbol={(d) =&gt; d.x &gt; 1 ? &quot;plus&quot; : &quot;square&quot;}\n    size={(d) =&gt; d.y + 2}\n    data={[\n       { x: 0, y: 2 }, { x: 1, y: 4 }, { x: 2, y: 6 }, { x: 3, y: 8 }, { x: 4, y: 10 }\n    ]}\n  /&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<p>Note that continuous data types such as <code class="language-text">VictoryLine</code> and <code class="language-text">VictoryArea</code> cannot be styled in this way, as they only render a single element for a given dataset.</p>\n<h3 id="how-can-i-use-gradient-fills-in-victory"><a href="#how-can-i-use-gradient-fills-in-victory" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I use gradient fills in Victory?</h3>\n<p>Create a gradient def as usual and then reference it by id in your style object. A more complicated example using gradient fills can be found <a href="/open-source/victory/gallery/stream-graph">here</a></p>\n<pre class="pre"><code class="language-playground">&lt;div&gt;\n  &lt;svg style={{ height: 0 }}&gt;\n    &lt;defs&gt;\n      &lt;linearGradient id=&quot;myGradient&quot;&gt;\n        &lt;stop offset=&quot;0%&quot; stopColor=&quot;red&quot;/&gt;\n        &lt;stop offset=&quot;25%&quot; stopColor=&quot;orange&quot;/&gt;\n        &lt;stop offset=&quot;50%&quot; stopColor=&quot;gold&quot;/&gt;\n        &lt;stop offset=&quot;75%&quot; stopColor=&quot;yellow&quot;/&gt;\n        &lt;stop offset=&quot;100%&quot; stopColor=&quot;green&quot;/&gt;\n      &lt;/linearGradient&gt;\n    &lt;/defs&gt;\n  &lt;/svg&gt;\n  &lt;VictoryChart&gt;\n    &lt;VictoryArea\n      style={{\n        data: {fill: &quot;url(#myGradient)&quot;}\n      }}\n      data={[\n        { x: 1, y: 2 },\n        { x: 2, y: 3 },\n        { x: 3, y: 7 },\n        { x: 4, y: 4 },\n        { x: 5, y: 5 }\n      ]}\n    /&gt;\n  &lt;/VictoryChart&gt;\n&lt;/div&gt;</code></pre>\n<h2 id="annotations"><a href="#annotations" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Annotations</h2>\n<h3 id="how-can-i-add-arbitrary-labels-to-my-charts"><a href="#how-can-i-add-arbitrary-labels-to-my-charts" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I add arbitrary labels to my charts?</h3>\n<p>Use <code class="language-text">VictoryLabel</code> to as a child of <code class="language-text">VictoryChart</code> to add arbitrary labels. Labels can be positioned with the <code class="language-text">x</code> and <code class="language-text">y</code> props, or with <code class="language-text">datum</code> when used within <code class="language-text">VictoryChart</code> or <code class="language-text">VictoryGroup</code>.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart domain={[0, 10]}&gt;\n  &lt;VictoryLabel text=&quot;Chart Title&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n  &lt;VictoryLine\n    style={{ data: { stroke: &quot;blue&quot;, strokeWidth: 5 } }}\n    y={(d) =&gt; d.x}\n  /&gt;\n  &lt;VictoryLabel text=&quot;Annotation&quot; datum={{ x: 4, y: 6 }} textAnchor=&quot;middle&quot;/&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<h3 id="how-can-i-annotate-my-charts-with-lines-and-markers"><a href="#how-can-i-annotate-my-charts-with-lines-and-markers" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I annotate my charts with lines and markers?</h3>\n<p>Victory doesn’t have specific components for annotations. Instead, use standard component such as <code class="language-text">VictoryLine</code> and <code class="language-text">VictoryScatter</code> to add lines and markers to your chart.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart domain={[0, 10]}&gt;\n  &lt;VictoryLine\n    style={{ data: { stroke: &quot;blue&quot;, strokeWidth: 3 } }}\n    y={(d) =&gt; d.x}\n  /&gt;\n  &lt;VictoryLine\n    style={{\n      data: { stroke: &quot;red&quot;, strokeWidth: 2 },\n      labels: { angle: -90, fill: &quot;red&quot;, fontSize: 20 }\n    }}\n    labels={[&quot;Important&quot;]}\n    labelComponent={&lt;VictoryLabel y={100}/&gt;}\n    x={() =&gt; 5}\n  /&gt;\n  &lt;VictoryScatter\n    data={[{ x: 5, y: 5, fill: &quot;red&quot;, symbol: &quot;star&quot;, size: 8 }]}\n  /&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<h2 id="axes"><a href="#axes" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Axes</h2>\n<h3 id="how-do-i-turn-off-the-axes-on-victorychart"><a href="#how-do-i-turn-off-the-axes-on-victorychart" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How do I turn off the axes on VictoryChart?</h3>\n<p><code class="language-text">VictoryChart</code> uses default axes. If you want to plot data without using any axes, use <code class="language-text">VictoryGroup</code> instead.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryGroup&gt;\n  &lt;VictoryBar\n    style={{ data: { fill: &quot;red&quot; } }}\n    data={[\n      { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 6 }\n    ]}\n  /&gt;\n  &lt;VictoryLine domain={{ x: [0, 4] }}\n    style={{ data: { stroke: &quot;blue&quot;, strokeWidth: 5 } }}\n    y={(d) =&gt; d.x}\n  /&gt;\n&lt;/VictoryGroup&gt;</code></pre>\n<h3 id="why-is-victorychart-rendering-only-one-axis"><a href="#why-is-victorychart-rendering-only-one-axis" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Why is VictoryChart rendering only one axis?</h3>\n<p>When no axes are supplied to <code class="language-text">VictoryChart</code> it will render pair of default axes. If any axes are supplied as children to <code class="language-text">VictoryChart</code> it will render <em>only</em> those axes.</p>\n<pre class="pre"><code class="language-playground">&lt;div style={{ display: &quot;flex&quot;, flexWrap: &quot;wrap&quot; }}&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;Default Axes&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;Two VictoryAxis Children&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryAxis/&gt;\n    &lt;VictoryAxis dependentAxis/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;Single Dependent Axis&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryAxis dependentAxis/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;Single Independent Axis&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryAxis/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n&lt;/div&gt;</code></pre>\n<h3 id="can-i-make-a-chart-with-multiple-dependent-axes"><a href="#can-i-make-a-chart-with-multiple-dependent-axes" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Can I make a chart with multiple dependent axes?</h3>\n<p><code class="language-text">VictoryChart</code> will render any number of dependent axes, but only one independent axis. All children rendered by <code class="language-text">VictoryChart</code> will be forced to use the same domain. To create a single chart with the appearance of several different domains, you can either compose components manually without the aid of <code class="language-text">VictoryChart</code>, as described in <a href="/open-source/victory/guides/custom-charts">this guide</a>, or normalize all of your data, and re-scale your axis tick labels to give the appearance of separate domains as in <a href="/open-source/victory/gallery/multiple-dependent-axes">this example</a>.</p>\n<h3 id="how-can-i-change-the-position-of-my-axis"><a href="#how-can-i-change-the-position-of-my-axis" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I change the position of my axis?</h3>\n<p><code class="language-text">VictoryChart</code> automatically aligns axes so that they cross at their origin. Use the <code class="language-text">offsetX</code> and <code class="language-text">offsetY</code> props on <code class="language-text">VictoryAxis</code> to alter this default behavior. <em>Note:</em> Axes that typically cross at zero will not display ticks or tick labels at zero. To change this behavior, set the <code class="language-text">crossAxis</code> prop to false.\n<a href="https://formidable.com/open-source/victory/docs/victory-axis">Read more about VictoryAxis</a>.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart domain={{ y: [-10, 10] }}&gt;\n  &lt;VictoryAxis offsetY={50}/&gt;\n  &lt;VictoryAxis dependentAxis offsetX={50} crossAxis={false}/&gt;\n  &lt;VictoryLine/&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<h3 id="how-can-i-format-my-axis-labels"><a href="#how-can-i-format-my-axis-labels" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I format my axis labels?</h3>\n<p>Axis tick labels are controlled via two props. <code class="language-text">tickValues</code> controls the <em>positions</em> of ticks along the axis, and <code class="language-text">tickFormat</code> controls how labels are displayed. Use the <code class="language-text">tickFormat</code> prop to customize axis labels. This prop can be given as an array of strings, or as a function that returns a string. Functions provided to <code class="language-text">tickFormat</code> are called with the following arguments: <code class="language-text">tickValue</code>, <code class="language-text">index</code> and <code class="language-text">tickArray</code>.\n<a href="https://formidable.com/open-source/victory/docs/victory-axis">Read more about VictoryAxis</a>.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart domain={[0, 5]}&gt;\n  &lt;VictoryAxis tickValues={[1, 2, 3, 4]} tickFormat={[&quot;first&quot;, &quot;second&quot;, &quot;third&quot;, &quot;fourth&quot;]}/&gt;\n  &lt;VictoryAxis dependentAxis tickFormat={(tick) =&gt; `$${Math.round(tick)}M`}/&gt;\n  &lt;VictoryLine/&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<h3 id="my-axis-labels-are-cut-off-how-can-i-fix-them"><a href="#my-axis-labels-are-cut-off-how-can-i-fix-them" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>My axis labels are cut off. How can I fix them?</h3>\n<p>Long axis labels can be problematic. There are several ways to address the issue. The best solution will depend on the specific requirements of your project. The following examples demonstrate:</p>\n<ul>\n<li>Altering <code class="language-text">padding</code></li>\n<li>Splitting labels onto multiple lines</li>\n<li>Allowing labels to overflow the container with VictoryPortal</li>\n<li>Using angled labels</li>\n</ul>\n<pre class="pre"><code class="language-playground">&lt;div style={{ display: &quot;flex&quot;, flexWrap: &quot;wrap&quot; }}&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}\n    padding={{ left: 90, top: 50, right: 10, bottom: 50 }}\n  &gt;\n    &lt;VictoryLabel text=&quot;Altering padding&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryAxis dependentAxis\n      tickFormat={[\n        &quot;first label&quot;,\n        &quot;second label&quot;,\n        &quot;third label&quot;,\n        &quot;forth label&quot;,\n        &quot;fifth label&quot;\n      ]}\n    /&gt;\n    &lt;VictoryAxis/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;Multi-line labels&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryAxis dependentAxis\n      tickFormat={[\n        `first\\nlabel`,\n        `second\\nlabel`,\n        `third\\nlabel`,\n        `forth\\nlabel`,\n        `fifth\\nlabel`\n      ]}\n    /&gt;\n    &lt;VictoryAxis/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n\n\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;overflowing labels with VictoryPortal&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryAxis dependentAxis\n      tickLabelComponent={&lt;VictoryPortal&gt;&lt;VictoryLabel/&gt;&lt;/VictoryPortal&gt;}\n      tickFormat={[\n        &quot;first label&quot;,\n        &quot;second label&quot;,\n        &quot;third label&quot;,\n        &quot;forth label&quot;,\n        &quot;fifth label&quot;\n      ]}\n    /&gt;\n    &lt;VictoryAxis/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;Angled labels&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryAxis dependentAxis\n      style={{ tickLabels: { angle: -60 } }}\n      tickFormat={[\n        &quot;first label&quot;,\n        &quot;second label&quot;,\n        &quot;third label&quot;,\n        &quot;forth label&quot;,\n        &quot;fifth label&quot;\n      ]}\n    /&gt;\n    &lt;VictoryAxis/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n\n&lt;/div&gt;</code></pre>\n<h3 id="my-axis-labels-are-showing-very-small-numbers-how-do-i-fix-this"><a href="#my-axis-labels-are-showing-very-small-numbers-how-do-i-fix-this" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>My axis labels are showing very small numbers. How do I fix this?</h3>\n<p>When a dataset only has a single value, or when all values on an axis have the same value, the single-point domain for that axis will be converted to a two-point domain.\nVictory does this by offsetting the domain value by a very small number.\nTo solve this, you will need to manually set sensible defaults on the <code class="language-text">domain</code> of your chart.</p>\n<pre class="pre"><code class="language-playground">  &lt;VictoryChart\n        domain={{x: [0,2]}}\n       &gt;\n      &lt;VictoryBar\n        data={[{x: 1, y: 1}]}\n      /&gt;\n    &lt;/VictoryChart&gt;</code></pre>\n<h2 id="labels-and-tooltips"><a href="#labels-and-tooltips" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Labels and Tooltips</h2>\n<h3 id="how-can-i-add-tooltips-to-a-line"><a href="#how-can-i-add-tooltips-to-a-line" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I add tooltips to a line?</h3>\n<p><code class="language-text">VictoryLine</code> only renders a single element to represent an entire dataset, so replacing its <code class="language-text">labelComponent</code> with <code class="language-text">VictoryTooltip</code> wont work as expected, since there will be only a single event trigger. Voronoi tooltips can be used to add tooltips and other interactions components without unique event triggers, or with event triggers that are too small, or too close together to be useful. Use <code class="language-text">VictoryVoronoiContainer</code> to associate mouse position with the nearest data points. <a href="https://formidable.com/open-source/victory/guides/tooltips#tooltips-with-victoryvoronoicontainer">Read more about Voronoi Tooltips</a> and <a href="https://formidable.com/open-source/victory/docs/victory-voronoi-container"><code class="language-text">VictoryVoronoiContainer</code></a>.</p>\n<h3 id="how-can-i-add-my-own-events-when-im-using-victorytooltip"><a href="#how-can-i-add-my-own-events-when-im-using-victorytooltip" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I add my own events when I’m using <code class="language-text">VictoryTooltip</code>?</h3>\n<p><code class="language-text">VictoryTooltip</code> uses <code class="language-text">defaultEvents</code> which are prepended onto any events array provided in props. When <code class="language-text">events</code> container <code class="language-text">onMouseOver</code> and <code class="language-text">onMouseOut</code> events, they will interfere with the <code class="language-text">defaultEvents</code> on <code class="language-text">VictoryTooltip</code> to correct this, your events prop will need to return the same mutations as <code class="language-text">defaultEvents</code>. <a href="https://formidable.com/open-source/victory/guides/tooltips">Read about tooltip events here</a>.</p>\n<h2 id="layout"><a href="#layout" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Layout</h2>\n<h3 id="why-are-the-bars-in-my-bar-chart-overlapping-with-the-axis"><a href="#why-are-the-bars-in-my-bar-chart-overlapping-with-the-axis" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Why are the bars in my bar chart overlapping with the axis?</h3>\n<p>Bars in <code class="language-text">VictoryBar</code> are centered around their corresponding value by default. You can move your bars away from your axis by setting a new domain, adding a <code class="language-text">domainPadding</code>, or changing how bars are aligned relative to their values with the <code class="language-text">alignment</code> prop on <code class="language-text">VictoryBar</code>.</p>\n<pre class="pre"><code class="language-playground">&lt;div style={{ display: &quot;flex&quot;, flexWrap: &quot;wrap&quot; }}&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}\n    domainPadding={{ x: 15 }}\n  &gt;\n    &lt;VictoryLabel text=&quot;domainPadding&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryBar\n      style={{ data: { fill: &quot;gold&quot;, width: 30 } }}\n    /&gt;\n  &lt;/VictoryChart&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;alignment&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryBar\n      alignment=&quot;start&quot;\n      style={{ data: { fill: &quot;gold&quot; } }}\n    /&gt;\n  &lt;/VictoryChart&gt;\n&lt;/div&gt;</code></pre>\n<h3 id="how-can-i-change-the-size-of-my-chart"><a href="#how-can-i-change-the-size-of-my-chart" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I change the size of my chart?</h3>\n<p>By default Victory components are rendered within responsive SVGs that preserve the aspect ratio set by the <code class="language-text">width</code> and <code class="language-text">height</code> props. Charts will automatically scale to fit within parent elements while maintaining a set aspect ratio. The size of your chart may be changed by rendering it within a smaller container. The aspect ratio of the chart may be changed by altering the width and height props. The default responsive behavior may also be disabled by setting <code class="language-text">responsive={false}</code> on any Victory container.</p>\n<pre class="pre"><code class="language-playground">&lt;div style={{ display: &quot;flex&quot;, flexWrap: &quot;wrap&quot; }}&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}&gt;\n    &lt;VictoryLabel text=&quot;Default Sizing&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n  &lt;VictoryChart style={{ parent: { maxWidth: &quot;50%&quot; } }}\n    width={600} height={200}\n  &gt;\n    &lt;VictoryLabel text=&quot;New Aspect Ratio&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n  &lt;VictoryChart\n    width={600} height={200}\n    containerComponent={&lt;VictoryContainer responsive={false}/&gt;}\n  &gt;\n    &lt;VictoryLabel text=&quot;Non-responsive&quot; x={225} y={30} textAnchor=&quot;middle&quot;/&gt;\n    &lt;VictoryLine/&gt;\n  &lt;/VictoryChart&gt;\n&lt;/div&gt;</code></pre>\n<h2 id="containers-and-behaviors"><a href="#containers-and-behaviors" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Containers and Behaviors</h2>\n<h3 id="how-can-i-use-containers-in-victory"><a href="#how-can-i-use-containers-in-victory" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I use containers in Victory?</h3>\n<p>Victory renders charts into top-level container components. The most basic container is <code class="language-text">VictoryContainer</code>. It is responsible for rendering children into a responsive svg, and providing a portal component for rendering tooltips, or any other elements that should be rendered above everything else. Other Victory container, such as <code class="language-text">VictoryZoomContainer</code> and <code class="language-text">VictoryCursorContainer</code> provide an interactive layer for the chart. These containers perform all the same functions as <code class="language-text">VictoryContainer</code> in addition to their specialized functions.</p>\n<ul>\n<li><a href="https://formidable.com/open-source/victory/docs/victory-zoom-container"><code class="language-text">VictoryZoomContainer</code></a>: Adds pan and zoom functionality to a chart</li>\n<li><a href="https://formidable.com/open-source/victory/docs/victory-voronoi-container"><code class="language-text">VictoryVoronoiContainer</code></a>: Associates mouse position with the nearest data points, and is useful for tooltips and other hover interactions</li>\n<li><a href="https://formidable.com/open-source/victory/docs/victory-selection-container"><code class="language-text">VictorySelectionContainer</code></a>: Adds the ability to select points within a region</li>\n<li><a href="https://formidable.com/open-source/victory/docs/victory-brush-container"><code class="language-text">VictoryBrushContainer</code></a>: Adds a moveable highlighted region to charts</li>\n<li><a href="https://formidable.com/open-source/victory/docs/victory-cursor-container"><code class="language-text">VictoryCursorContainer</code></a>: Renders a cursor line and label that follows mouse position.</li>\n</ul>\n<p>To use one of these containers, change the <code class="language-text">containerComponent</code> prop on your <em>top-level</em> Victory component. <em>Note:</em> Containers are not rendered when <code class="language-text">standalone</code> is set to <code class="language-text">false</code>.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart\n  domainPadding={{ y: 10 }}\n  containerComponent={\n    &lt;VictoryZoomContainer/&gt;\n  }\n&gt;\n  &lt;VictoryScatter\n    y={(datum) =&gt; Math.sin(2 * Math.PI * datum.x)}\n  /&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<h3 id="how-can-i-make-a-chart-with-voronoi-tooltips-that-can-also-zoom"><a href="#how-can-i-make-a-chart-with-voronoi-tooltips-that-can-also-zoom" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How can I make a chart with voronoi tooltips that can also zoom?</h3>\n<p>Victory includes a <code class="language-text">createContainer</code> helper that is used to create hybrid containers. <code class="language-text">createContainer</code> can be used to create a new container with behaviors from two existing Victory containers. <a href="https://formidable.com/open-source/victory/docs/create-container">Read more about <code class="language-text">createContainer</code> here</a>.</p>',
frontmatter:{id:1,scope:null,title:"FAQs"},fields:{slug:"/docs/faq/"}}},pathContext:{slug:"/docs/faq/"}}}});
//# sourceMappingURL=path---docs-faq-a3962b791286d3af9a9f.js.map