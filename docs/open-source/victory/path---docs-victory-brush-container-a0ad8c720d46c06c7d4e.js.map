{"version":3,"sources":["webpack:///path---docs-victory-brush-container-a0ad8c720d46c06c7d4e.js","webpack:///./.cache/json/docs-victory-brush-container.json"],"names":["webpackJsonp","830","module","exports","data","markdownRemark","html","frontmatter","id","scope","title","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,uzgBAA6vhBC,aAA4BC,GAAA,EAAAC,MAAA,KAAAC,MAAA,yBAAoDC,QAAWC,KAAA,oCAA0CC,aAAgBD,KAAA","file":"path---docs-victory-brush-container-a0ad8c720d46c06c7d4e.js","sourcesContent":["webpackJsonp([94703869179203],{\n\n/***/ 830:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"victorybrushcontainer\\\"><a href=\\\"#victorybrushcontainer\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>VictoryBrushContainer</h1>\\n<p><code class=\\\"language-text\\\">VictoryBrushContainer</code> adds the ability to highlight a region of a chart, and interact with\\nhighlighted regions, either by moving the region, expanding the region, or selecting a new region.\\n<code class=\\\"language-text\\\">VictoryBrushContainer</code> is useful for selecting a region of a larger dataset by domain. Create a\\nbrush control by tying the domain of the selected region to the domain of a separate chart.\\nSee the <a href=\\\"https://formidable.com/open-source/victory/guides/brush-and-zoom\\\">brush and zoom guide</a> for an example of using <code class=\\\"language-text\\\">VictoryBrushContainer</code> to create a brush\\ncontrol.</p>\\n<p><code class=\\\"language-text\\\">VictoryBrushContainer</code> is similar to <code class=\\\"language-text\\\">VictorySelectionContainer</code>. <code class=\\\"language-text\\\">VictoryBrushContainer</code> may be\\nused to identify the domain of a selected region, whereas <code class=\\\"language-text\\\">VictorySelectionContainer</code> may be used to\\nidentify a list of data points within a selected region. <code class=\\\"language-text\\\">VictoryBrushContainer</code> will also create\\npersistent highlighted regions, whereas regions created by <code class=\\\"language-text\\\">VictorySelectionContainer</code>\\ndisappear after <code class=\\\"language-text\\\">onMouseUp</code> events.</p>\\n<p><code class=\\\"language-text\\\">VictoryBrushContainer</code> may be used with any Victory component that works with an x-y coordinate\\nsystem, and should be added as the <code class=\\\"language-text\\\">containerComponent</code> of the top-level component.\\nHowever, the component that uses it must be standalone\\n(<code class=\\\"language-text\\\">standalone={true}</code>), which is the default for all top-level Victory components.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart\\n  containerComponent={\\n    &lt;VictoryBrushContainer\\n      brushDimension=&quot;x&quot;\\n      brushDomain={{x: [0.1, 0.3]}}\\n    /&gt;\\n  }\\n&gt;\\n  &lt;VictoryLine /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h2 id=\\\"props\\\"><a href=\\\"#props\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Props</h2>\\n<p><code class=\\\"language-text\\\">VictoryBrushContainer</code> uses a superset of props used by <a href=\\\"https://formidable.com/open-source/victory/docs/victory-container\\\">VictoryContainer</a>. All props are optional.</p>\\n<h3 id=\\\"allowdrag\\\"><a href=\\\"#allowdrag\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>allowDrag</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The optional <code class=\\\"language-text\\\">allowDrag</code> prop accepts a boolean that enables dragging behavior for the highlighted brush area. Resizing will still be enabled when the <code class=\\\"language-text\\\">allowDrag</code> prop is set to false.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">allowDrag={true}</code></p>\\n<h3 id=\\\"allowresize\\\"><a href=\\\"#allowresize\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>allowResize</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The optional <code class=\\\"language-text\\\">allowResize</code> prop accepts a boolean that enables resizing the highlighted brush area. Dragging will still be enabled when the <code class=\\\"language-text\\\">allowResize</code> prop is set to false, but the dimensions of the brush area will be fixed.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">allowResize={true}</code></p>\\n<h3 id=\\\"brushcomponent\\\"><a href=\\\"#brushcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>brushComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">brushComponent</code> prop specifies the component to be rendered for the highlighted area.\\nThis component will be supplied with the following props: x, y, width, height, and style.\\nWhen this prop is not specified, a <code class=\\\"language-text\\\">&lt;rect/&gt;</code> will be rendered.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">brushComponent={&lt;rect/&gt;}</code></p>\\n<h3 id=\\\"brushdimension\\\"><a href=\\\"#brushdimension\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>brushDimension</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;x&quot; || &quot;y&quot;</code></p>\\n<p>When the <code class=\\\"language-text\\\">brushDimension</code> prop is set, brushing will only be specific to the to the given dimension\\n(either “x” or “y”), and the entire domain of the other dimension will be highlighted. When this prop\\nis not specified, highlighting will occur along both dimensions.</p>\\n<p><em>example:</em> <code class=\\\"language-text\\\">brushDimension=&quot;x&quot;</code></p>\\n<h3 id=\\\"brushdomain\\\"><a href=\\\"#brushdomain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>brushDomain</h3>\\n<p><code class=\\\"language-text\\\">type: { x: [low, high], y: [low, high] }</code></p>\\n<p>The optional <code class=\\\"language-text\\\">brushDomain</code> prop describes the highlighted state. This prop is an object that\\nspecifies separate arrays for <code class=\\\"language-text\\\">x</code> and <code class=\\\"language-text\\\">y</code>. Each array is a tuple that describes the minimum and maximum\\nvalues to render. If this prop is not provided initially, the chart will render with the entire\\ndomain highlighted. When this prop changes, the chart will render with a new highlighted domain.</p>\\n<p><em>example:</em> <code class=\\\"language-text\\\">brushDomain={{x: [50, 100], y: [0, 100]}</code></p>\\n<h3 id=\\\"brushstyle\\\"><a href=\\\"#brushstyle\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>brushStyle</h3>\\n<p><code class=\\\"language-text\\\">type: object</code></p>\\n<p>The <code class=\\\"language-text\\\">brushStyle</code> adds custom styles to the <code class=\\\"language-text\\\">brushComponent</code>. This prop should be given as\\nan object of SVG style attributes.</p>\\n<p><em>default:</em> `brushStyle={{stroke: “transparent”, fill: “black”, fillOpacity: 0.1}}</p>\\n<h3 id=\\\"defaultbrusharea\\\"><a href=\\\"#defaultbrusharea\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>defaultBrushArea</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;all&quot;, &quot;none&quot;, &quot;disable&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">defaultBrushArea</code> prop specifies how the container will behave when a region outside the active brush is clicked without selecting a new area. When the prop is set to “all”, the entire domain will be selected. When the prop is set to “none”, no new region will be selected, and any existing active brush will be cleared. When the prop is set to “disable” the new selected region will default to the current active brush.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart\\n  containerComponent={\\n    &lt;VictoryBrushContainer\\n      defaultBrushArea=&quot;disable&quot;\\n      brushDomain={{x: [0.1, 0.3]}}\\n    /&gt;\\n  }\\n&gt;\\n  &lt;VictoryLine /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"disable\\\"><a href=\\\"#disable\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>disable</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>When the <code class=\\\"language-text\\\">disable</code> prop is set to <code class=\\\"language-text\\\">true</code>, <code class=\\\"language-text\\\">VictoryBrushContainer</code> events will not fire.</p>\\n<h3 id=\\\"handlecomponent\\\"><a href=\\\"#handlecomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>handleComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">handleComponent</code> prop specifies the component to be rendered for each handle for the highlighted\\narea.  This component will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">width</code>, <code class=\\\"language-text\\\">height</code>, <code class=\\\"language-text\\\">cursor</code>, and <code class=\\\"language-text\\\">style</code>.\\nWhen this prop is not specified, a <code class=\\\"language-text\\\">&lt;rect/&gt;</code> will be rendered.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">handleComponent={&lt;rect/&gt;}</code></p>\\n<h3 id=\\\"handlestyle\\\"><a href=\\\"#handlestyle\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>handleStyle</h3>\\n<p><code class=\\\"language-text\\\">type: object</code></p>\\n<p>The <code class=\\\"language-text\\\">handleStyle</code> adds custom styles to the <code class=\\\"language-text\\\">handleComponents</code>. This prop should be given as\\nan object of SVG style attributes.</p>\\n<p>Handles refer to the region on each highlighted area where the area may be\\nexpanded. Only handles relevant to the given <code class=\\\"language-text\\\">dimension</code> will be rendered. For example, when\\n<code class=\\\"language-text\\\">brushDimension=&quot;x&quot;</code> only “left” and “right” handles will be rendered. Handles are automatically styled\\nwith cursors appropriate to their orientation.</p>\\n<p><em>default:</em> `handleStyle={{stroke: “transparent”, fill: “transparent”}}</p>\\n<h3 id=\\\"onbrushcleared\\\"><a href=\\\"#onbrushcleared\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>onBrushCleared</h3>\\n<p><code class=\\\"language-text\\\">type: function</code></p>\\n<p>The optional <code class=\\\"language-text\\\">onBrushCleared</code> prop accepts an function to be called when tha active brush area is cleared. The function accepts the parameters of <code class=\\\"language-text\\\">domain</code> (the updated domain), and <code class=\\\"language-text\\\">props</code> (the props used by <code class=\\\"language-text\\\">VictoryBrushContainer</code>).</p>\\n<p><em>example:</em> <code class=\\\"language-text\\\">onBrushCleared={(domain, props) =&gt; handleBrushCleared(domain, props)}</code></p>\\n<h3 id=\\\"onbrushdomainchange\\\"><a href=\\\"#onbrushdomainchange\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>onBrushDomainChange</h3>\\n<p><code class=\\\"language-text\\\">type: function</code></p>\\n<p>The optional <code class=\\\"language-text\\\">onBrushDomainChange</code> prop accepts an function to be called on each update to the highlighted domain. The function accepts the parameters of <code class=\\\"language-text\\\">domain</code> (the updated domain), and <code class=\\\"language-text\\\">props</code> (the props used by <code class=\\\"language-text\\\">VictoryBrushContainer</code>).</p>\\n<p><em>example:</em> <code class=\\\"language-text\\\">onBrushDomainChange={(domain, props) =&gt; handleDomainChange(domain, props)}</code></p>\",\"frontmatter\":{\"id\":7,\"scope\":null,\"title\":\"VictoryBrushContainer\"},\"fields\":{\"slug\":\"/docs/victory-brush-container/\"}}},\"pathContext\":{\"slug\":\"/docs/victory-brush-container/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-victory-brush-container-a0ad8c720d46c06c7d4e.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"victorybrushcontainer\\\"><a href=\\\"#victorybrushcontainer\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>VictoryBrushContainer</h1>\\n<p><code class=\\\"language-text\\\">VictoryBrushContainer</code> adds the ability to highlight a region of a chart, and interact with\\nhighlighted regions, either by moving the region, expanding the region, or selecting a new region.\\n<code class=\\\"language-text\\\">VictoryBrushContainer</code> is useful for selecting a region of a larger dataset by domain. Create a\\nbrush control by tying the domain of the selected region to the domain of a separate chart.\\nSee the <a href=\\\"https://formidable.com/open-source/victory/guides/brush-and-zoom\\\">brush and zoom guide</a> for an example of using <code class=\\\"language-text\\\">VictoryBrushContainer</code> to create a brush\\ncontrol.</p>\\n<p><code class=\\\"language-text\\\">VictoryBrushContainer</code> is similar to <code class=\\\"language-text\\\">VictorySelectionContainer</code>. <code class=\\\"language-text\\\">VictoryBrushContainer</code> may be\\nused to identify the domain of a selected region, whereas <code class=\\\"language-text\\\">VictorySelectionContainer</code> may be used to\\nidentify a list of data points within a selected region. <code class=\\\"language-text\\\">VictoryBrushContainer</code> will also create\\npersistent highlighted regions, whereas regions created by <code class=\\\"language-text\\\">VictorySelectionContainer</code>\\ndisappear after <code class=\\\"language-text\\\">onMouseUp</code> events.</p>\\n<p><code class=\\\"language-text\\\">VictoryBrushContainer</code> may be used with any Victory component that works with an x-y coordinate\\nsystem, and should be added as the <code class=\\\"language-text\\\">containerComponent</code> of the top-level component.\\nHowever, the component that uses it must be standalone\\n(<code class=\\\"language-text\\\">standalone={true}</code>), which is the default for all top-level Victory components.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart\\n  containerComponent={\\n    &lt;VictoryBrushContainer\\n      brushDimension=&quot;x&quot;\\n      brushDomain={{x: [0.1, 0.3]}}\\n    /&gt;\\n  }\\n&gt;\\n  &lt;VictoryLine /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h2 id=\\\"props\\\"><a href=\\\"#props\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Props</h2>\\n<p><code class=\\\"language-text\\\">VictoryBrushContainer</code> uses a superset of props used by <a href=\\\"https://formidable.com/open-source/victory/docs/victory-container\\\">VictoryContainer</a>. All props are optional.</p>\\n<h3 id=\\\"allowdrag\\\"><a href=\\\"#allowdrag\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>allowDrag</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The optional <code class=\\\"language-text\\\">allowDrag</code> prop accepts a boolean that enables dragging behavior for the highlighted brush area. Resizing will still be enabled when the <code class=\\\"language-text\\\">allowDrag</code> prop is set to false.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">allowDrag={true}</code></p>\\n<h3 id=\\\"allowresize\\\"><a href=\\\"#allowresize\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>allowResize</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>The optional <code class=\\\"language-text\\\">allowResize</code> prop accepts a boolean that enables resizing the highlighted brush area. Dragging will still be enabled when the <code class=\\\"language-text\\\">allowResize</code> prop is set to false, but the dimensions of the brush area will be fixed.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">allowResize={true}</code></p>\\n<h3 id=\\\"brushcomponent\\\"><a href=\\\"#brushcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>brushComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">brushComponent</code> prop specifies the component to be rendered for the highlighted area.\\nThis component will be supplied with the following props: x, y, width, height, and style.\\nWhen this prop is not specified, a <code class=\\\"language-text\\\">&lt;rect/&gt;</code> will be rendered.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">brushComponent={&lt;rect/&gt;}</code></p>\\n<h3 id=\\\"brushdimension\\\"><a href=\\\"#brushdimension\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>brushDimension</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;x&quot; || &quot;y&quot;</code></p>\\n<p>When the <code class=\\\"language-text\\\">brushDimension</code> prop is set, brushing will only be specific to the to the given dimension\\n(either “x” or “y”), and the entire domain of the other dimension will be highlighted. When this prop\\nis not specified, highlighting will occur along both dimensions.</p>\\n<p><em>example:</em> <code class=\\\"language-text\\\">brushDimension=&quot;x&quot;</code></p>\\n<h3 id=\\\"brushdomain\\\"><a href=\\\"#brushdomain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>brushDomain</h3>\\n<p><code class=\\\"language-text\\\">type: { x: [low, high], y: [low, high] }</code></p>\\n<p>The optional <code class=\\\"language-text\\\">brushDomain</code> prop describes the highlighted state. This prop is an object that\\nspecifies separate arrays for <code class=\\\"language-text\\\">x</code> and <code class=\\\"language-text\\\">y</code>. Each array is a tuple that describes the minimum and maximum\\nvalues to render. If this prop is not provided initially, the chart will render with the entire\\ndomain highlighted. When this prop changes, the chart will render with a new highlighted domain.</p>\\n<p><em>example:</em> <code class=\\\"language-text\\\">brushDomain={{x: [50, 100], y: [0, 100]}</code></p>\\n<h3 id=\\\"brushstyle\\\"><a href=\\\"#brushstyle\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>brushStyle</h3>\\n<p><code class=\\\"language-text\\\">type: object</code></p>\\n<p>The <code class=\\\"language-text\\\">brushStyle</code> adds custom styles to the <code class=\\\"language-text\\\">brushComponent</code>. This prop should be given as\\nan object of SVG style attributes.</p>\\n<p><em>default:</em> `brushStyle={{stroke: “transparent”, fill: “black”, fillOpacity: 0.1}}</p>\\n<h3 id=\\\"defaultbrusharea\\\"><a href=\\\"#defaultbrusharea\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>defaultBrushArea</h3>\\n<p><code class=\\\"language-text\\\">type: &quot;all&quot;, &quot;none&quot;, &quot;disable&quot;</code></p>\\n<p>The <code class=\\\"language-text\\\">defaultBrushArea</code> prop specifies how the container will behave when a region outside the active brush is clicked without selecting a new area. When the prop is set to “all”, the entire domain will be selected. When the prop is set to “none”, no new region will be selected, and any existing active brush will be cleared. When the prop is set to “disable” the new selected region will default to the current active brush.</p>\\n<pre class=\\\"pre\\\"><code class=\\\"language-playground\\\">&lt;VictoryChart\\n  containerComponent={\\n    &lt;VictoryBrushContainer\\n      defaultBrushArea=&quot;disable&quot;\\n      brushDomain={{x: [0.1, 0.3]}}\\n    /&gt;\\n  }\\n&gt;\\n  &lt;VictoryLine /&gt;\\n&lt;/VictoryChart&gt;</code></pre>\\n<h3 id=\\\"disable\\\"><a href=\\\"#disable\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>disable</h3>\\n<p><code class=\\\"language-text\\\">type: boolean</code></p>\\n<p>When the <code class=\\\"language-text\\\">disable</code> prop is set to <code class=\\\"language-text\\\">true</code>, <code class=\\\"language-text\\\">VictoryBrushContainer</code> events will not fire.</p>\\n<h3 id=\\\"handlecomponent\\\"><a href=\\\"#handlecomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>handleComponent</h3>\\n<p><code class=\\\"language-text\\\">type: element</code></p>\\n<p>The <code class=\\\"language-text\\\">handleComponent</code> prop specifies the component to be rendered for each handle for the highlighted\\narea.  This component will be supplied with the following props: <code class=\\\"language-text\\\">x</code>, <code class=\\\"language-text\\\">y</code>, <code class=\\\"language-text\\\">width</code>, <code class=\\\"language-text\\\">height</code>, <code class=\\\"language-text\\\">cursor</code>, and <code class=\\\"language-text\\\">style</code>.\\nWhen this prop is not specified, a <code class=\\\"language-text\\\">&lt;rect/&gt;</code> will be rendered.</p>\\n<p><em>default:</em> <code class=\\\"language-text\\\">handleComponent={&lt;rect/&gt;}</code></p>\\n<h3 id=\\\"handlestyle\\\"><a href=\\\"#handlestyle\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>handleStyle</h3>\\n<p><code class=\\\"language-text\\\">type: object</code></p>\\n<p>The <code class=\\\"language-text\\\">handleStyle</code> adds custom styles to the <code class=\\\"language-text\\\">handleComponents</code>. This prop should be given as\\nan object of SVG style attributes.</p>\\n<p>Handles refer to the region on each highlighted area where the area may be\\nexpanded. Only handles relevant to the given <code class=\\\"language-text\\\">dimension</code> will be rendered. For example, when\\n<code class=\\\"language-text\\\">brushDimension=&quot;x&quot;</code> only “left” and “right” handles will be rendered. Handles are automatically styled\\nwith cursors appropriate to their orientation.</p>\\n<p><em>default:</em> `handleStyle={{stroke: “transparent”, fill: “transparent”}}</p>\\n<h3 id=\\\"onbrushcleared\\\"><a href=\\\"#onbrushcleared\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>onBrushCleared</h3>\\n<p><code class=\\\"language-text\\\">type: function</code></p>\\n<p>The optional <code class=\\\"language-text\\\">onBrushCleared</code> prop accepts an function to be called when tha active brush area is cleared. The function accepts the parameters of <code class=\\\"language-text\\\">domain</code> (the updated domain), and <code class=\\\"language-text\\\">props</code> (the props used by <code class=\\\"language-text\\\">VictoryBrushContainer</code>).</p>\\n<p><em>example:</em> <code class=\\\"language-text\\\">onBrushCleared={(domain, props) =&gt; handleBrushCleared(domain, props)}</code></p>\\n<h3 id=\\\"onbrushdomainchange\\\"><a href=\\\"#onbrushdomainchange\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>onBrushDomainChange</h3>\\n<p><code class=\\\"language-text\\\">type: function</code></p>\\n<p>The optional <code class=\\\"language-text\\\">onBrushDomainChange</code> prop accepts an function to be called on each update to the highlighted domain. The function accepts the parameters of <code class=\\\"language-text\\\">domain</code> (the updated domain), and <code class=\\\"language-text\\\">props</code> (the props used by <code class=\\\"language-text\\\">VictoryBrushContainer</code>).</p>\\n<p><em>example:</em> <code class=\\\"language-text\\\">onBrushDomainChange={(domain, props) =&gt; handleDomainChange(domain, props)}</code></p>\",\"frontmatter\":{\"id\":7,\"scope\":null,\"title\":\"VictoryBrushContainer\"},\"fields\":{\"slug\":\"/docs/victory-brush-container/\"}}},\"pathContext\":{\"slug\":\"/docs/victory-brush-container/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-victory-brush-container.json\n// module id = 830\n// module chunks = 94703869179203"],"sourceRoot":""}