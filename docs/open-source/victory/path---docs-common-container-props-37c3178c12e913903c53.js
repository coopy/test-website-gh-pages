webpackJsonp([0xbc126e322b44],{820:function(e,t){e.exports={data:{markdownRemark:{html:'<h1 id="common-container-props"><a href="#common-container-props" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Common Container Props</h1>\n<h3 id="children"><a href="#children" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>children</h3>\n<p><code class="language-text">type: element || array[element]</code></p>\n<p>The <code class="language-text">children</code> prop specifies the child or children that will be rendered within the container. This prop should not be set manually. It will be set by whatever Victory component is rendering the container.</p>\n<h3 id="classname"><a href="#classname" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>className</h3>\n<p><code class="language-text">type: string</code></p>\n<p>The <code class="language-text">className</code> prop specifies a className that will be applied to the outer-most div rendered by <code class="language-text">VictoryContainer</code> if this prop is not set, the className will default to “VictoryContainer”</p>\n<p><em>example:</em> <code class="language-text">className=&quot;myChart&quot;</code></p>\n<h3 id="containerid"><a href="#containerid" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>containerId</h3>\n<p><code class="language-text">type: number || string</code></p>\n<p>The <code class="language-text">containerId</code> prop may be used to set a deterministic id for the container. When a <code class="language-text">containerId</code> is not manually set, a unique id will be generated. It is usually necessary to set deterministic ids for automated testing.</p>\n<h3 id="containerref"><a href="#containerref" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>containerRef</h3>\n<p><code class="language-text">type: function</code></p>\n<p>The <code class="language-text">containerRef</code> prop may be used to attach a ref to the outermost element rendered by the container. This prop should be given as a function.</p>\n<p><em>example:</em> <code class="language-text">containerRef={(ref) =&gt; { this.chartRef = ref; }}</code></p>\n<h3 id="desc"><a href="#desc" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>desc</h3>\n<p><code class="language-text">type: string</code></p>\n<p>The <code class="language-text">desc</code> prop specifies the description of the chart/SVG to assist with accessibility for screen readers. The more descriptive this title is, the more useful it will be for people using screen readers.</p>\n<p><em>example:</em> <code class="language-text">desc=&quot;Golden retrievers make up 30%, Labs make up 25%, and other dog breeds are not represented above 5% each.&quot;</code></p>\n<h3 id="events"><a href="#events" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>events</h3>\n<p><code class="language-text">type: object</code></p>\n<p>The <code class="language-text">events</code> prop attaches arbitrary event handlers to the container element. This prop should be\ngiven as an object of event names and corresponding <a href="https://reactjs.org/docs/handling-events.html">React event handlers</a>. Events defined directly\nvia this prop will be masked by <code class="language-text">defaultEvents</code> on <code class="language-text">VictorySelectionContainer</code> (<code class="language-text">onMouseDown</code>,\n<code class="language-text">onMouseUp</code>, and <code class="language-text">onMouseMove</code>), and by any events defined through Victory’s event\nsystem that target parent elements.</p>\n<p><em>example:</em> <code class="language-text">events={{onClick: (evt) =&gt; alert(&quot;x: &quot; + evt.clientX)}}</code></p>\n<h3 id="height"><a href="#height" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>height</h3>\n<p><code class="language-text">type: number</code></p>\n<p>The <code class="language-text">height</code> prop determines the height of the containing <code class="language-text">&lt;svg&gt;</code>. By default VictoryContainer renders responsive containers with the <code class="language-text">viewBox</code> attribute set to <code class="language-text">viewBox=&quot;0, 0, width, height&quot;</code> and <code class="language-text">width=&quot;100%&quot;</code>, <code class="language-text">height=&quot;100%&quot;</code>. In responsive containers, the <code class="language-text">width</code> and <code class="language-text">height</code> props affect the <em>aspect ratio</em> of the rendered component, while the absolute width and height are determined by the container. To render a static container, set <code class="language-text">responsive={false}</code></p>\n<p><em>example:</em> <code class="language-text">height={350}</code></p>\n<h3 id="portalcomponent"><a href="#portalcomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>portalComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">portalComponent</code> prop takes a component instance which will be used as a container for children that should render inside a top-level container so that they will always appear above other elements. <a href="https://formidable.com/open-source/victory/docs/victory-tooltip">VictoryTooltip</a> renders inside a portal so that tooltips always render above data. <a href="https://formidable.com/open-source/victory/docs/victory-portal">VictoryPortal</a> is used to define elements that should render in the portal container. This prop defaults to <a href="https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-portal/portal.js">Portal</a>, and should only be overridden when changing rendered elements from SVG to another type of element <em>e.g.,</em> <a href="https://github.com/react-native-community/react-native-svg">react-native-svg</a> elements.</p>\n<p><em>default:</em> <code class="language-text">portalComponent={&lt;Portal/&gt;}</code></p>\n<h3 id="portalzindex"><a href="#portalzindex" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>portalZIndex</h3>\n<p><code class="language-text">type: number</code></p>\n<p>The <code class="language-text">portalZIndex</code> prop determines the z-index of the div enclosing the portal component. If a <code class="language-text">portalZIndex</code> prop is not set, the z-index of the enclosing div will be set to 99.</p>\n<h3 id="responsive"><a href="#responsive" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>responsive</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p>The <code class="language-text">responsive</code> prop specifies whether the rendered container should be a responsive container with a <code class="language-text">viewBox</code> attribute, or a static container with absolute width and height.</p>\n<p><em>default:</em> <code class="language-text">responsive={true}</code></p>\n<h3 id="style"><a href="#style" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>style</h3>\n<p><code class="language-text">type: object</code></p>\n<p>The <code class="language-text">style</code> prop defines the style of the container, and should be given as an object of style attributes.\nThe <code class="language-text">width</code> and <code class="language-text">height</code> should be specified via props instead of style attributes as they determine\nrelative layout for components.</p>\n<p><em>example:</em> <code class="language-text">style={{border: &quot;1px solid #ccc&quot;}}</code></p>\n<p><em>default (provided by default theme):</em> VictoryTheme.grayscale. See <a href="https://formidable.com/open-source/victory/docs/victory-theme">VictoryTheme</a> for more detail.</p>\n<h3 id="theme"><a href="#theme" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>theme</h3>\n<p><code class="language-text">type: object</code></p>\n<p>The <code class="language-text">theme</code> prop specifies a theme to use for determining styles and layout props for a\ncomponent. Any styles or props defined in <code class="language-text">theme</code> may be overridden by props specified on the\ncomponent instance. By default, components use a <a href="https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-theme/grayscale.js">grayscale theme</a>. <a href="https://formidable.com/open-source/victory/guides/themes">Read more about themes here</a>.</p>\n<p><em>example:</em> <code class="language-text">theme={VictoryTheme.material}</code></p>\n<h3 id="title"><a href="#title" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>title</h3>\n<p><code class="language-text">type: string</code></p>\n<p>The <code class="language-text">title</code> prop specifies the title to be applied to the SVG to assist with accessibility for screen readers. The more descriptive this title is, the more useful it will be for people using screen readers</p>\n<p><em>example:</em> <code class="language-text">title=&quot;Popularity of Dog Breeds by Percentage&quot;</code></p>\n<h3 id="width"><a href="#width" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>width</h3>\n<p><code class="language-text">type: number</code></p>\n<p>The <code class="language-text">width</code> prop determines the width of the containing <code class="language-text">&lt;svg&gt;</code>. By default VictoryContainer renders responsive containers with the <code class="language-text">viewBox</code> attribute set to <code class="language-text">viewBox=&quot;0, 0, width, height&quot;</code> and <code class="language-text">width=&quot;100%&quot;</code>, <code class="language-text">height=&quot;auto&quot;</code>. In responsive containers, the <code class="language-text">width</code> and <code class="language-text">height</code> props affect the <em>aspect ratio</em> of the rendered component, while the absolute width and height are determined by the container. To render a static container, set <code class="language-text">responsive={false}</code></p>\n<p><em>example:</em> <code class="language-text">width={350}</code></p>\n<h2 id="native-only-props"><a href="#native-only-props" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Native-Only Props</h2>\n<h3 id="ontouchstart"><a href="#ontouchstart" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>onTouchStart</h3>\n<p><code class="language-text">type: function</code></p>\n<p>The optional <code class="language-text">onTouchStart</code> prop takes a function that is called on every touch event on the chart (when using <code class="language-text">victory-native</code>). The most common use of <code class="language-text">onTouchStart</code> is to prevent the chart’s parent <code class="language-text">ScrollView</code> from scrolling, so that the chart and container can be interacted with unencumbered. The function accepts a single parameter, <code class="language-text">event</code>, a React Native <a href="https://facebook.github.io/react-native/docs/gesture-responder-system.html#responder-lifecycle">Synthetic Event</a>. Also see <code class="language-text">onTouchEnd</code>.</p>\n<p><em>example:</em></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ScrollView</span> <span class="token attr-name">scrollEnabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>scrollEnabled<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VictoryChart</span>\n    <span class="token attr-name">containerComponent</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>\n      <span class="token operator">&lt;</span>VictoryContainer\n        onTouchStart<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollEnabled<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onTouchEnd</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollEnabled<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">}</span>\n  <span class="token operator">></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VictoryBar</span><span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>VictoryChart</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ScrollView</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<h3 id="ontouchend"><a href="#ontouchend" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>onTouchEnd</h3>\n<p><code class="language-text">type: function</code></p>\n<p>The optional <code class="language-text">onTouchEnd</code> prop takes a function that is called at the conclusion of every touch event on the chart (when using <code class="language-text">victory-native</code>). The most common use of <code class="language-text">onTouchEnd</code> is to prevent the chart’s parent <code class="language-text">ScrollView</code> from scrolling, so that the chart and container can be interacted with unencumbered. The function accepts a single parameter, <code class="language-text">event</code>, a React Native <a href="https://facebook.github.io/react-native/docs/gesture-responder-system.html#responder-lifecycle">Synthetic Event</a>. Also see <code class="language-text">onTouchStart</code>.</p>',frontmatter:{id:33,scope:null,title:"Common Container Props"},fields:{slug:"/docs/common-container-props/"}}},pathContext:{slug:"/docs/common-container-props/"}}}});
//# sourceMappingURL=path---docs-common-container-props-37c3178c12e913903c53.js.map