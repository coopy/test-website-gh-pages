webpackJsonp([0x7c6b11da663e],{827:function(e,a){e.exports={data:{markdownRemark:{html:'<h1 id="victoryaxis"><a href="#victoryaxis" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>VictoryAxis</h1>\n<p>VictoryAxis renders a single axis which can be used on its own or composed with <a href="https://formidable.com/open-source/victory/docs/victory-chart"><code class="language-text">VictoryChart</code></a>.</p>\n<pre class="pre"><code class="language-playground">&lt;svg width={400} height={400}&gt;\n  &lt;VictoryAxis crossAxis\n    width={400}\n    height={400}\n    domain={[-10, 10]}\n    theme={VictoryTheme.material}\n    offsetY={200}\n    standalone={false}\n  /&gt;\n  &lt;VictoryAxis dependentAxis crossAxis\n    width={400}\n    height={400}\n    domain={[-10, 10]}\n    theme={VictoryTheme.material}\n    offsetX={200}\n    standalone={false}\n  /&gt;\n&lt;/svg&gt;</code></pre>\n<h2 id="props"><a href="#props" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Props</h2>\n<h3 id="animate"><a href="#animate" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>animate</h3>\n<p><code class="language-text">type: boolean || object</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">animate</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#animate">Read about it here</a></p>\n<p>See the <a href="https://formidable.com/open-source/victory/guides/animations">Animations Guide</a> for more detail on animations</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">animate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n  duration<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>\n  easing<span class="token punctuation">:</span> <span class="token string">"bounce"</span>\n<span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="axiscomponent"><a href="#axiscomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>axisComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">axisComponent</code> prop takes a component instance which will be responsible for rendering an axis line. The new element created from the passed <code class="language-text">axisComponent</code> will be provided with the following props calculated by <code class="language-text">VictoryAxis</code>: <code class="language-text">x1</code>, <code class="language-text">y1</code>, <code class="language-text">x2</code>, <code class="language-text">y2</code>, <code class="language-text">style</code> and <code class="language-text">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If an <code class="language-text">axisComponent</code> is not provided, <code class="language-text">VictoryAxis</code> will use its default <a href="https://formidable.com/open-source/victory/docs/victory-primitives#linesegment">LineSegment component</a>.</p>\n<p><em>default:</em> <code class="language-text">axisComponent={&lt;LineSegment type={&quot;axis&quot;}/&gt;}</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">axisComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LineSegment</span> <span class="token attr-name">events</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> onClick<span class="token punctuation">:</span> handleClick <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="axislabelcomponent"><a href="#axislabelcomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>axisLabelComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">axisLabelComponent</code> prop takes a component instance which will be used to render the axis label. The new element created from the passed <code class="language-text">axisLabelComponent</code> will be supplied with the following props: <code class="language-text">x</code>, <code class="language-text">y</code>, <code class="language-text">verticalAnchor</code>, <code class="language-text">textAnchor</code>, <code class="language-text">angle</code>, <code class="language-text">transform</code>, <code class="language-text">style</code> and <code class="language-text">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class="language-text">axisLabelComponent</code> is omitted, a new <a href="https://formidable.com/open-source/victory/docs/victory-label"><code class="language-text">VictoryLabel</code></a> will be created with props described above.</p>\n<p><em>default:</em> <code class="language-text">axisLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">axisLabelComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VictoryLabel</span> <span class="token attr-name">dy</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="containercomponent"><a href="#containercomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>containerComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">containerComponent</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#containercomponent">Read about it here</a></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">containerComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VictoryZoomContainer</span> <span class="token attr-name">zoomDimension</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="crossaxis"><a href="#crossaxis" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>crossAxis</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p>The <code class="language-text">crossAxis</code> boolean prop specifies whether a given axis is intended to cross another axis. When this prop is true, zeroes will be removed from the array of ticks so that they do not clutter the origin of the chart.</p>\n<p><em>Note:</em> When <code class="language-text">VictoryAxis</code> is nested within <code class="language-text">VictoryChart</code>, <code class="language-text">VictoryChart</code> will determine a value for the <code class="language-text">crossAxis</code> prop based on domain, but this prop may be overridden by supplying a <code class="language-text">crossAxis</code> prop directly to the <code class="language-text">VictoryAxis</code> child component.</p>\n<p><em>default:</em> <code class="language-text">crossAxis={false}</code> for standalone axes</p>\n<h3 id="dependentaxis"><a href="#dependentaxis" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>dependentAxis</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p>The <code class="language-text">dependentAxis</code> boolean prop specifies whether the axis corresponds to the dependent variable (usually y). This prop is useful when composing <code class="language-text">VictoryAxis</code> with other components to form a chart.</p>\n<p><em>default:</em> <code class="language-text">dependentAxis={false}</code></p>\n<pre class="pre"><code class="language-playground">&lt;VictoryAxis dependentAxis /&gt;</code></pre>\n<h3 id="domain"><a href="#domain" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>domain</h3>\n<p><code class="language-text">type: array[low, high] || { x: [low, high], y: [low, high] }</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">domain</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#domain">Read about it here</a></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">domain<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="domainpadding"><a href="#domainpadding" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>domainPadding</h3>\n<p><code class="language-text">type: number || array[left, right] || { x: [left, right], y: [bottom, top] }</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">domainPadding</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#domainpadding">Read about it here</a></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">domainPadding<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>x<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="events"><a href="#events" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>events</h3>\n<p><code class="language-text">type array[object]</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">events</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#events">Read about it here</a></p>\n<p>See the <a href="https://formidable.com/open-source/victory/guides/events">Events Guide</a> for more information on defining events.</p>\n<p><strong>note:</strong> valid event targets for <code class="language-text">VictoryAxis</code> are “axis”, “axisLabel”, “grid”, “ticks”, and “tickLabels”.\nTargets that correspond to only one element {“axis” and “axisLabel”) should use the special eventKey “all”.</p>\n<h3 id="externaleventmutations"><a href="#externaleventmutations" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>externalEventMutations</h3>\n<p><code class="language-text">type: array[object]</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">externalEventMutations</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#externalEventsMutations">Read about it in detail</a></p>\n<h3 id="fixlabeloverlap"><a href="#fixlabeloverlap" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>fixLabelOverlap</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p>When true, this prop reduces the number of tick labels to fit the length of the axis. Labels are\nremoved at approximately even intervals from the original array of labels. This feature only works\nwell for labels that are approximately evenly spaced.</p>\n<p><em>default:</em> <code class="language-text">fixLabelOverlap={false}</code></p>\n<h3 id="gridcomponent"><a href="#gridcomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>gridComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">gridComponent</code> prop takes a component instance which will be responsible for rendering a grid element. The new element created from the passed <code class="language-text">gridComponent</code> will be provided with the following props calculated by <code class="language-text">VictoryAxis</code>: <code class="language-text">x1</code>, <code class="language-text">y1</code>, <code class="language-text">x2</code>, <code class="language-text">y2</code>, <code class="language-text">tick</code>, <code class="language-text">style</code> and <code class="language-text">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class="language-text">gridComponent</code> is not provided, <code class="language-text">VictoryAxis</code> will use its default <a href="">LinSegmente component</a>.</p>\n<p><em>default:</em> <code class="language-text">gridComponent={&lt;LineSegment type={&quot;grid&quot;}/&gt;}</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">gridComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LineSegment</span> <span class="token attr-name">events</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> onClick<span class="token punctuation">:</span> handleClick <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="groupcomponent"><a href="#groupcomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>groupComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">groupComponent</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#groupcomponent">Read about it here</a></p>\n<p><em>default:</em> <code class="language-text">&lt;g/&gt;</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">groupComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(10, 10)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="height"><a href="#height" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>height</h3>\n<p><code class="language-text">type: number</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">height</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#height">Read about it here</a></p>\n<p><em>default (provided by default theme):</em> <code class="language-text">height={300}</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">height<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">400</span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="invertaxis"><a href="#invertaxis" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>invertAxis</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p>The <code class="language-text">invertAxis</code> boolean prop specifies whether the domain for a given axis should be inverted. By default, axes will be displayed with lower values on the bottom / left, and higher values on the top / right regardless of orientation.</p>\n<p><em>default:</em> <code class="language-text">invertAxis={false}</code></p>\n<h3 id="label"><a href="#label" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>label</h3>\n<p><code class="language-text">type: string</code></p>\n<p>The <code class="language-text">label</code> prop defines the label that will appear with the axis. This prop should be given as a string.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryAxis\n  label=&quot;Time (ms)&quot;\n/&gt;</code></pre>\n<h3 id="maxdomain"><a href="#maxdomain" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>maxDomain</h3>\n<p><code class="language-text">type: number || { x: number, y: number }</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">maxDomain</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#maxDomain">Read about it in detail</a></p>\n<pre class="pre"><code class="language-playground">&lt;VictoryAxis\n  tickValues={[2, 3, 4, 5]}\n  maxDomain={{ x: 3 }}\n/&gt;</code></pre>\n<h3 id="mindomain"><a href="#mindomain" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>minDomain</h3>\n<p><code class="language-text">type: number || { x: number, y: number }</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">minDomain</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#minDomain">Read about it in detail</a></p>\n<pre class="pre"><code class="language-playground">&lt;VictoryAxis\n  tickValues={[2, 3, 4, 5]}\n  minDomain={{ x: 0 }}\n/&gt;</code></pre>\n<h3 id="name"><a href="#name" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>name</h3>\n<p><code class="language-text">type: string</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">name</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#name">Read about it here</a></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">name<span class="token operator">=</span><span class="token string">"series-1"</span></code></pre>\n      </div>\n<h3 id="offsetx"><a href="#offsetx" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>offsetX</h3>\n<p><code class="language-text">type: number</code></p>\n<p>The <code class="language-text">offsetX</code> prop defines how far from the edge of its permitted area an axis should be offset in the x direction. If this prop is not given, the offset will be calculated based on font size, axis orientation, and label padding. When <code class="language-text">VictoryAxis</code> is used with <code class="language-text">VictoryChart</code>, <code class="language-text">VictoryChart</code> will determine a value for <code class="language-text">offsetX</code> that makes the axes line up correctly, but this value may be overridden by supplying an <code class="language-text">offsetX</code> prop directly to the <code class="language-text">VictoryAxis</code> child component.</p>\n<p><strong>note:</strong> The <code class="language-text">offsetX</code> prop is relative to the edge corresponding to the orientation of the axis, <em>e.g.</em> the left edge when <code class="language-text">orientation=&quot;left&quot;</code>.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryAxis dependentAxis\n  offsetX={225}\n/&gt;</code></pre>\n<h3 id="offsety"><a href="#offsety" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>offsetY</h3>\n<p><code class="language-text">type: number</code></p>\n<p>The <code class="language-text">offsetY</code> prop defines how far from the edge of its permitted area an axis should be offset in the y direction. If this prop is not given, the offset will be calculated based on font size, axis orientation, and label padding. When <code class="language-text">VictoryAxis</code> is used with <code class="language-text">VictoryChart</code>, <code class="language-text">VictoryChart</code> will determine a value for <code class="language-text">offsetY</code> that makes the axes line up correctly, but this value may be overridden by supplying an <code class="language-text">offsetY</code> prop directly to the <code class="language-text">VictoryAxis</code> child component.</p>\n<p><strong>note:</strong> The <code class="language-text">offsetY</code> prop is relative to the edge corresponding to the orientation of the axis, <em>e.g.</em> the bottom edge when <code class="language-text">orientation=&quot;bottom&quot;</code>.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryAxis\n  offsetY={150}\n/&gt;</code></pre>\n<h3 id="orientation"><a href="#orientation" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>orientation</h3>\n<p><code class="language-text">type: &quot;top&quot; || &quot;bottom&quot; || &quot;left&quot; || &quot;right&quot;</code></p>\n<p>The <code class="language-text">orientation</code> prop specifies the position and orientation of your axis. Options are “top”, “bottom”, “left”, and “right”.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryAxis\n  orientation=&quot;top&quot;\n/&gt;</code></pre>\n<h3 id="padding"><a href="#padding" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>padding</h3>\n<p><code class="language-text">type: number || { top: number, bottom: number, left: number, right: number }</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">padding</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#padding">Read about it here</a></p>\n<p><em>default (provided by default theme):</em> <code class="language-text">padding={50}</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">padding<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> top<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">60</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="range"><a href="#range" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>range</h3>\n<p><code class="language-text">type: array[low, high] || { x: [low, high], y: [low, high] }</code></p>\n<p><strong>The <code class="language-text">range</code> prop is usually controlled by <code class="language-text">VictoryChart</code>. It will not typically be necessary to set a <code class="language-text">range</code> prop manually</strong></p>\n<p><a href="https://formidable.com/open-source/victory/docs/common-props#range">Read about the <code class="language-text">range</code> prop in detail</a></p>\n<h3 id="scale"><a href="#scale" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>scale</h3>\n<p><code class="language-text">type: scale || { x: scale, y: scale }</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">scale</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#scale">Read about it here</a>\nOptions for scale include “linear”, “time”, “log”, “sqrt” and the <code class="language-text">d3-scale</code> functions that correspond to these options.</p>\n<p><strong>note:</strong> Though <code class="language-text">VictoryAxis</code> can take a <code class="language-text">scale</code> prop with scales defined for both <code class="language-text">x</code> and <code class="language-text">y</code>, only the scale that corresponds the given axis will be used.</p>\n<p><em>default:</em> <code class="language-text">scale=&quot;linear&quot;</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">scale<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token string">"time"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="sharedevents"><a href="#sharedevents" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>sharedEvents</h3>\n<p><strong>The <code class="language-text">sharedEvents</code> prop is used internally to coordinate events between components. It should not be set manually.</strong></p>\n<h3 id="singlequadrantdomainpadding"><a href="#singlequadrantdomainpadding" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>singleQuadrantDomainPadding</h3>\n<p><code class="language-text">type: boolean || { x: boolean, y: boolean }</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">singleQuadrantDomainPadding</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#singlequadrantdomainpadding">Read about it here</a></p>\n<h3 id="standalone"><a href="#standalone" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>standalone</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">standalone</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#standalone">Read about it here</a></p>\n<p><strong>note:</strong> When <code class="language-text">VictoryAxis</code> is nested within a component like <code class="language-text">VictoryChart</code>, this prop will be set to <code class="language-text">false</code></p>\n<p><em>default:</em> <code class="language-text">standalone={true}</code></p>\n<pre class="pre"><code class="language-playground">&lt;svg width={400} height={400}&gt;\n  &lt;VictoryAxis crossAxis\n    width={400}\n    height={400}\n    domain={[-10, 10]}\n    theme={VictoryTheme.material}\n    offsetY={200}\n    standalone={false}\n  /&gt;\n  &lt;VictoryAxis dependentAxis crossAxis\n    width={400}\n    height={400}\n    domain={[-10, 10]}\n    theme={VictoryTheme.material}\n    offsetX={200}\n    standalone={false}\n  /&gt;\n&lt;/svg&gt;</code></pre>\n<h3 id="style"><a href="#style" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>style</h3>\n<p><code class="language-text">type: { axis: object, axisLabel: object, grid: object, ticks: object, tickLabels: object }</code></p>\n<p>The <code class="language-text">style</code> prop defines the style of the component. The style prop should be given as an object with styles defined for <code class="language-text">parent</code>, <code class="language-text">axis</code>, <code class="language-text">axisLabel</code>, <code class="language-text">grid</code>, <code class="language-text">ticks</code>, and <code class="language-text">tickLabels</code>. Any valid svg styles are supported, but <code class="language-text">width</code>, <code class="language-text">height</code>, and <code class="language-text">padding</code> should be specified via props as they determine relative layout for components in VictoryChart. Functional styles may be defined for <code class="language-text">grid</code>, <code class="language-text">tick</code>, and <code class="language-text">tickLabel</code> style properties, and they will be evaluated with each tick.</p>\n<p><strong>note:</strong> When a component is rendered as a child of another Victory component, or within a custom <code class="language-text">&lt;svg&gt;</code> element with <code class="language-text">standalone={false}</code> parent styles will be applied to the enclosing <code class="language-text">&lt;g&gt;</code> tag. Many styles that can be applied to a parent <code class="language-text">&lt;svg&gt;</code> will not be expressed when applied to a <code class="language-text">&lt;g&gt;</code>.</p>\n<p><strong>note:</strong> custom <code class="language-text">angle</code> and <code class="language-text">verticalAnchor</code> properties may be included in <code class="language-text">labels</code> styles.</p>\n<p><em>default (provided by default theme):</em> See <a href="https://github.com/FormidableLabs/victory/blob/master/packages/victory-core/src/victory-theme/grayscale.js">grayscale theme</a> for more detail</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryAxis\n  label=&quot;Label&quot;\n  style={{\n    axis: {stroke: &quot;#756f6a&quot;},\n    axisLabel: {fontSize: 20, padding: 30},\n    grid: {stroke: (t) =&gt; t &gt; 0.5 ? &quot;red&quot; : &quot;grey&quot;},\n    ticks: {stroke: &quot;grey&quot;, size: 5},\n    tickLabels: {fontSize: 15, padding: 5}\n  }}\n/&gt;</code></pre>\n<h3 id="theme"><a href="#theme" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>theme</h3>\n<p><code class="language-text">type: object</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">theme</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#theme">Read about it here</a></p>\n<p>See the <a href="https://formidable.com/open-source/victory/guides/themes">Themes Guide</a> for information about creating custom themes.</p>\n<p><em>default:</em> <code class="language-text">theme={VictoryTheme.grayscale}</code></p>\n<p><em>Note:</em> Use the <code class="language-text">dependentAxis</code> and <code class="language-text">independentAxis</code> namespaces to theme axes by type. These namespaces will be merged with any props and styles supplied in the <code class="language-text">axis</code> namespace.</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">theme<span class="token operator">=</span><span class="token punctuation">{</span>VictoryTheme<span class="token punctuation">.</span>material<span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="tickcomponent"><a href="#tickcomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>tickComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">tickComponent</code> prop takes a component instance which will be responsible for rendering a tick element. The new element created from the passed <code class="language-text">tickComponent</code> will be provided with the following props calculated by <code class="language-text">VictoryAxis</code>: <code class="language-text">x1</code>, <code class="language-text">y1</code>, <code class="language-text">x2</code>, <code class="language-text">y2</code>, <code class="language-text">tick</code>, <code class="language-text">style</code> and <code class="language-text">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If a <code class="language-text">tickComponent</code> is not provided, <code class="language-text">VictoryAxis</code> will use its default <a href="">LinSegmente component</a>.</p>\n<p><em>default:</em> <code class="language-text">tickComponent={&lt;LineSegment type={&quot;tick&quot;}/&gt;}</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">tickComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LineSegment</span> <span class="token attr-name">events</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> onClick<span class="token punctuation">:</span> handleClick <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="tickcount"><a href="#tickcount" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>tickCount</h3>\n<p><code class="language-text">type: number</code></p>\n<p>The <code class="language-text">tickCount</code> prop specifies approximately how many ticks should be drawn on the axis. If an array of ticks is supplied in <code class="language-text">tickValues</code> or <code class="language-text">tickFormat</code>, the <code class="language-text">tickCount</code> prop will be used to <em>downsample</em> the provided array to the specified length. If <code class="language-text">tickValues</code> are not explicitly provided, this value is used by <a href="https://github.com/d3/d3-scale">d3Scale</a> to calculate an <em>approximate</em> number of ticks. <a href="https://github.com/d3/d3-scale">d3Scale</a> prioritizes returning “nice” values and evenly spaced ticks over an exact number of ticks. This prop must be given as a positive integer.</p>\n<h3 id="tickformat"><a href="#tickformat" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>tickFormat</h3>\n<p><code class="language-text">type: array || function</code></p>\n<p>The <code class="language-text">tickFormat</code> prop specifies how tick values should be labeled. The <code class="language-text">tickFormat</code> prop can be given as an array of values to display for each tick, or as a function to be applied to every <code class="language-text">tickValue</code>. When given as a function, <code class="language-text">tickFormat</code> will be called with the following arguments: <code class="language-text">tick</code> - the individual tick value, <code class="language-text">index</code> - the index of the tick in the array, and <code class="language-text">ticks</code> - the entire array of ticks.</p>\n<pre class="pre"><code class="language-playground">  &lt;VictoryAxis\n    tickValues={[2.11, 3.9, 6.1, 8.05]}\n    tickFormat={(t) =&gt; `${Math.round(t)}k`}\n  /&gt;</code></pre>\n<h3 id="ticklabelcomponent"><a href="#ticklabelcomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>tickLabelComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">tickLabelComponent</code> prop takes a component instance which will be used to render the axis label. The new element created from the passed <code class="language-text">tickLabelComponent</code> will be supplied with the following props: <code class="language-text">x</code>, <code class="language-text">y</code>, <code class="language-text">text</code>, <code class="language-text">verticalAnchor</code>, <code class="language-text">textAnchor</code>, <code class="language-text">angle</code>, <code class="language-text">transform</code>, <code class="language-text">style</code> and <code class="language-text">events</code>. Any of these props may be overridden by passing in props to the supplied component, or modified or ignored within the custom component itself. If <code class="language-text">tickLabelComponent</code> is omitted, a new <a href="https://formidable.com/open-source/victory/docs/victory-label"><code class="language-text">VictoryLabel</code></a> will be created with props described above.</p>\n<p><em>default:</em> <code class="language-text">tickLabelComponent={&lt;VictoryLabel/&gt;}</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">tickLabelComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VictoryLabel</span> <span class="token attr-name">dy</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span></span><span class="token punctuation">/></span></span><span class="token punctuation">}</span></code></pre>\n      </div>\n<h3 id="tickvalues"><a href="#tickvalues" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>tickValues</h3>\n<p><code class="language-text">type: array</code></p>\n<p>The <code class="language-text">tickValues</code> prop explicitly specifies a set of tick values to draw on the axis. This prop should be given as an array of unique values of the same type (<em>i.e.,</em> all numbers). The <code class="language-text">tickValues</code> prop is used to specify the <em>values</em> of each tick, so numeric values are typically appropriate. An array of strings or dates may be supplied for categorical and time series data respectively. Use the <a href="https://formidable.com/open-source/victory/docs/victory-axis#tickformat">tickFormat</a> prop to specify how ticks should be labeled. <em>Note:</em> <code class="language-text">tickValues</code> should be given as a unique array.</p>\n<pre class="pre"><code class="language-playground">  &lt;VictoryAxis tickValues={[2, 4, 6, 8]}/&gt;</code></pre>\n<h3 id="width"><a href="#width" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>width</h3>\n<p><code class="language-text">type: number</code></p>\n<p><code class="language-text">VictoryAxis</code> uses the standard <code class="language-text">width</code> prop. <a href="https://formidable.com/open-source/victory/docs/common-props#width">Read about it here</a></p>\n<p><em>default (provided by default theme):</em> <code class="language-text">width={450}</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx">width<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">400</span><span class="token punctuation">}</span></code></pre>\n      </div>',
frontmatter:{id:5,scope:null,title:"VictoryAxis"},fields:{slug:"/docs/victory-axis/"}}},pathContext:{slug:"/docs/victory-axis/"}}}});
//# sourceMappingURL=path---docs-victory-axis-1c3f1e5f50a7c24ae5c2.js.map