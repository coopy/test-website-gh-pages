webpackJsonp([0xa7c05b6150cb],{847:function(e,t){e.exports={data:{markdownRemark:{html:'<h1 id="victoryselectioncontainer"><a href="#victoryselectioncontainer" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>VictorySelectionContainer</h1>\n<p><code class="language-text">VictorySelectionContainer</code> is used to enable selecting data points within a highlighted region.\nClicking and dragging will select an x-y region, and add the <code class="language-text">active</code> prop to any elements\ncorresponding to data points within the region. Create a select-box control by tying the set of\nselected data points to other elements, such as filtered table.</p>\n<p><code class="language-text">VictorySelectionContainer</code> is similar to <code class="language-text">VictoryBrushContainer</code>. <code class="language-text">VictoryBrushContainer</code> may be\nused to identify the domain of a selected region, whereas <code class="language-text">VictorySelectionContainer</code> may be used to\nidentify a list of data points within a selected region. <code class="language-text">VictoryBrushContainer</code> will also create\npersistent highlighted regions, whereas regions created by <code class="language-text">VictorySelectionContainer</code>\ndisappear after <code class="language-text">onMouseUp</code> events.</p>\n<p><code class="language-text">VictorySelectionContainer</code> may be used with any Victory component that works with an x-y coordinate\nsystem, and should be added as the <code class="language-text">containerComponent</code> of the top-level component.\nHowever, the component that uses it must be standalone\n(<code class="language-text">standalone={true}</code>), which is the default for all top-level Victory components.</p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart containerComponent={&lt;VictorySelectionContainer/&gt;}&gt;\n  &lt;VictoryScatter\n    style={{ data: { fill: (d, active) =&gt; active ? &quot;tomato&quot; : &quot;gray&quot; } }}\n  /&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<h2 id="props"><a href="#props" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Props</h2>\n<p><code class="language-text">VictorySelectionContainer</code> uses a superset of props used by <a href="https://formidable.com/open-source/victory/docs/victory-container">VictoryContainer</a>. All props are optional.</p>\n<h3 id="activateselecteddata"><a href="#activateselecteddata" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>activateSelectedData</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p>When the <code class="language-text">activateSelectedData</code> prop is set to true, the <code class="language-text">active</code> prop will be set to true on all selected data points. When this prop is set to false, the <code class="language-text">onSelection</code> and <code class="language-text">onSelectionCleared</code> callbacks will still fire, but no mutations will occur via Victory’s event system.</p>\n<p><em>default:</em> <code class="language-text">activateSelectedData={true}</code></p>\n<h3 id="disable"><a href="#disable" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>disable</h3>\n<p><code class="language-text">type: boolean</code></p>\n<p>When the <code class="language-text">disable</code> prop is set to <code class="language-text">true</code>, <code class="language-text">VictorySelectionContainer</code> events will not fire.</p>\n<h3 id="onselection"><a href="#onselection" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>onSelection</h3>\n<p><code class="language-text">type: function</code></p>\n<p>The <code class="language-text">onSelection</code> prop accepts a function to be called whenever new data points are selected. The\nfunction is called with the parameters <code class="language-text">points</code> (an array of objects with <code class="language-text">childName</code>, <code class="language-text">eventKey</code>,\nand <code class="language-text">data</code>), <code class="language-text">bounds</code> (an object with min / max arrays specified for <code class="language-text">x</code> and <code class="language-text">y</code>), and <code class="language-text">props</code> (the props used by <code class="language-text">VictorySelectionContainer</code>)</p>\n<p><em>example:</em> <code class="language-text">onSelection={(points, bounds, props) =&gt; handleSelection(points, bounds, props)}</code></p>\n<h3 id="onselectioncleared"><a href="#onselectioncleared" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>onSelectionCleared</h3>\n<p><code class="language-text">type: function</code></p>\n<p>The <code class="language-text">onSelectionCleared</code> prop accepts a function to be called whenever the selection is cleared. The function is called with the props used by <code class="language-text">VictorySelectionContainer</code></p>\n<p><em>example:</em> <code class="language-text">onSelectionCleared={(props) =&gt; handleSelectionCleared(props)}</code></p>\n<h3 id="selectionblacklist"><a href="#selectionblacklist" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>selectionBlacklist</h3>\n<p><code class="language-text">type: array[string]</code></p>\n<p>The <code class="language-text">selectionBlacklist</code> prop is used to exclude data from potential selections. This prop should be given as an array of strings that match the <code class="language-text">name</code> prop of Victory component that should be excluded from selection.</p>\n<p><em>example:</em> <code class="language-text">selectionBlackList={[&quot;first-line&quot;, &quot;second-line&quot;]}</code></p>\n<h3 id="selectioncomponent"><a href="#selectioncomponent" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>selectionComponent</h3>\n<p><code class="language-text">type: element</code></p>\n<p>The <code class="language-text">selectionComponent</code> prop specifies the element to be rendered for the selected area. When\nthis prop is not specified, a <code class="language-text">&lt;rect/&gt;</code> will be rendered. This component will be supplied with the\nfollowing props: <code class="language-text">x</code>, <code class="language-text">y</code>, <code class="language-text">width</code>, <code class="language-text">height</code>, and <code class="language-text">style</code>.</p>\n<p><em>default:</em> <code class="language-text">selectionComponent={&lt;rect/&gt;}</code></p>\n<h3 id="selectiondimension"><a href="#selectiondimension" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>selectionDimension</h3>\n<p><code class="language-text">type: &quot;x&quot; || &quot;y&quot;</code></p>\n<p>When the <code class="language-text">selectionDimension</code> prop is set, the selection will only take the given dimension into account.\nFor example, when <code class="language-text">dimension</code> is set to “x”, the selected area will cover the entire y domain\nregardless of mouse position.</p>\n<p><em>example:</em> <code class="language-text">selectionDimension=&quot;x&quot;</code></p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart\n  containerComponent={\n    &lt;VictorySelectionContainer selectionDimension=&quot;x&quot;/&gt;\n  }\n&gt;\n  &lt;VictoryScatter\n    style={{ data: { fill: (d, active) =&gt; active ? &quot;tomato&quot; : &quot;gray&quot; } }}\n  /&gt;\n&lt;/VictoryChart&gt;</code></pre>\n<h3 id="selectionstyle"><a href="#selectionstyle" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>selectionStyle</h3>\n<p><code class="language-text">type: object</code></p>\n<p>The <code class="language-text">selectionStyle</code> prop should be given as an object of style attributes to be applied to the\n<code class="language-text">selectionComponent</code></p>\n<p><em>default:</em> <code class="language-text">selectionStyle={{stroke: &quot;transparent&quot;, fill: &quot;black&quot;, fillOpacity: 0.1}}</code></p>\n<pre class="pre"><code class="language-playground">&lt;VictoryChart\n  containerComponent={\n    &lt;VictorySelectionContainer\n      selectionStyle={{\n        fill: &quot;tomato&quot;, fillOpacity: 0.5,\n        stroke: &quot;tomato&quot;, strokeWidth: 2\n      }}\n    /&gt;\n  }\n&gt;\n  &lt;VictoryScatter\n    style={{ data: { fill: (d, active) =&gt; active ? &quot;tomato&quot; : &quot;gray&quot; } }}\n  /&gt;\n&lt;/VictoryChart&gt;</code></pre>',frontmatter:{id:23,scope:null,title:"VictorySelectionContainer"},fields:{slug:"/docs/victory-selection-container/"}}},pathContext:{slug:"/docs/victory-selection-container/"}}}});
//# sourceMappingURL=path---docs-victory-selection-container-a43237861024b1c0713d.js.map